

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 14 11:36:18 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Version 2.20
    58                           ; Generated 12/02/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4580 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000000                     
    92                           	psect	idataCOMRAM
    93   002732                     __pidataCOMRAM:
    94                           	callstack 0
    95                           
    96                           ;initializer for _sec
    97   002732  003C               	dw	60
    98                           
    99                           	psect	idataBANK0
   100   002676                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for _once@common$F433
   104   002676  0001               	dw	1
   105                           
   106                           ;initializer for _chance@common$F430
   107   002678  0003               	dw	3
   108                           
   109                           ;initializer for _once@common$F398
   110   00267A  0001               	dw	1
   111                           
   112                           ;initializer for _chance@common$F395
   113   00267C  0003               	dw	3
   114                           
   115                           ;initializer for _once@common$F247
   116   00267E  0001               	dw	1
   117                           
   118                           ;initializer for _chance@common$F244
   119   002680  0003               	dw	3
   120                           
   121                           ;initializer for _once
   122   002682  0001               	dw	1
   123                           
   124                           ;initializer for _chance
   125   002684  0003               	dw	3
   126                           
   127                           ;initializer for read_switches@once
   128   002686  01                 	db	1
   129                           
   130                           ;initializer for _flag
   131   002687  01                 	db	1
   132                           
   133                           ;initializer for _change_Time
   134   002688  30                 	db	48
   135   002689  30                 	db	48
   136   00268A  3A                 	db	58
   137   00268B  30                 	db	48
   138   00268C  30                 	db	48
   139   00268D  3A                 	db	58
   140   00268E  30                 	db	48
   141   00268F  30                 	db	48
   142   002690  00                 	db	0
   143                           
   144                           ;initializer for _time
   145   002691  31                 	db	49
   146   002692  31                 	db	49
   147   002693  3A                 	db	58
   148   002694  35                 	db	53
   149   002695  34                 	db	52
   150   002696  3A                 	db	58
   151   002697  34                 	db	52
   152   002698  34                 	db	52
   153   002699  00                 	db	0
   154                           
   155                           	psect	idataBANK1
   156   002090                     __pidataBANK1:
   157                           	callstack 0
   158                           
   159                           ;initializer for _diplay
   160   002090  56                 	db	86
   161   002091  49                 	db	73
   162   002092  45                 	db	69
   163   002093  57                 	db	87
   164   002094  20                 	db	32
   165   002095  4C                 	db	76
   166   002096  4F                 	db	79
   167   002097  47                 	db	71
   168   002098  20                 	db	32
   169   002099  20                 	db	32
   170   00209A  20                 	db	32
   171   00209B  20                 	db	32
   172   00209C  20                 	db	32
   173   00209D  20                 	db	32
   174   00209E  00                 	db	0
   175   00209F  00                 	db	0
   176   0020A0  00                 	db	0
   177   0020A1  00                 	db	0
   178   0020A2  00                 	db	0
   179   0020A3  00                 	db	0
   180   0020A4  44                 	db	68
   181   0020A5  4F                 	db	79
   182   0020A6  57                 	db	87
   183   0020A7  4E                 	db	78
   184   0020A8  4C                 	db	76
   185   0020A9  4F                 	db	79
   186   0020AA  41                 	db	65
   187   0020AB  44                 	db	68
   188   0020AC  20                 	db	32
   189   0020AD  4C                 	db	76
   190   0020AE  4F                 	db	79
   191   0020AF  47                 	db	71
   192   0020B0  20                 	db	32
   193   0020B1  20                 	db	32
   194   0020B2  00                 	db	0
   195   0020B3  00                 	db	0
   196   0020B4  00                 	db	0
   197   0020B5  00                 	db	0
   198   0020B6  00                 	db	0
   199   0020B7  00                 	db	0
   200   0020B8  43                 	db	67
   201   0020B9  4C                 	db	76
   202   0020BA  45                 	db	69
   203   0020BB  41                 	db	65
   204   0020BC  52                 	db	82
   205   0020BD  20                 	db	32
   206   0020BE  4C                 	db	76
   207   0020BF  4F                 	db	79
   208   0020C0  47                 	db	71
   209   0020C1  20                 	db	32
   210   0020C2  20                 	db	32
   211   0020C3  20                 	db	32
   212   0020C4  20                 	db	32
   213   0020C5  20                 	db	32
   214   0020C6  00                 	db	0
   215   0020C7  00                 	db	0
   216   0020C8  00                 	db	0
   217   0020C9  00                 	db	0
   218   0020CA  00                 	db	0
   219   0020CB  00                 	db	0
   220   0020CC  53                 	db	83
   221   0020CD  45                 	db	69
   222   0020CE  54                 	db	84
   223   0020CF  20                 	db	32
   224   0020D0  54                 	db	84
   225   0020D1  49                 	db	73
   226   0020D2  4D                 	db	77
   227   0020D3  45                 	db	69
   228   0020D4  20                 	db	32
   229   0020D5  20                 	db	32
   230   0020D6  20                 	db	32
   231   0020D7  20                 	db	32
   232   0020D8  20                 	db	32
   233   0020D9  20                 	db	32
   234   0020DA  00                 	db	0
   235   0020DB  00                 	db	0
   236   0020DC  00                 	db	0
   237   0020DD  00                 	db	0
   238   0020DE  00                 	db	0
   239   0020DF  00                 	db	0
   240   0020E0  43                 	db	67
   241   0020E1  48                 	db	72
   242   0020E2  41                 	db	65
   243   0020E3  4E                 	db	78
   244   0020E4  47                 	db	71
   245   0020E5  45                 	db	69
   246   0020E6  20                 	db	32
   247   0020E7  50                 	db	80
   248   0020E8  41                 	db	65
   249   0020E9  53                 	db	83
   250   0020EA  53                 	db	83
   251   0020EB  57                 	db	87
   252   0020EC  4F                 	db	79
   253   0020ED  52                 	db	82
   254   0020EE  44                 	db	68
   255   0020EF  00                 	db	0
   256   0020F0  00                 	db	0
   257   0020F1  00                 	db	0
   258   0020F2  00                 	db	0
   259   0020F3  00                 	db	0
   260   0020F4  2D                 	db	45
   261   0020F5  3E                 	db	62
   262   0020F6  00                 	db	0
   263   0020F7  00                 	db	0
   264   0020F8  00                 	db	0
   265   0020F9  00                 	db	0
   266   0020FA  00                 	db	0
   267   0020FB  00                 	db	0
   268   0020FC  00                 	db	0
   269   0020FD  00                 	db	0
   270   0020FE  00                 	db	0
   271   0020FF  00                 	db	0
   272   002100  00                 	db	0
   273   002101  00                 	db	0
   274   002102  00                 	db	0
   275   002103  00                 	db	0
   276   002104  00                 	db	0
   277   002105  00                 	db	0
   278   002106  00                 	db	0
   279   002107  00                 	db	0
   280                           
   281                           ;initializer for _gear
   282   002108  4F                 	db	79
   283   002109  4E                 	db	78
   284   00210A  00                 	db	0
   285   00210B  47                 	db	71
   286   00210C  52                 	db	82
   287   00210D  00                 	db	0
   288   00210E  47                 	db	71
   289   00210F  4E                 	db	78
   290   002110  00                 	db	0
   291   002111  47                 	db	71
   292   002112  31                 	db	49
   293   002113  00                 	db	0
   294   002114  47                 	db	71
   295   002115  32                 	db	50
   296   002116  00                 	db	0
   297   002117  47                 	db	71
   298   002118  33                 	db	51
   299   002119  00                 	db	0
   300   00211A  47                 	db	71
   301   00211B  34                 	db	52
   302   00211C  00                 	db	0
   303   00211D  47                 	db	71
   304   00211E  35                 	db	53
   305   00211F  00                 	db	0
   306   002120  43                 	db	67
   307   002121  5F                 	db	95
   308   002122  00                 	db	0
   309   002123  43                 	db	67
   310   002124  4C                 	db	76
   311   002125  00                 	db	0
   312   002126  53                 	db	83
   313   002127  54                 	db	84
   314   002128  00                 	db	0
   315   002129  43                 	db	67
   316   00212A  50                 	db	80
   317   00212B  00                 	db	0
   318   000000                     _RCREG	set	4014
   319   000000                     _TXREG	set	4013
   320   000000                     _SPBRG	set	4015
   321   000000                     _EECON2	set	4007
   322   000000                     _PORTD	set	3971
   323   000000                     _ADRESL	set	4035
   324   000000                     _ADRESH	set	4036
   325   000000                     _RC1	set	31761
   326   000000                     _VCFG1	set	32269
   327   000000                     _GODONE	set	32273
   328   000000                     _TRISCbits	set	3988
   329   000000                     _ADCON0	set	4034
   330   000000                     _RCIF	set	31989
   331   000000                     _TMR0IE	set	32661
   332   000000                     _PSA	set	32427
   333   000000                     _TMR0ON	set	32431
   334   000000                     _T0CS	set	32429
   335   000000                     _TMR0IF	set	32658
   336   000000                     _RC5	set	31765
   337   000000                     _RC0	set	31760
   338   000000                     _PEIE	set	32662
   339   000000                     _GO	set	32273
   340   000000                     _ADON	set	32272
   341   000000                     _VCFG0	set	32268
   342   000000                     _ADCS2	set	32258
   343   000000                     _ADCS1	set	32257
   344   000000                     _ADCS0	set	32256
   345   000000                     _ACQT0	set	32259
   346   000000                     _ACQT1	set	32260
   347   000000                     _ACQT2	set	32261
   348   000000                     _PORTBbits	set	3969
   349   000000                     _TRISB	set	3987
   350   000000                     _ADFM	set	32263
   351   000000                     _TMR0	set	4054
   352   000000                     _T08BIT	set	32430
   353   000000                     _GIE	set	32663
   354   000000                     _PIR2bits	set	4001
   355   000000                     _EECON1bits	set	4006
   356   000000                     _EEDATA	set	4008
   357   000000                     _EEADR	set	4009
   358   000000                     _TRISD	set	3989
   359   000000                     _TRISC	set	3988
   360   000000                     _TXIF	set	31988
   361   000000                     _RCSTA	set	4011
   362   000000                     _TXSTA	set	4012
   363                           
   364                           	psect	mediumconst
   365   007EA8                     __pmediumconst:
   366                           	callstack 0
   367   007EA8  00                 	db	0
   368   007EA9                     STR_17:
   369   007EA9  44                 	db	68	;'D'
   370   007EAA  4F                 	db	79	;'O'
   371   007EAB  57                 	db	87	;'W'
   372   007EAC  4E                 	db	78	;'N'
   373   007EAD  4C                 	db	76	;'L'
   374   007EAE  4F                 	db	79	;'O'
   375   007EAF  41                 	db	65	;'A'
   376   007EB0  44                 	db	68	;'D'
   377   007EB1  20                 	db	32
   378   007EB2  4C                 	db	76	;'L'
   379   007EB3  4F                 	db	79	;'O'
   380   007EB4  47                 	db	71	;'G'
   381   007EB5  20                 	db	32
   382   007EB6  49                 	db	73	;'I'
   383   007EB7  53                 	db	83	;'S'
   384   007EB8  20                 	db	32
   385   007EB9  45                 	db	69	;'E'
   386   007EBA  4D                 	db	77	;'M'
   387   007EBB  50                 	db	80	;'P'
   388   007EBC  54                 	db	84	;'T'
   389   007EBD  59                 	db	89	;'Y'
   390   007EBE  0A                 	db	10
   391   007EBF  0D                 	db	13
   392   007EC0  00                 	db	0
   393   007EC1                     STR_16:
   394   007EC1  44                 	db	68	;'D'
   395   007EC2  4F                 	db	79	;'O'
   396   007EC3  57                 	db	87	;'W'
   397   007EC4  4E                 	db	78	;'N'
   398   007EC5  4C                 	db	76	;'L'
   399   007EC6  4F                 	db	79	;'O'
   400   007EC7  41                 	db	65	;'A'
   401   007EC8  44                 	db	68	;'D'
   402   007EC9  20                 	db	32
   403   007ECA  43                 	db	67	;'C'
   404   007ECB  4F                 	db	79	;'O'
   405   007ECC  4D                 	db	77	;'M'
   406   007ECD  50                 	db	80	;'P'
   407   007ECE  4C                 	db	76	;'L'
   408   007ECF  45                 	db	69	;'E'
   409   007ED0  54                 	db	84	;'T'
   410   007ED1  45                 	db	69	;'E'
   411   007ED2  44                 	db	68	;'D'
   412   007ED3  00                 	db	0
   413   007ED4                     STR_7:
   414   007ED4  20                 	db	32
   415   007ED5  20                 	db	32
   416   007ED6  55                 	db	85	;'U'
   417   007ED7  53                 	db	83	;'S'
   418   007ED8  45                 	db	69	;'E'
   419   007ED9  52                 	db	82	;'R'
   420   007EDA  20                 	db	32
   421   007EDB  42                 	db	66	;'B'
   422   007EDC  4C                 	db	76	;'L'
   423   007EDD  4F                 	db	79	;'O'
   424   007EDE  43                 	db	67	;'C'
   425   007EDF  4B                 	db	75	;'K'
   426   007EE0  45                 	db	69	;'E'
   427   007EE1  44                 	db	68	;'D'
   428   007EE2  20                 	db	32
   429   007EE3  20                 	db	32
   430   007EE4  00                 	db	0
   431   007EE5                     STR_5:
   432   007EE5  20                 	db	32
   433   007EE6  57                 	db	87	;'W'
   434   007EE7  52                 	db	82	;'R'
   435   007EE8  4F                 	db	79	;'O'
   436   007EE9  4E                 	db	78	;'N'
   437   007EEA  47                 	db	71	;'G'
   438   007EEB  20                 	db	32
   439   007EEC  50                 	db	80	;'P'
   440   007EED  41                 	db	65	;'A'
   441   007EEE  53                 	db	83	;'S'
   442   007EEF  53                 	db	83	;'S'
   443   007EF0  57                 	db	87	;'W'
   444   007EF1  4F                 	db	79	;'O'
   445   007EF2  52                 	db	82	;'R'
   446   007EF3  44                 	db	68	;'D'
   447   007EF4  20                 	db	32
   448   007EF5  00                 	db	0
   449   007EF6                     STR_2:
   450   007EF6  20                 	db	32
   451   007EF7  45                 	db	69	;'E'
   452   007EF8  4E                 	db	78	;'N'
   453   007EF9  54                 	db	84	;'T'
   454   007EFA  45                 	db	69	;'E'
   455   007EFB  52                 	db	82	;'R'
   456   007EFC  20                 	db	32
   457   007EFD  50                 	db	80	;'P'
   458   007EFE  41                 	db	65	;'A'
   459   007EFF  53                 	db	83	;'S'
   460   007F00  53                 	db	83	;'S'
   461   007F01  57                 	db	87	;'W'
   462   007F02  4F                 	db	79	;'O'
   463   007F03  52                 	db	82	;'R'
   464   007F04  44                 	db	68	;'D'
   465   007F05  20                 	db	32
   466   007F06  00                 	db	0
   467   007F07                     STR_1:
   468   007F07  20                 	db	32
   469   007F08  54                 	db	84	;'T'
   470   007F09  49                 	db	73	;'I'
   471   007F0A  4D                 	db	77	;'M'
   472   007F0B  45                 	db	69	;'E'
   473   007F0C  20                 	db	32
   474   007F0D  20                 	db	32
   475   007F0E  20                 	db	32
   476   007F0F  20                 	db	32
   477   007F10  20                 	db	32
   478   007F11  45                 	db	69	;'E'
   479   007F12  56                 	db	86	;'V'
   480   007F13  20                 	db	32
   481   007F14  20                 	db	32
   482   007F15  53                 	db	83	;'S'
   483   007F16  50                 	db	80	;'P'
   484   007F17  00                 	db	0
   485   007F18                     STR_9:
   486   007F18  23                 	db	35
   487   007F19  20                 	db	32
   488   007F1A  20                 	db	32
   489   007F1B  20                 	db	32
   490   007F1C  54                 	db	84	;'T'
   491   007F1D  49                 	db	73	;'I'
   492   007F1E  4D                 	db	77	;'M'
   493   007F1F  45                 	db	69	;'E'
   494   007F20  20                 	db	32
   495   007F21  20                 	db	32
   496   007F22  20                 	db	32
   497   007F23  45                 	db	69	;'E'
   498   007F24  56                 	db	86	;'V'
   499   007F25  20                 	db	32
   500   007F26  53                 	db	83	;'S'
   501   007F27  50                 	db	80	;'P'
   502   007F28  00                 	db	0
   503   007F29                     STR_12:
   504   007F29  23                 	db	35
   505   007F2A  20                 	db	32
   506   007F2B  20                 	db	32
   507   007F2C  54                 	db	84	;'T'
   508   007F2D  49                 	db	73	;'I'
   509   007F2E  4D                 	db	77	;'M'
   510   007F2F  45                 	db	69	;'E'
   511   007F30  20                 	db	32
   512   007F31  45                 	db	69	;'E'
   513   007F32  56                 	db	86	;'V'
   514   007F33  20                 	db	32
   515   007F34  53                 	db	83	;'S'
   516   007F35  50                 	db	80	;'P'
   517   007F36  0A                 	db	10
   518   007F37  0D                 	db	13
   519   007F38  00                 	db	0
   520   007F39                     STR_3:
   521   007F39  20                 	db	32
   522   007F3A  20                 	db	32
   523   007F3B  20                 	db	32
   524   007F3C  57                 	db	87	;'W'
   525   007F3D  45                 	db	69	;'E'
   526   007F3E  4C                 	db	76	;'L'
   527   007F3F  2D                 	db	45
   528   007F40  43                 	db	67	;'C'
   529   007F41  4F                 	db	79	;'O'
   530   007F42  4D                 	db	77	;'M'
   531   007F43  45                 	db	69	;'E'
   532   007F44  20                 	db	32
   533   007F45  54                 	db	84	;'T'
   534   007F46  4F                 	db	79	;'O'
   535   007F47  20                 	db	32
   536   007F48  00                 	db	0
   537   007F49                     STR_27:
   538   007F49  20                 	db	32
   539   007F4A  45                 	db	69	;'E'
   540   007F4B  4E                 	db	78	;'N'
   541   007F4C  54                 	db	84	;'T'
   542   007F4D  45                 	db	69	;'E'
   543   007F4E  52                 	db	82	;'R'
   544   007F4F  20                 	db	32
   545   007F50  43                 	db	67	;'C'
   546   007F51  4E                 	db	78	;'N'
   547   007F52  46                 	db	70	;'F'
   548   007F53  20                 	db	32
   549   007F54  50                 	db	80	;'P'
   550   007F55  53                 	db	83	;'S'
   551   007F56  57                 	db	87	;'W'
   552   007F57  20                 	db	32
   553   007F58  00                 	db	0
   554   007F59                     STR_26:
   555   007F59  20                 	db	32
   556   007F5A  45                 	db	69	;'E'
   557   007F5B  4E                 	db	78	;'N'
   558   007F5C  54                 	db	84	;'T'
   559   007F5D  45                 	db	69	;'E'
   560   007F5E  52                 	db	82	;'R'
   561   007F5F  20                 	db	32
   562   007F60  4E                 	db	78	;'N'
   563   007F61  45                 	db	69	;'E'
   564   007F62  57                 	db	87	;'W'
   565   007F63  20                 	db	32
   566   007F64  50                 	db	80	;'P'
   567   007F65  53                 	db	83	;'S'
   568   007F66  57                 	db	87	;'W'
   569   007F67  20                 	db	32
   570   007F68  00                 	db	0
   571   007F69                     STR_8:
   572   007F69  20                 	db	32
   573   007F6A  57                 	db	87	;'W'
   574   007F6B  41                 	db	65	;'A'
   575   007F6C  49                 	db	73	;'I'
   576   007F6D  54                 	db	84	;'T'
   577   007F6E  20                 	db	32
   578   007F6F  46                 	db	70	;'F'
   579   007F70  4F                 	db	79	;'O'
   580   007F71  52                 	db	82	;'R'
   581   007F72  20                 	db	32
   582   007F73  20                 	db	32
   583   007F74  20                 	db	32
   584   007F75  53                 	db	83	;'S'
   585   007F76  45                 	db	69	;'E'
   586   007F77  43                 	db	67	;'C'
   587   007F78  00                 	db	0
   588   007F79                     STR_11:
   589   007F79  44                 	db	68	;'D'
   590   007F7A  4F                 	db	79	;'O'
   591   007F7B  57                 	db	87	;'W'
   592   007F7C  4E                 	db	78	;'N'
   593   007F7D  4C                 	db	76	;'L'
   594   007F7E  4F                 	db	79	;'O'
   595   007F7F  41                 	db	65	;'A'
   596   007F80  44                 	db	68	;'D'
   597   007F81  49                 	db	73	;'I'
   598   007F82  4E                 	db	78	;'N'
   599   007F83  47                 	db	71	;'G'
   600   007F84  2E                 	db	46
   601   007F85  2E                 	db	46
   602   007F86  2E                 	db	46
   603   007F87  00                 	db	0
   604   007F88                     STR_4:
   605   007F88  20                 	db	32
   606   007F89  20                 	db	32
   607   007F8A  20                 	db	32
   608   007F8B  4D                 	db	77	;'M'
   609   007F8C  45                 	db	69	;'E'
   610   007F8D  4E                 	db	78	;'N'
   611   007F8E  55                 	db	85	;'U'
   612   007F8F  20                 	db	32
   613   007F90  53                 	db	83	;'S'
   614   007F91  43                 	db	67	;'C'
   615   007F92  52                 	db	82	;'R'
   616   007F93  45                 	db	69	;'E'
   617   007F94  45                 	db	69	;'E'
   618   007F95  4E                 	db	78	;'N'
   619   007F96  00                 	db	0
   620   007F97                     STR_30:
   621   007F97  20                 	db	32
   622   007F98  54                 	db	84	;'T'
   623   007F99  52                 	db	82	;'R'
   624   007F9A  59                 	db	89	;'Y'
   625   007F9B  20                 	db	32
   626   007F9C  41                 	db	65	;'A'
   627   007F9D  47                 	db	71	;'G'
   628   007F9E  41                 	db	65	;'A'
   629   007F9F  49                 	db	73	;'I'
   630   007FA0  4E                 	db	78	;'N'
   631   007FA1  2E                 	db	46
   632   007FA2  2E                 	db	46
   633   007FA3  2E                 	db	46
   634   007FA4  00                 	db	0
   635   007FA5                     STR_24:
   636   007FA5  54                 	db	84	;'T'
   637   007FA6  49                 	db	73	;'I'
   638   007FA7  4D                 	db	77	;'M'
   639   007FA8  45                 	db	69	;'E'
   640   007FA9  20                 	db	32
   641   007FAA  20                 	db	32
   642   007FAB  43                 	db	67	;'C'
   643   007FAC  48                 	db	72	;'H'
   644   007FAD  41                 	db	65	;'A'
   645   007FAE  4E                 	db	78	;'N'
   646   007FAF  47                 	db	71	;'G'
   647   007FB0  45                 	db	69	;'E'
   648   007FB1  44                 	db	68	;'D'
   649   007FB2  00                 	db	0
   650   007FB3                     STR_28:
   651   007FB3  20                 	db	32
   652   007FB4  50                 	db	80	;'P'
   653   007FB5  53                 	db	83	;'S'
   654   007FB6  57                 	db	87	;'W'
   655   007FB7  20                 	db	32
   656   007FB8  43                 	db	67	;'C'
   657   007FB9  48                 	db	72	;'H'
   658   007FBA  41                 	db	65	;'A'
   659   007FBB  4E                 	db	78	;'N'
   660   007FBC  47                 	db	71	;'G'
   661   007FBD  45                 	db	69	;'E'
   662   007FBE  44                 	db	68	;'D'
   663   007FBF  00                 	db	0
   664   007FC0                     STR_19:
   665   007FC0  53                 	db	83	;'S'
   666   007FC1  55                 	db	85	;'U'
   667   007FC2  43                 	db	67	;'C'
   668   007FC3  43                 	db	67	;'C'
   669   007FC4  45                 	db	69	;'E'
   670   007FC5  53                 	db	83	;'S'
   671   007FC6  53                 	db	83	;'S'
   672   007FC7  46                 	db	70	;'F'
   673   007FC8  55                 	db	85	;'U'
   674   007FC9  4C                 	db	76	;'L'
   675   007FCA  4C                 	db	76	;'L'
   676   007FCB  59                 	db	89	;'Y'
   677   007FCC  00                 	db	0
   678   007FCD                     STR_29:
   679   007FCD  53                 	db	83	;'S'
   680   007FCE  55                 	db	85	;'U'
   681   007FCF  43                 	db	67	;'C'
   682   007FD0  43                 	db	67	;'C'
   683   007FD1  45                 	db	69	;'E'
   684   007FD2  53                 	db	83	;'S'
   685   007FD3  53                 	db	83	;'S'
   686   007FD4  2E                 	db	46
   687   007FD5  2E                 	db	46
   688   007FD6  2E                 	db	46
   689   007FD7  00                 	db	0
   690   007FD8                     STR_6:
   691   007FD8  20                 	db	32
   692   007FD9  41                 	db	65	;'A'
   693   007FDA  54                 	db	84	;'T'
   694   007FDB  54                 	db	84	;'T'
   695   007FDC  45                 	db	69	;'E'
   696   007FDD  4D                 	db	77	;'M'
   697   007FDE  50                 	db	80	;'P'
   698   007FDF  54                 	db	84	;'T'
   699   007FE0  20                 	db	32
   700   007FE1  00                 	db	0
   701   007FE2                     STR_18:
   702   007FE2  43                 	db	67	;'C'
   703   007FE3  4C                 	db	76	;'L'
   704   007FE4  41                 	db	65	;'A'
   705   007FE5  45                 	db	69	;'E'
   706   007FE6  52                 	db	82	;'R'
   707   007FE7  20                 	db	32
   708   007FE8  4C                 	db	76	;'L'
   709   007FE9  4F                 	db	79	;'O'
   710   007FEA  47                 	db	71	;'G'
   711   007FEB  00                 	db	0
   712   007FEC                     STR_23:
   713   007FEC  48                 	db	72	;'H'
   714   007FED  48                 	db	72	;'H'
   715   007FEE  3A                 	db	58	;':'
   716   007FEF  4D                 	db	77	;'M'
   717   007FF0  4D                 	db	77	;'M'
   718   007FF1  3A                 	db	58	;':'
   719   007FF2  53                 	db	83	;'S'
   720   007FF3  53                 	db	83	;'S'
   721   007FF4  00                 	db	0
   722   007FF5                     STR_10:
   723   007FF5  45                 	db	69	;'E'
   724   007FF6  4D                 	db	77	;'M'
   725   007FF7  50                 	db	80	;'P'
   726   007FF8  54                 	db	84	;'T'
   727   007FF9  59                 	db	89	;'Y'
   728   007FFA  00                 	db	0
   729   007FFB                     STR_31:
   730   007FFB  2D                 	db	45
   731   007FFC  3E                 	db	62	;'>'
   732   007FFD  00                 	db	0
   733   007FFE  00                 	db	0	; dummy byte at the end
   734   000000                     
   735                           ; #config settings
   736                           
   737                           	psect	cinit
   738   00223E                     __pcinit:
   739                           	callstack 0
   740   00223E                     start_initialization:
   741                           	callstack 0
   742   00223E                     __initialization:
   743                           	callstack 0
   744                           
   745                           ; Initialize objects allocated to BANK1 (156 bytes)
   746                           ; load TBLPTR registers with __pidataBANK1
   747   00223E  0E90               	movlw	low __pidataBANK1
   748   002240  6EF6               	movwf	tblptrl,c
   749   002242  0E20               	movlw	high __pidataBANK1
   750   002244  6EF7               	movwf	tblptrh,c
   751   002246  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   752   002248  6EF8               	movwf	tblptru,c
   753   00224A  EE01  F000         	lfsr	0,__pdataBANK1
   754   00224E  EE10 F09C          	lfsr	1,156
   755   002252                     copy_data0:
   756   002252  0009               	tblrd		*+
   757   002254  CFF5 FFEE          	movff	tablat,postinc0
   758   002258  50E5               	movf	postdec1,w,c
   759   00225A  50E1               	movf	fsr1l,w,c
   760   00225C  E1FA               	bnz	copy_data0
   761                           
   762                           ; Initialize objects allocated to BANK0 (36 bytes)
   763                           ; load TBLPTR registers with __pidataBANK0
   764   00225E  0E76               	movlw	low __pidataBANK0
   765   002260  6EF6               	movwf	tblptrl,c
   766   002262  0E26               	movlw	high __pidataBANK0
   767   002264  6EF7               	movwf	tblptrh,c
   768   002266  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   769   002268  6EF8               	movwf	tblptru,c
   770   00226A  EE00  F0BF         	lfsr	0,__pdataBANK0
   771   00226E  EE10 F024          	lfsr	1,36
   772   002272                     copy_data1:
   773   002272  0009               	tblrd		*+
   774   002274  CFF5 FFEE          	movff	tablat,postinc0
   775   002278  50E5               	movf	postdec1,w,c
   776   00227A  50E1               	movf	fsr1l,w,c
   777   00227C  E1FA               	bnz	copy_data1
   778                           
   779                           ; Initialize objects allocated to COMRAM (2 bytes)
   780                           ; load TBLPTR registers with __pidataCOMRAM
   781   00227E  0E32               	movlw	low __pidataCOMRAM
   782   002280  6EF6               	movwf	tblptrl,c
   783   002282  0E27               	movlw	high __pidataCOMRAM
   784   002284  6EF7               	movwf	tblptrh,c
   785   002286  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   786   002288  6EF8               	movwf	tblptru,c
   787   00228A  0009               	tblrd		*+	;fetch initializer
   788   00228C  CFF5 F056          	movff	tablat,__pdataCOMRAM
   789   002290  0009               	tblrd		*+	;fetch initializer
   790   002292  CFF5 F057          	movff	tablat,__pdataCOMRAM+1
   791                           
   792                           ; Clear objects allocated to BANK0 (95 bytes)
   793   002296  EE00  F060         	lfsr	0,__pbssBANK0
   794   00229A  0E5F               	movlw	95
   795   00229C                     clear_0:
   796   00229C  6AEE               	clrf	postinc0,c
   797   00229E  06E8               	decf	wreg,f,c
   798   0022A0  E1FD               	bnz	clear_0
   799                           
   800                           ; Clear objects allocated to COMRAM (29 bytes)
   801   0022A2  EE00  F039         	lfsr	0,__pbssCOMRAM
   802   0022A6  0E1D               	movlw	29
   803   0022A8                     clear_1:
   804   0022A8  6AEE               	clrf	postinc0,c
   805   0022AA  06E8               	decf	wreg,f,c
   806   0022AC  E1FD               	bnz	clear_1
   807   0022AE                     end_of_initialization:
   808                           	callstack 0
   809   0022AE                     __end_of__initialization:
   810                           	callstack 0
   811   0022AE  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   812   0022B0  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   813   0022B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   814   0022B4  6EF8               	movwf	tblptru,c
   815   0022B6  0100               	movlb	0
   816   0022B8  EF1F  F00E         	goto	_main	;jump to C main() function
   817                           
   818                           	psect	bssCOMRAM
   819   000039                     __pbssCOMRAM:
   820                           	callstack 0
   821   000039                     _delay:
   822                           	callstack 0
   823   000039                     	ds	4
   824   00003D                     _ARROW:
   825                           	callstack 0
   826   00003D                     	ds	2
   827   00003F                     _M_index:
   828                           	callstack 0
   829   00003F                     	ds	2
   830   000041                     _FILED:
   831                           	callstack 0
   832   000041                     	ds	2
   833   000043                     _address:
   834                           	callstack 0
   835   000043                     	ds	2
   836   000045                     _f:
   837                           	callstack 0
   838   000045                     	ds	2
   839   000047                     _index:
   840                           	callstack 0
   841   000047                     	ds	2
   842   000049                     _g_index:
   843                           	callstack 0
   844   000049                     	ds	2
   845   00004B                     _speed@common$F106:
   846                           	callstack 0
   847   00004B                     	ds	2
   848   00004D                     _MENU_FLAG:
   849                           	callstack 0
   850   00004D                     	ds	2
   851   00004F                     _SCREEN_FLAG:
   852                           	callstack 0
   853   00004F                     	ds	2
   854   000051                     read_switches@key:
   855                           	callstack 0
   856   000051                     	ds	1
   857   000052                     _NEW_KEY:
   858                           	callstack 0
   859   000052                     	ds	1
   860   000053                     _key:
   861                           	callstack 0
   862   000053                     	ds	1
   863   000054                     _no_of_event:
   864                           	callstack 0
   865   000054                     	ds	2
   866                           
   867                           	psect	dataCOMRAM
   868   000056                     __pdataCOMRAM:
   869                           	callstack 0
   870   000056                     _sec:
   871                           	callstack 0
   872   000056                     	ds	2
   873                           
   874                           	psect	bssBANK0
   875   000060                     __pbssBANK0:
   876                           	callstack 0
   877   000060                     _dummy:
   878                           	callstack 0
   879   000060                     	ds	8
   880   000068                     _clock_set:
   881                           	callstack 0
   882   000068                     	ds	4
   883   00006C                     _wait:
   884                           	callstack 0
   885   00006C                     	ds	4
   886   000070                     _pass:
   887                           	callstack 0
   888   000070                     	ds	4
   889   000074                     _arr:
   890                           	callstack 0
   891   000074                     	ds	4
   892   000078                     	ds	2
   893   00007A                     	ds	2
   894   00007C                     	ds	2
   895   00007E                     	ds	2
   896   000080                     isr@count:
   897                           	callstack 0
   898   000080                     	ds	2
   899   000082                     	ds	2
   900   000084                     	ds	2
   901   000086                     	ds	2
   902   000088                     	ds	2
   903   00008A                     	ds	2
   904   00008C                     	ds	2
   905   00008E                     	ds	2
   906   000090                     	ds	2
   907   000092                     _add:
   908                           	callstack 0
   909   000092                     	ds	2
   910   000094                     _main_key:
   911                           	callstack 0
   912   000094                     	ds	2
   913   000096                     _blink_f:
   914                           	callstack 0
   915   000096                     	ds	2
   916   000098                     _BLINK:
   917                           	callstack 0
   918   000098                     	ds	2
   919   00009A                     _hour:
   920                           	callstack 0
   921   00009A                     	ds	2
   922   00009C                     _min:
   923                           	callstack 0
   924   00009C                     	ds	2
   925   00009E                     _store_add:
   926                           	callstack 0
   927   00009E                     	ds	2
   928   0000A0                     _Event:
   929                           	callstack 0
   930   0000A0                     	ds	2
   931   0000A2                     _pk:
   932                           	callstack 0
   933   0000A2                     	ds	2
   934   0000A4                     _password:
   935                           	callstack 0
   936   0000A4                     	ds	2
   937   0000A6                     _menu:
   938                           	callstack 0
   939   0000A6                     	ds	2
   940   0000A8                     _M:
   941                           	callstack 0
   942   0000A8                     	ds	2
   943   0000AA                     _count:
   944                           	callstack 0
   945   0000AA                     	ds	2
   946   0000AC                     _second:
   947                           	callstack 0
   948   0000AC                     	ds	2
   949   0000AE                     _ch:
   950                           	callstack 0
   951   0000AE                     	ds	1
   952   0000AF                     _EI:
   953                           	callstack 0
   954   0000AF                     	ds	1
   955   0000B0                     _EF:
   956                           	callstack 0
   957   0000B0                     	ds	1
   958   0000B1                     _ee:
   959                           	callstack 0
   960   0000B1                     	ds	1
   961   0000B2                     _ER:
   962                           	callstack 0
   963   0000B2                     	ds	1
   964   0000B3                     _print:
   965                           	callstack 0
   966   0000B3                     	ds	12
   967                           
   968                           	psect	dataBANK0
   969   0000BF                     __pdataBANK0:
   970                           	callstack 0
   971   0000BF                     	ds	2
   972   0000C1                     	ds	2
   973   0000C3                     	ds	2
   974   0000C5                     	ds	2
   975   0000C7                     	ds	2
   976   0000C9                     	ds	2
   977   0000CB                     _once:
   978                           	callstack 0
   979   0000CB                     	ds	2
   980   0000CD                     _chance:
   981                           	callstack 0
   982   0000CD                     	ds	2
   983   0000CF                     read_switches@once:
   984                           	callstack 0
   985   0000CF                     	ds	1
   986   0000D0                     _flag:
   987                           	callstack 0
   988   0000D0                     	ds	1
   989   0000D1                     _change_Time:
   990                           	callstack 0
   991   0000D1                     	ds	9
   992   0000DA                     _time:
   993                           	callstack 0
   994   0000DA                     	ds	9
   995                           
   996                           	psect	dataBANK1
   997   000100                     __pdataBANK1:
   998                           	callstack 0
   999   000100                     _diplay:
  1000                           	callstack 0
  1001   000100                     	ds	120
  1002   000178                     _gear:
  1003                           	callstack 0
  1004   000178                     	ds	36
  1005                           
  1006                           	psect	cstackCOMRAM
  1007   000001                     __pcstackCOMRAM:
  1008                           	callstack 0
  1009   000001                     ?_read_adc:
  1010                           	callstack 0
  1011   000001                     ?___wmul:
  1012                           	callstack 0
  1013   000001                     ?___lwdiv:
  1014                           	callstack 0
  1015   000001                     ?___lwmod:
  1016                           	callstack 0
  1017   000001                     read_switches@detection_type:
  1018                           	callstack 0
  1019   000001                     read_internal_eeprom@address:
  1020                           	callstack 0
  1021   000001                     putch@byte:
  1022                           	callstack 0
  1023   000001                     clcd_write@i:
  1024                           	callstack 0
  1025   000001                     ___wmul@multiplier:
  1026                           	callstack 0
  1027   000001                     ___lwdiv@dividend:
  1028                           	callstack 0
  1029   000001                     ___lwmod@dividend:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x0
  1033   000001                     	ds	1
  1034   000002                     puts@s:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x1
  1038   000002                     	ds	1
  1039   000003                     ??_read_adc:
  1040   000003                     clcd_write@command:
  1041                           	callstack 0
  1042   000003                     ___wmul@multiplicand:
  1043                           	callstack 0
  1044   000003                     ___lwdiv@divisor:
  1045                           	callstack 0
  1046   000003                     ___lwmod@divisor:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x2
  1050   000003                     	ds	1
  1051   000004                     
  1052                           ; 1 bytes @ 0x3
  1053   000004                     	ds	1
  1054   000005                     ___lwmod@counter:
  1055                           	callstack 0
  1056   000005                     read_adc@reg_val:
  1057                           	callstack 0
  1058   000005                     ___wmul@product:
  1059                           	callstack 0
  1060   000005                     ___lwdiv@quotient:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x4
  1064   000005                     	ds	2
  1065   000007                     read_adc@channel:
  1066                           	callstack 0
  1067   000007                     write_internal_eeprom@data:
  1068                           	callstack 0
  1069   000007                     ___lwdiv@counter:
  1070                           	callstack 0
  1071                           
  1072                           ; 1 bytes @ 0x6
  1073   000007                     	ds	1
  1074   000008                     ?___xxtofl:
  1075                           	callstack 0
  1076   000008                     clcd_putch@addr:
  1077                           	callstack 0
  1078   000008                     write_internal_eeprom@address:
  1079                           	callstack 0
  1080   000008                     ___xxtofl@val:
  1081                           	callstack 0
  1082                           
  1083                           ; 4 bytes @ 0x7
  1084   000008                     	ds	1
  1085   000009                     over_write@i:
  1086                           	callstack 0
  1087   000009                     clcd_putch@i:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x8
  1091   000009                     	ds	2
  1092   00000B                     over_write@ch:
  1093                           	callstack 0
  1094   00000B                     clcd_putch@data:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0xA
  1098   00000B                     	ds	1
  1099   00000C                     ??___xxtofl:
  1100   00000C                     over_write@j:
  1101                           	callstack 0
  1102   00000C                     clcd_print@str:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0xB
  1106   00000C                     	ds	2
  1107   00000E                     ??_store_event_in_eeprom:
  1108   00000E                     clcd_print@addr:
  1109                           	callstack 0
  1110                           
  1111                           ; 1 bytes @ 0xD
  1112   00000E                     	ds	1
  1113   00000F                     ??_clcd_print:
  1114                           
  1115                           ; 1 bytes @ 0xE
  1116   00000F                     	ds	1
  1117   000010                     ___xxtofl@sign:
  1118                           	callstack 0
  1119   000010                     store_event_in_eeprom@i:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0xF
  1123   000010                     	ds	1
  1124   000011                     clcd_print@i:
  1125                           	callstack 0
  1126   000011                     ___xxtofl@exp:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x10
  1130   000011                     	ds	1
  1131   000012                     ??_view_log:
  1132   000012                     ??_download_log:
  1133   000012                     ??_change_password:
  1134   000012                     store_event_in_eeprom@i_208:
  1135                           	callstack 0
  1136   000012                     clear_log@y:
  1137                           	callstack 0
  1138   000012                     set_times@y:
  1139                           	callstack 0
  1140   000012                     ___xxtofl@arg:
  1141                           	callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x11
  1144   000012                     	ds	1
  1145   000013                     download_log@y:
  1146                           	callstack 0
  1147                           
  1148                           ; 4 bytes @ 0x12
  1149   000013                     	ds	1
  1150   000014                     store_event_in_eeprom@i_209:
  1151                           	callstack 0
  1152   000014                     password_screen@y:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x13
  1156   000014                     	ds	2
  1157   000016                     ?___fldiv:
  1158                           	callstack 0
  1159   000016                     change_password@y:
  1160                           	callstack 0
  1161   000016                     ___fldiv@b:
  1162                           	callstack 0
  1163                           
  1164                           ; 4 bytes @ 0x15
  1165   000016                     	ds	1
  1166   000017                     download_log@y_163:
  1167                           	callstack 0
  1168                           
  1169                           ; 4 bytes @ 0x16
  1170   000017                     	ds	1
  1171   000018                     password_screen@y_138:
  1172                           	callstack 0
  1173                           
  1174                           ; 4 bytes @ 0x17
  1175   000018                     	ds	2
  1176   00001A                     change_password@y_192:
  1177                           	callstack 0
  1178   00001A                     ___fldiv@a:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x19
  1182   00001A                     	ds	1
  1183   00001B                     download_log@i:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x1A
  1187   00001B                     	ds	3
  1188   00001E                     ??___fldiv:
  1189                           
  1190                           ; 1 bytes @ 0x1D
  1191   00001E                     	ds	4
  1192   000022                     ___fldiv@rem:
  1193                           	callstack 0
  1194                           
  1195                           ; 4 bytes @ 0x21
  1196   000022                     	ds	4
  1197   000026                     ___fldiv@sign:
  1198                           	callstack 0
  1199                           
  1200                           ; 1 bytes @ 0x25
  1201   000026                     	ds	1
  1202   000027                     ___fldiv@new_exp:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x26
  1206   000027                     	ds	2
  1207   000029                     ___fldiv@grs:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x28
  1211   000029                     	ds	4
  1212   00002D                     ___fldiv@bexp:
  1213                           	callstack 0
  1214                           
  1215                           ; 1 bytes @ 0x2C
  1216   00002D                     	ds	1
  1217   00002E                     ___fldiv@aexp:
  1218                           	callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x2D
  1221   00002E                     	ds	1
  1222   00002F                     ?___fltol:
  1223                           	callstack 0
  1224   00002F                     ___fltol@f1:
  1225                           	callstack 0
  1226                           
  1227                           ; 4 bytes @ 0x2E
  1228   00002F                     	ds	4
  1229   000033                     ??___fltol:
  1230                           
  1231                           ; 1 bytes @ 0x32
  1232   000033                     	ds	4
  1233   000037                     ___fltol@sign1:
  1234                           	callstack 0
  1235                           
  1236                           ; 1 bytes @ 0x36
  1237   000037                     	ds	1
  1238   000038                     ___fltol@exp1:
  1239                           	callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x37
  1242   000038                     	ds	1
  1243   000039                     
  1244                           ; 1 bytes @ 0x38
  1245 ;;
  1246 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1247 ;;
  1248 ;; *************** function _main *****************
  1249 ;; Defined at:
  1250 ;;		line 97 in file "main.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;		None
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1264 ;;      Params:         0       0       0       0       0       0       0
  1265 ;;      Locals:         0       0       0       0       0       0       0
  1266 ;;      Temps:          0       0       0       0       0       0       0
  1267 ;;      Totals:         0       0       0       0       0       0       0
  1268 ;;Total ram usage:        0 bytes
  1269 ;; Hardware stack levels required when called: 5
  1270 ;; This function calls:
  1271 ;;		_change_password
  1272 ;;		_clcd_write
  1273 ;;		_clear_log
  1274 ;;		_display_dashboard
  1275 ;;		_display_menu
  1276 ;;		_download_log
  1277 ;;		_init_config
  1278 ;;		_password_screen
  1279 ;;		_read_switches
  1280 ;;		_set_times
  1281 ;;		_store_event_in_eeprom
  1282 ;;		_view_log
  1283 ;; This function is called by:
  1284 ;;		Startup code after reset
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text0
  1289   001C3E                     __ptext0:
  1290                           	callstack 0
  1291   001C3E                     _main:
  1292                           	callstack 26
  1293   001C3E                     
  1294                           ;main.c: 98:     clcd_write(0x01);
  1295   001C3E  0E01               	movlw	1
  1296   001C40  ECF7  F012         	call	_clcd_write
  1297                           
  1298                           ;main.c: 99:     init_config();
  1299   001C44  ECBC  F012         	call	_init_config	;wreg free
  1300   001C48                     
  1301                           ;main.c: 100:     store_event_in_eeprom();
  1302   001C48  ECB6  F00E         	call	_store_event_in_eeprom	;wreg free
  1303   001C4C                     l4205:
  1304                           
  1305                           ;main.c: 104:       key = read_switches(1);
  1306   001C4C  0E01               	movlw	1
  1307   001C4E  EC9D  F011         	call	_read_switches
  1308   001C52  6E53               	movwf	_key^0,c
  1309   001C54                     
  1310                           ;main.c: 106:         if (key == 5 && flag ) {
  1311   001C54  0E05               	movlw	5
  1312   001C56  1853               	xorwf	_key^0,w,c
  1313   001C58  A4D8               	btfss	status,2,c
  1314   001C5A  EF31  F00E         	goto	u4021
  1315   001C5E  EF33  F00E         	goto	u4020
  1316   001C62                     u4021:
  1317   001C62  EF46  F00E         	goto	l4213
  1318   001C66                     u4020:
  1319   001C66  0100               	movlb	0	; () banked
  1320   001C68  51D0               	movf	_flag& (0+255),w,b
  1321   001C6A  B4D8               	btfsc	status,2,c
  1322   001C6C  EF3A  F00E         	goto	u4031
  1323   001C70  EF3C  F00E         	goto	u4030
  1324   001C74                     u4031:
  1325   001C74  EF46  F00E         	goto	l4213
  1326   001C78                     u4030:
  1327   001C78                     
  1328                           ; BSR set to: 0
  1329                           ;main.c: 107:             SCREEN_FLAG = 1;
  1330   001C78  0E00               	movlw	0
  1331   001C7A  6E50               	movwf	(_SCREEN_FLAG+1)^0,c
  1332   001C7C  0E01               	movlw	1
  1333   001C7E  6E4F               	movwf	_SCREEN_FLAG^0,c
  1334                           
  1335                           ;main.c: 108:             flag=0;
  1336   001C80  0E00               	movlw	0
  1337   001C82  6FD0               	movwf	_flag& (0+255),b
  1338                           
  1339                           ;main.c: 109:             MENU_FLAG = 0;
  1340   001C84  0E00               	movlw	0
  1341   001C86  6E4E               	movwf	(_MENU_FLAG+1)^0,c
  1342   001C88  0E00               	movlw	0
  1343   001C8A  6E4D               	movwf	_MENU_FLAG^0,c
  1344   001C8C                     l4213:
  1345                           
  1346                           ;main.c: 112:         if (SCREEN_FLAG == 0)
  1347   001C8C  504F               	movf	_SCREEN_FLAG^0,w,c
  1348   001C8E  1050               	iorwf	(_SCREEN_FLAG+1)^0,w,c
  1349   001C90  A4D8               	btfss	status,2,c
  1350   001C92  EF4D  F00E         	goto	u4041
  1351   001C96  EF4F  F00E         	goto	u4040
  1352   001C9A                     u4041:
  1353   001C9A  EF53  F00E         	goto	l4217
  1354   001C9E                     u4040:
  1355   001C9E                     
  1356                           ;main.c: 113:         {;main.c: 114:             display_dashboard();
  1357   001C9E  EC2D  F002         	call	_display_dashboard	;wreg free
  1358                           
  1359                           ;main.c: 115:         } else if (SCREEN_FLAG == 1)
  1360   001CA2  EF26  F00E         	goto	l4205
  1361   001CA6                     l4217:
  1362   001CA6  044F               	decf	_SCREEN_FLAG^0,w,c
  1363   001CA8  1050               	iorwf	(_SCREEN_FLAG+1)^0,w,c
  1364   001CAA  A4D8               	btfss	status,2,c
  1365   001CAC  EF5A  F00E         	goto	u4051
  1366   001CB0  EF5C  F00E         	goto	u4050
  1367   001CB4                     u4051:
  1368   001CB4  EF60  F00E         	goto	l4221
  1369   001CB8                     u4050:
  1370   001CB8                     
  1371                           ;main.c: 116:         {;main.c: 117:             password_screen();
  1372   001CB8  EC1E  F004         	call	_password_screen	;wreg free
  1373                           
  1374                           ;main.c: 118:         } else if (SCREEN_FLAG == 2)
  1375   001CBC  EF26  F00E         	goto	l4205
  1376   001CC0                     l4221:
  1377   001CC0  0E02               	movlw	2
  1378   001CC2  184F               	xorwf	_SCREEN_FLAG^0,w,c
  1379   001CC4  1050               	iorwf	(_SCREEN_FLAG+1)^0,w,c
  1380   001CC6  A4D8               	btfss	status,2,c
  1381   001CC8  EF68  F00E         	goto	u4061
  1382   001CCC  EF6A  F00E         	goto	u4060
  1383   001CD0                     u4061:
  1384   001CD0  EF26  F00E         	goto	l4205
  1385   001CD4                     u4060:
  1386   001CD4                     
  1387                           ;main.c: 119:         {;main.c: 120:             if (MENU_FLAG == 3) {
  1388   001CD4  0E03               	movlw	3
  1389   001CD6  184D               	xorwf	_MENU_FLAG^0,w,c
  1390   001CD8  104E               	iorwf	(_MENU_FLAG+1)^0,w,c
  1391   001CDA  A4D8               	btfss	status,2,c
  1392   001CDC  EF72  F00E         	goto	u4071
  1393   001CE0  EF74  F00E         	goto	u4070
  1394   001CE4                     u4071:
  1395   001CE4  EF78  F00E         	goto	l4227
  1396   001CE8                     u4070:
  1397   001CE8                     
  1398                           ;main.c: 121:                 view_log();
  1399   001CE8  ECD0  F00A         	call	_view_log	;wreg free
  1400                           
  1401                           ;main.c: 122:             } else if (MENU_FLAG == 4)
  1402   001CEC  EF26  F00E         	goto	l4205
  1403   001CF0                     l4227:
  1404   001CF0  0E04               	movlw	4
  1405   001CF2  184D               	xorwf	_MENU_FLAG^0,w,c
  1406   001CF4  104E               	iorwf	(_MENU_FLAG+1)^0,w,c
  1407   001CF6  A4D8               	btfss	status,2,c
  1408   001CF8  EF80  F00E         	goto	u4081
  1409   001CFC  EF82  F00E         	goto	u4080
  1410   001D00                     u4081:
  1411   001D00  EF86  F00E         	goto	l4231
  1412   001D04                     u4080:
  1413   001D04                     
  1414                           ;main.c: 123:             {;main.c: 124:                 download_log();
  1415   001D04  EC39  F00C         	call	_download_log	;wreg free
  1416                           
  1417                           ;main.c: 125:             } else if (MENU_FLAG == 5)
  1418   001D08  EF26  F00E         	goto	l4205
  1419   001D0C                     l4231:
  1420   001D0C  0E05               	movlw	5
  1421   001D0E  184D               	xorwf	_MENU_FLAG^0,w,c
  1422   001D10  104E               	iorwf	(_MENU_FLAG+1)^0,w,c
  1423   001D12  A4D8               	btfss	status,2,c
  1424   001D14  EF8E  F00E         	goto	u4091
  1425   001D18  EF90  F00E         	goto	u4090
  1426   001D1C                     u4091:
  1427   001D1C  EF94  F00E         	goto	l4235
  1428   001D20                     u4090:
  1429   001D20                     
  1430                           ;main.c: 126:             {;main.c: 127:                 clear_log();
  1431   001D20  EC5E  F011         	call	_clear_log	;wreg free
  1432                           
  1433                           ;main.c: 128:             } else if (MENU_FLAG == 6)
  1434   001D24  EF26  F00E         	goto	l4205
  1435   001D28                     l4235:
  1436   001D28  0E06               	movlw	6
  1437   001D2A  184D               	xorwf	_MENU_FLAG^0,w,c
  1438   001D2C  104E               	iorwf	(_MENU_FLAG+1)^0,w,c
  1439   001D2E  A4D8               	btfss	status,2,c
  1440   001D30  EF9C  F00E         	goto	u4101
  1441   001D34  EF9E  F00E         	goto	u4100
  1442   001D38                     u4101:
  1443   001D38  EFA2  F00E         	goto	l4239
  1444   001D3C                     u4100:
  1445   001D3C                     
  1446                           ;main.c: 129:             {;main.c: 132:                 set_times();
  1447   001D3C  EC09  F000         	call	_set_times	;wreg free
  1448                           
  1449                           ;main.c: 133:             } else if (MENU_FLAG == 7)
  1450   001D40  EF26  F00E         	goto	l4205
  1451   001D44                     l4239:
  1452   001D44  0E07               	movlw	7
  1453   001D46  184D               	xorwf	_MENU_FLAG^0,w,c
  1454   001D48  104E               	iorwf	(_MENU_FLAG+1)^0,w,c
  1455   001D4A  A4D8               	btfss	status,2,c
  1456   001D4C  EFAA  F00E         	goto	u4111
  1457   001D50  EFAC  F00E         	goto	u4110
  1458   001D54                     u4111:
  1459   001D54  EFB0  F00E         	goto	l4243
  1460   001D58                     u4110:
  1461   001D58                     
  1462                           ;main.c: 134:             {;main.c: 135:                 change_password();
  1463   001D58  ECBD  F007         	call	_change_password	;wreg free
  1464                           
  1465                           ;main.c: 136:             } else
  1466   001D5C  EF26  F00E         	goto	l4205
  1467   001D60                     l4243:
  1468                           
  1469                           ;main.c: 137:                 display_menu();
  1470   001D60  EC5F  F009         	call	_display_menu	;wreg free
  1471   001D64  EF26  F00E         	goto	l4205
  1472   001D68  EF07  F000         	goto	start
  1473   001D6C                     __end_of_main:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function _view_log *****************
  1477 ;; Defined at:
  1478 ;;		line 174 in file "common.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1492 ;;      Params:         0       0       0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0       0       0
  1494 ;;      Temps:          2       0       0       0       0       0       0
  1495 ;;      Totals:         2       0       0       0       0       0       0
  1496 ;;Total ram usage:        2 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; Hardware stack levels required when called: 4
  1499 ;; This function calls:
  1500 ;;		___lwdiv
  1501 ;;		___lwmod
  1502 ;;		___wmul
  1503 ;;		_clcd_print
  1504 ;;		_clcd_putch
  1505 ;;		_clcd_write
  1506 ;;		_read_internal_eeprom
  1507 ;;		_read_switches
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text1
  1514   0015A0                     __ptext1:
  1515                           	callstack 0
  1516   0015A0                     _view_log:
  1517                           	callstack 26
  1518   0015A0                     
  1519                           ;common.c: 175:     clcd_print("#   TIME   EV SP", (0x80 + (0)));
  1520   0015A0  0E18               	movlw	low STR_9
  1521   0015A2  6E0C               	movwf	clcd_print@str^0,c
  1522   0015A4  0E7F               	movlw	high STR_9
  1523   0015A6  6E0D               	movwf	(clcd_print@str+1)^0,c
  1524   0015A8  0E80               	movlw	128
  1525   0015AA  6E0E               	movwf	clcd_print@addr^0,c
  1526   0015AC  ECDD  F010         	call	_clcd_print	;wreg free
  1527   0015B0                     
  1528                           ;common.c: 176:     key = read_switches(0);
  1529   0015B0  0E00               	movlw	0
  1530   0015B2  EC9D  F011         	call	_read_switches
  1531   0015B6  6E53               	movwf	_key^0,c
  1532   0015B8                     
  1533                           ;common.c: 177:     if (key == 5 || key == 6) {
  1534   0015B8  0E05               	movlw	5
  1535   0015BA  1853               	xorwf	_key^0,w,c
  1536   0015BC  B4D8               	btfsc	status,2,c
  1537   0015BE  EFE3  F00A         	goto	u3301
  1538   0015C2  EFE5  F00A         	goto	u3300
  1539   0015C6                     u3301:
  1540   0015C6  EFEE  F00A         	goto	l3639
  1541   0015CA                     u3300:
  1542   0015CA  0E06               	movlw	6
  1543   0015CC  1853               	xorwf	_key^0,w,c
  1544   0015CE  A4D8               	btfss	status,2,c
  1545   0015D0  EFEC  F00A         	goto	u3311
  1546   0015D4  EFEE  F00A         	goto	u3310
  1547   0015D8                     u3311:
  1548   0015D8  EFF6  F00A         	goto	l208
  1549   0015DC                     u3310:
  1550   0015DC                     l3639:
  1551                           
  1552                           ;common.c: 178:         delay++;
  1553   0015DC  0E01               	movlw	1
  1554   0015DE  2639               	addwf	_delay^0,f,c
  1555   0015E0  0E00               	movlw	0
  1556   0015E2  223A               	addwfc	(_delay+1)^0,f,c
  1557   0015E4  223B               	addwfc	(_delay+2)^0,f,c
  1558   0015E6  223C               	addwfc	(_delay+3)^0,f,c
  1559   0015E8                     
  1560                           ;common.c: 179:         NEW_KEY = key;
  1561   0015E8  C053  F052         	movff	_key,_NEW_KEY
  1562   0015EC                     l208:
  1563                           
  1564                           ;common.c: 181:     if (delay < 500 && key == 0xFF) {
  1565   0015EC  503C               	movf	(_delay+3)^0,w,c
  1566   0015EE  103B               	iorwf	(_delay+2)^0,w,c
  1567   0015F0  E109               	bnz	u3321
  1568   0015F2  0EF4               	movlw	244
  1569   0015F4  5C39               	subwf	_delay^0,w,c
  1570   0015F6  0E01               	movlw	1
  1571   0015F8  583A               	subwfb	(_delay+1)^0,w,c
  1572   0015FA  B0D8               	btfsc	status,0,c
  1573   0015FC  EF02  F00B         	goto	u3321
  1574   001600  EF04  F00B         	goto	u3320
  1575   001604                     u3321:
  1576   001604  EF8B  F00B         	goto	l3673
  1577   001608                     u3320:
  1578   001608  2853               	incf	_key^0,w,c
  1579   00160A  A4D8               	btfss	status,2,c
  1580   00160C  EF0A  F00B         	goto	u3331
  1581   001610  EF0C  F00B         	goto	u3330
  1582   001614                     u3331:
  1583   001614  EF8B  F00B         	goto	l3673
  1584   001618                     u3330:
  1585   001618                     
  1586                           ;common.c: 182:         if (NEW_KEY == 5 && Event <= no_of_event - 1) {
  1587   001618  0E05               	movlw	5
  1588   00161A  1852               	xorwf	_NEW_KEY^0,w,c
  1589   00161C  A4D8               	btfss	status,2,c
  1590   00161E  EF13  F00B         	goto	u3341
  1591   001622  EF15  F00B         	goto	u3340
  1592   001626                     u3341:
  1593   001626  EF4D  F00B         	goto	l3657
  1594   00162A                     u3340:
  1595   00162A  0EFF               	movlw	255
  1596   00162C  2454               	addwf	_no_of_event^0,w,c
  1597   00162E  6E12               	movwf	??_view_log^0,c
  1598   001630  0EFF               	movlw	255
  1599   001632  2055               	addwfc	(_no_of_event+1)^0,w,c
  1600   001634  6E13               	movwf	(??_view_log+1)^0,c
  1601   001636  0100               	movlb	0	; () banked
  1602   001638  51A0               	movf	_Event& (0+255),w,b
  1603   00163A  5C12               	subwf	??_view_log^0,w,c
  1604   00163C  51A1               	movf	(_Event+1)& (0+255),w,b
  1605   00163E  5813               	subwfb	(??_view_log+1)^0,w,c
  1606   001640  A0D8               	btfss	status,0,c
  1607   001642  EF25  F00B         	goto	u3351
  1608   001646  EF27  F00B         	goto	u3350
  1609   00164A                     u3351:
  1610   00164A  EF4D  F00B         	goto	l3657
  1611   00164E                     u3350:
  1612   00164E                     
  1613                           ; BSR set to: 0
  1614                           ;common.c: 184:             if (Event == no_of_event - 1) {
  1615   00164E  0EFF               	movlw	255
  1616   001650  2454               	addwf	_no_of_event^0,w,c
  1617   001652  6E12               	movwf	??_view_log^0,c
  1618   001654  0EFF               	movlw	255
  1619   001656  2055               	addwfc	(_no_of_event+1)^0,w,c
  1620   001658  6E13               	movwf	(??_view_log+1)^0,c
  1621   00165A  51A0               	movf	_Event& (0+255),w,b
  1622   00165C  1812               	xorwf	??_view_log^0,w,c
  1623   00165E  E107               	bnz	u3361
  1624   001660  51A1               	movf	(_Event+1)& (0+255),w,b
  1625   001662  1813               	xorwf	(??_view_log+1)^0,w,c
  1626   001664  A4D8               	btfss	status,2,c
  1627   001666  EF37  F00B         	goto	u3361
  1628   00166A  EF39  F00B         	goto	u3360
  1629   00166E                     u3361:
  1630   00166E  EF43  F00B         	goto	l3653
  1631   001672                     u3360:
  1632   001672                     
  1633                           ; BSR set to: 0
  1634                           ;common.c: 185:                 Event = 0;
  1635   001672  0E00               	movlw	0
  1636   001674  6FA1               	movwf	(_Event+1)& (0+255),b
  1637   001676  0E00               	movlw	0
  1638   001678  6FA0               	movwf	_Event& (0+255),b
  1639                           
  1640                           ;common.c: 186:                 f = 0x00;
  1641   00167A  0E00               	movlw	0
  1642   00167C  6E46               	movwf	(_f+1)^0,c
  1643   00167E  0E00               	movlw	0
  1644   001680  6E45               	movwf	_f^0,c
  1645                           
  1646                           ;common.c: 187:             } else {
  1647   001682  EF81  F00B         	goto	l3669
  1648   001686                     l3653:
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;common.c: 188:                 ++Event;
  1652   001686  4BA0               	infsnz	_Event& (0+255),f,b
  1653   001688  2BA1               	incf	(_Event+1)& (0+255),f,b
  1654   00168A                     
  1655                           ; BSR set to: 0
  1656                           ;common.c: 189:                 f = f + 11;
  1657   00168A  0E0B               	movlw	11
  1658   00168C  2445               	addwf	_f^0,w,c
  1659   00168E  6E45               	movwf	_f^0,c
  1660   001690  0E00               	movlw	0
  1661   001692  2046               	addwfc	(_f+1)^0,w,c
  1662   001694  6E46               	movwf	(_f+1)^0,c
  1663   001696  EF81  F00B         	goto	l3669
  1664   00169A                     l3657:
  1665   00169A  0E06               	movlw	6
  1666   00169C  1852               	xorwf	_NEW_KEY^0,w,c
  1667   00169E  A4D8               	btfss	status,2,c
  1668   0016A0  EF54  F00B         	goto	u3371
  1669   0016A4  EF56  F00B         	goto	u3370
  1670   0016A8                     u3371:
  1671   0016A8  EF81  F00B         	goto	l3669
  1672   0016AC                     u3370:
  1673   0016AC                     
  1674                           ;common.c: 193:             if (Event == 0) {
  1675   0016AC  0100               	movlb	0	; () banked
  1676   0016AE  51A0               	movf	_Event& (0+255),w,b
  1677   0016B0  11A1               	iorwf	(_Event+1)& (0+255),w,b
  1678   0016B2  A4D8               	btfss	status,2,c
  1679   0016B4  EF5E  F00B         	goto	u3381
  1680   0016B8  EF60  F00B         	goto	u3380
  1681   0016BC                     u3381:
  1682   0016BC  EF78  F00B         	goto	l3665
  1683   0016C0                     u3380:
  1684   0016C0                     
  1685                           ; BSR set to: 0
  1686                           ;common.c: 194:                 Event = no_of_event - 1;
  1687   0016C0  0EFF               	movlw	255
  1688   0016C2  2454               	addwf	_no_of_event^0,w,c
  1689   0016C4  6FA0               	movwf	_Event& (0+255),b
  1690   0016C6  0EFF               	movlw	255
  1691   0016C8  2055               	addwfc	(_no_of_event+1)^0,w,c
  1692   0016CA  6FA1               	movwf	(_Event+1)& (0+255),b
  1693   0016CC                     
  1694                           ; BSR set to: 0
  1695                           ;common.c: 195:                 f = 0x0B * (no_of_event - 1);
  1696   0016CC  0EFF               	movlw	255
  1697   0016CE  2454               	addwf	_no_of_event^0,w,c
  1698   0016D0  6E01               	movwf	___wmul@multiplier^0,c
  1699   0016D2  0EFF               	movlw	255
  1700   0016D4  2055               	addwfc	(_no_of_event+1)^0,w,c
  1701   0016D6  6E02               	movwf	(___wmul@multiplier+1)^0,c
  1702   0016D8  0E00               	movlw	0
  1703   0016DA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1704   0016DC  0E0B               	movlw	11
  1705   0016DE  6E03               	movwf	___wmul@multiplicand^0,c
  1706   0016E0  EC28  F013         	call	___wmul	;wreg free
  1707   0016E4  C001  F045         	movff	?___wmul,_f
  1708   0016E8  C002  F046         	movff	?___wmul+1,_f+1
  1709                           
  1710                           ;common.c: 196:             } else {
  1711   0016EC  EF81  F00B         	goto	l3669
  1712   0016F0                     l3665:
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;common.c: 197:                 --Event;
  1716   0016F0  07A0               	decf	_Event& (0+255),f,b
  1717   0016F2  A0D8               	btfss	status,0,c
  1718   0016F4  07A1               	decf	(_Event+1)& (0+255),f,b
  1719   0016F6                     
  1720                           ; BSR set to: 0
  1721                           ;common.c: 198:                 f = f - 11;
  1722   0016F6  0EF5               	movlw	245
  1723   0016F8  2445               	addwf	_f^0,w,c
  1724   0016FA  6E45               	movwf	_f^0,c
  1725   0016FC  0EFF               	movlw	255
  1726   0016FE  2046               	addwfc	(_f+1)^0,w,c
  1727   001700  6E46               	movwf	(_f+1)^0,c
  1728   001702                     l3669:
  1729                           
  1730                           ;common.c: 201:         delay = 0;
  1731   001702  0E00               	movlw	0
  1732   001704  6E39               	movwf	_delay^0,c
  1733   001706  0E00               	movlw	0
  1734   001708  6E3A               	movwf	(_delay+1)^0,c
  1735   00170A  0E00               	movlw	0
  1736   00170C  6E3B               	movwf	(_delay+2)^0,c
  1737   00170E  0E00               	movlw	0
  1738   001710  6E3C               	movwf	(_delay+3)^0,c
  1739   001712                     
  1740                           ;common.c: 202:         NEW_KEY = 0;
  1741   001712  0E00               	movlw	0
  1742   001714  6E52               	movwf	_NEW_KEY^0,c
  1743   001716                     l3673:
  1744                           
  1745                           ;common.c: 204:     if (no_of_event > 0) {
  1746   001716  5054               	movf	_no_of_event^0,w,c
  1747   001718  1055               	iorwf	(_no_of_event+1)^0,w,c
  1748   00171A  B4D8               	btfsc	status,2,c
  1749   00171C  EF92  F00B         	goto	u3391
  1750   001720  EF94  F00B         	goto	u3390
  1751   001724                     u3391:
  1752   001724  EF0A  F00C         	goto	l3709
  1753   001728                     u3390:
  1754   001728                     
  1755                           ;common.c: 205:         print[0] = read_internal_eeprom(0x00 + f);
  1756   001728  5045               	movf	_f^0,w,c
  1757   00172A  EC8D  F013         	call	_read_internal_eeprom
  1758   00172E  0100               	movlb	0	; () banked
  1759   001730  6FB3               	movwf	_print& (0+255),b
  1760   001732                     
  1761                           ; BSR set to: 0
  1762                           ;common.c: 206:         print[1] = read_internal_eeprom(0x01 + f);
  1763   001732  2845               	incf	_f^0,w,c
  1764   001734  EC8D  F013         	call	_read_internal_eeprom
  1765   001738  0100               	movlb	0	; () banked
  1766   00173A  6FB4               	movwf	(_print+1)& (0+255),b
  1767   00173C                     
  1768                           ; BSR set to: 0
  1769                           ;common.c: 207:         print[2] = read_internal_eeprom(0x02 + f);
  1770   00173C  5045               	movf	_f^0,w,c
  1771   00173E  0F02               	addlw	2
  1772   001740  EC8D  F013         	call	_read_internal_eeprom
  1773   001744  0100               	movlb	0	; () banked
  1774   001746  6FB5               	movwf	(_print+2)& (0+255),b
  1775   001748                     
  1776                           ; BSR set to: 0
  1777                           ;common.c: 208:         print[3] = read_internal_eeprom(0x03 + f);
  1778   001748  5045               	movf	_f^0,w,c
  1779   00174A  0F03               	addlw	3
  1780   00174C  EC8D  F013         	call	_read_internal_eeprom
  1781   001750  0100               	movlb	0	; () banked
  1782   001752  6FB6               	movwf	(_print+3)& (0+255),b
  1783   001754                     
  1784                           ; BSR set to: 0
  1785                           ;common.c: 209:         print[4] = read_internal_eeprom(0x04 + f);
  1786   001754  5045               	movf	_f^0,w,c
  1787   001756  0F04               	addlw	4
  1788   001758  EC8D  F013         	call	_read_internal_eeprom
  1789   00175C  0100               	movlb	0	; () banked
  1790   00175E  6FB7               	movwf	(_print+4)& (0+255),b
  1791   001760                     
  1792                           ; BSR set to: 0
  1793                           ;common.c: 210:         print[5] = read_internal_eeprom(0x05 + f);
  1794   001760  5045               	movf	_f^0,w,c
  1795   001762  0F05               	addlw	5
  1796   001764  EC8D  F013         	call	_read_internal_eeprom
  1797   001768  0100               	movlb	0	; () banked
  1798   00176A  6FB8               	movwf	(_print+5)& (0+255),b
  1799   00176C                     
  1800                           ; BSR set to: 0
  1801                           ;common.c: 211:         print[6] = read_internal_eeprom(0x06 + f);
  1802   00176C  5045               	movf	_f^0,w,c
  1803   00176E  0F06               	addlw	6
  1804   001770  EC8D  F013         	call	_read_internal_eeprom
  1805   001774  0100               	movlb	0	; () banked
  1806   001776  6FB9               	movwf	(_print+6)& (0+255),b
  1807   001778                     
  1808                           ; BSR set to: 0
  1809                           ;common.c: 212:         print[7] = read_internal_eeprom(0x07 + f);
  1810   001778  5045               	movf	_f^0,w,c
  1811   00177A  0F07               	addlw	7
  1812   00177C  EC8D  F013         	call	_read_internal_eeprom
  1813   001780  0100               	movlb	0	; () banked
  1814   001782  6FBA               	movwf	(_print+7)& (0+255),b
  1815   001784                     
  1816                           ; BSR set to: 0
  1817                           ;common.c: 213:         print[8] = ' ';
  1818   001784  0E20               	movlw	32
  1819   001786  6FBB               	movwf	(_print+8)& (0+255),b
  1820   001788                     
  1821                           ; BSR set to: 0
  1822                           ;common.c: 214:         print[9] = read_internal_eeprom(0x08 + f);
  1823   001788  5045               	movf	_f^0,w,c
  1824   00178A  0F08               	addlw	8
  1825   00178C  EC8D  F013         	call	_read_internal_eeprom
  1826   001790  0100               	movlb	0	; () banked
  1827   001792  6FBC               	movwf	(_print+9)& (0+255),b
  1828   001794                     
  1829                           ; BSR set to: 0
  1830                           ;common.c: 215:         print[10] = read_internal_eeprom(0X09 + f);
  1831   001794  5045               	movf	_f^0,w,c
  1832   001796  0F09               	addlw	9
  1833   001798  EC8D  F013         	call	_read_internal_eeprom
  1834   00179C  0100               	movlb	0	; () banked
  1835   00179E  6FBD               	movwf	(_print+10)& (0+255),b
  1836   0017A0                     
  1837                           ; BSR set to: 0
  1838                           ;common.c: 216:         print[11] = '\0';
  1839   0017A0  0E00               	movlw	0
  1840   0017A2  6FBE               	movwf	(_print+11)& (0+255),b
  1841   0017A4                     
  1842                           ; BSR set to: 0
  1843                           ;common.c: 217:         pk = read_internal_eeprom(0x0A + f);
  1844   0017A4  5045               	movf	_f^0,w,c
  1845   0017A6  0F0A               	addlw	10
  1846   0017A8  EC8D  F013         	call	_read_internal_eeprom
  1847   0017AC  6E12               	movwf	??_view_log^0,c
  1848   0017AE  5012               	movf	??_view_log^0,w,c
  1849   0017B0  0100               	movlb	0	; () banked
  1850   0017B2  6FA2               	movwf	_pk& (0+255),b
  1851   0017B4  6BA3               	clrf	(_pk+1)& (0+255),b
  1852   0017B6                     
  1853                           ; BSR set to: 0
  1854                           ;common.c: 219:         clcd_putch(Event + '0', (0xC0 + (0)));
  1855   0017B6  0EC0               	movlw	192
  1856   0017B8  6E08               	movwf	clcd_putch@addr^0,c
  1857   0017BA  51A0               	movf	_Event& (0+255),w,b
  1858   0017BC  0F30               	addlw	48
  1859   0017BE  ECDB  F012         	call	_clcd_putch
  1860   0017C2                     
  1861                           ;common.c: 220:         clcd_print(print, (0xC0 + (2)));
  1862   0017C2  0EB3               	movlw	low _print
  1863   0017C4  6E0C               	movwf	clcd_print@str^0,c
  1864   0017C6  6A0D               	clrf	(clcd_print@str+1)^0,c
  1865   0017C8  0EC2               	movlw	194
  1866   0017CA  6E0E               	movwf	clcd_print@addr^0,c
  1867   0017CC  ECDD  F010         	call	_clcd_print	;wreg free
  1868   0017D0                     
  1869                           ;common.c: 221:         clcd_putch((pk / 10) + '0', (0xC0 + (14)));
  1870   0017D0  0ECE               	movlw	206
  1871   0017D2  6E08               	movwf	clcd_putch@addr^0,c
  1872   0017D4  C0A2  F001         	movff	_pk,___lwdiv@dividend
  1873   0017D8  C0A3  F002         	movff	_pk+1,___lwdiv@dividend+1
  1874   0017DC  0E00               	movlw	0
  1875   0017DE  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1876   0017E0  0E0A               	movlw	10
  1877   0017E2  6E03               	movwf	___lwdiv@divisor^0,c
  1878   0017E4  ECDA  F011         	call	___lwdiv	;wreg free
  1879   0017E8  5001               	movf	?___lwdiv^0,w,c
  1880   0017EA  0F30               	addlw	48
  1881   0017EC  ECDB  F012         	call	_clcd_putch
  1882   0017F0                     
  1883                           ;common.c: 222:         clcd_putch((pk % 10) + '0', (0xC0 + (15)));
  1884   0017F0  0ECF               	movlw	207
  1885   0017F2  6E08               	movwf	clcd_putch@addr^0,c
  1886   0017F4  C0A2  F001         	movff	_pk,___lwmod@dividend
  1887   0017F8  C0A3  F002         	movff	_pk+1,___lwmod@dividend+1
  1888   0017FC  0E00               	movlw	0
  1889   0017FE  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1890   001800  0E0A               	movlw	10
  1891   001802  6E03               	movwf	___lwmod@divisor^0,c
  1892   001804  EC14  F012         	call	___lwmod	;wreg free
  1893   001808  5001               	movf	?___lwmod^0,w,c
  1894   00180A  0F30               	addlw	48
  1895   00180C  ECDB  F012         	call	_clcd_putch
  1896                           
  1897                           ;common.c: 223:     } else {
  1898   001810  EF12  F00C         	goto	l3711
  1899   001814                     l3709:
  1900                           
  1901                           ;common.c: 224:         clcd_print("EMPTY", (0xC0 + (3)));
  1902   001814  0EF5               	movlw	low STR_10
  1903   001816  6E0C               	movwf	clcd_print@str^0,c
  1904   001818  0E7F               	movlw	high STR_10
  1905   00181A  6E0D               	movwf	(clcd_print@str+1)^0,c
  1906   00181C  0EC3               	movlw	195
  1907   00181E  6E0E               	movwf	clcd_print@addr^0,c
  1908   001820  ECDD  F010         	call	_clcd_print	;wreg free
  1909   001824                     l3711:
  1910                           
  1911                           ;common.c: 226:     if (delay >= 500) {
  1912   001824  503C               	movf	(_delay+3)^0,w,c
  1913   001826  103B               	iorwf	(_delay+2)^0,w,c
  1914   001828  E10B               	bnz	u3400
  1915   00182A  0EF4               	movlw	244
  1916   00182C  5C39               	subwf	_delay^0,w,c
  1917   00182E  0E01               	movlw	1
  1918   001830  583A               	subwfb	(_delay+1)^0,w,c
  1919   001832  A0D8               	btfss	status,0,c
  1920   001834  EF1E  F00C         	goto	u3401
  1921   001838  EF20  F00C         	goto	u3400
  1922   00183C                     u3401:
  1923   00183C  EF38  F00C         	goto	l222
  1924   001840                     u3400:
  1925   001840                     
  1926                           ;common.c: 227:         clcd_write(0x01);
  1927   001840  0E01               	movlw	1
  1928   001842  ECF7  F012         	call	_clcd_write
  1929   001846                     
  1930                           ;common.c: 228:         SCREEN_FLAG = 0;
  1931   001846  0E00               	movlw	0
  1932   001848  6E50               	movwf	(_SCREEN_FLAG+1)^0,c
  1933   00184A  0E00               	movlw	0
  1934   00184C  6E4F               	movwf	_SCREEN_FLAG^0,c
  1935   00184E                     
  1936                           ;common.c: 229:         delay = 0;
  1937   00184E  0E00               	movlw	0
  1938   001850  6E39               	movwf	_delay^0,c
  1939   001852  0E00               	movlw	0
  1940   001854  6E3A               	movwf	(_delay+1)^0,c
  1941   001856  0E00               	movlw	0
  1942   001858  6E3B               	movwf	(_delay+2)^0,c
  1943   00185A  0E00               	movlw	0
  1944   00185C  6E3C               	movwf	(_delay+3)^0,c
  1945   00185E                     
  1946                           ;common.c: 230:         flag = 1;
  1947   00185E  0E01               	movlw	1
  1948   001860  0100               	movlb	0	; () banked
  1949   001862  6FD0               	movwf	_flag& (0+255),b
  1950   001864                     
  1951                           ; BSR set to: 0
  1952                           ;common.c: 231:         NEW_KEY = 0;
  1953   001864  0E00               	movlw	0
  1954   001866  6E52               	movwf	_NEW_KEY^0,c
  1955   001868                     
  1956                           ; BSR set to: 0
  1957                           ;common.c: 232:         MENU_FLAG = 0;
  1958   001868  0E00               	movlw	0
  1959   00186A  6E4E               	movwf	(_MENU_FLAG+1)^0,c
  1960   00186C  0E00               	movlw	0
  1961   00186E  6E4D               	movwf	_MENU_FLAG^0,c
  1962   001870                     l222:
  1963   001870  0012               	return		;funcret
  1964   001872                     __end_of_view_log:
  1965                           	callstack 0
  1966                           
  1967 ;; *************** function _set_times *****************
  1968 ;; Defined at:
  1969 ;;		line 306 in file "common.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  y               4   17[COMRAM] unsigned long 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1983 ;;      Params:         0       0       0       0       0       0       0
  1984 ;;      Locals:         4       0       0       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0
  1986 ;;      Totals:         4       0       0       0       0       0       0
  1987 ;;Total ram usage:        4 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 4
  1990 ;; This function calls:
  1991 ;;		___lwdiv
  1992 ;;		___lwmod
  1993 ;;		_clcd_print
  1994 ;;		_clcd_write
  1995 ;;		_read_switches
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text2
  2002   000012                     __ptext2:
  2003                           	callstack 0
  2004   000012                     _set_times:
  2005                           	callstack 26
  2006   000012                     
  2007                           ;common.c: 307:     key = read_switches(0);
  2008   000012  0E00               	movlw	0
  2009   000014  EC9D  F011         	call	_read_switches
  2010   000018  6E53               	movwf	_key^0,c
  2011   00001A                     
  2012                           ;common.c: 308:     if (key == 5 || key == 6) {
  2013   00001A  0E05               	movlw	5
  2014   00001C  1853               	xorwf	_key^0,w,c
  2015   00001E  B4D8               	btfsc	status,2,c
  2016   000020  EF14  F000         	goto	u3461
  2017   000024  EF16  F000         	goto	u3460
  2018   000028                     u3461:
  2019   000028  EF1F  F000         	goto	l3825
  2020   00002C                     u3460:
  2021   00002C  0E06               	movlw	6
  2022   00002E  1853               	xorwf	_key^0,w,c
  2023   000030  A4D8               	btfss	status,2,c
  2024   000032  EF1D  F000         	goto	u3471
  2025   000036  EF1F  F000         	goto	u3470
  2026   00003A                     u3471:
  2027   00003A  EF27  F000         	goto	l265
  2028   00003E                     u3470:
  2029   00003E                     l3825:
  2030                           
  2031                           ;common.c: 309:         delay++;
  2032   00003E  0E01               	movlw	1
  2033   000040  2639               	addwf	_delay^0,f,c
  2034   000042  0E00               	movlw	0
  2035   000044  223A               	addwfc	(_delay+1)^0,f,c
  2036   000046  223B               	addwfc	(_delay+2)^0,f,c
  2037   000048  223C               	addwfc	(_delay+3)^0,f,c
  2038   00004A                     
  2039                           ;common.c: 310:         NEW_KEY = key;
  2040   00004A  C053  F052         	movff	_key,_NEW_KEY
  2041   00004E                     l265:
  2042                           
  2043                           ;common.c: 312:     if (delay < 500 && key == 0xFF) {
  2044   00004E  503C               	movf	(_delay+3)^0,w,c
  2045   000050  103B               	iorwf	(_delay+2)^0,w,c
  2046   000052  E109               	bnz	u3481
  2047   000054  0EF4               	movlw	244
  2048   000056  5C39               	subwf	_delay^0,w,c
  2049   000058  0E01               	movlw	1
  2050   00005A  583A               	subwfb	(_delay+1)^0,w,c
  2051   00005C  B0D8               	btfsc	status,0,c
  2052   00005E  EF33  F000         	goto	u3481
  2053   000062  EF35  F000         	goto	u3480
  2054   000066                     u3481:
  2055   000066  EF23  F001         	goto	l3881
  2056   00006A                     u3480:
  2057   00006A  2853               	incf	_key^0,w,c
  2058   00006C  A4D8               	btfss	status,2,c
  2059   00006E  EF3B  F000         	goto	u3491
  2060   000072  EF3D  F000         	goto	u3490
  2061   000076                     u3491:
  2062   000076  EF23  F001         	goto	l3881
  2063   00007A                     u3490:
  2064   00007A                     
  2065                           ;common.c: 313:         if (NEW_KEY == 6) {
  2066   00007A  0E06               	movlw	6
  2067   00007C  1852               	xorwf	_NEW_KEY^0,w,c
  2068   00007E  A4D8               	btfss	status,2,c
  2069   000080  EF44  F000         	goto	u3501
  2070   000084  EF46  F000         	goto	u3500
  2071   000088                     u3501:
  2072   000088  EFEA  F000         	goto	l3869
  2073   00008C                     u3500:
  2074   00008C                     
  2075                           ;common.c: 314:             if (FILED == 1) {
  2076   00008C  0441               	decf	_FILED^0,w,c
  2077   00008E  1042               	iorwf	(_FILED+1)^0,w,c
  2078   000090  A4D8               	btfss	status,2,c
  2079   000092  EF4D  F000         	goto	u3511
  2080   000096  EF4F  F000         	goto	u3510
  2081   00009A                     u3511:
  2082   00009A  EF7C  F000         	goto	l3845
  2083   00009E                     u3510:
  2084   00009E                     
  2085                           ;common.c: 315:                 ++second;
  2086   00009E  0100               	movlb	0	; () banked
  2087   0000A0  4BAC               	infsnz	_second& (0+255),f,b
  2088   0000A2  2BAD               	incf	(_second+1)& (0+255),f,b
  2089   0000A4                     
  2090                           ; BSR set to: 0
  2091                           ;common.c: 316:                 if (second == 60) {
  2092   0000A4  0E3C               	movlw	60
  2093   0000A6  19AC               	xorwf	_second& (0+255),w,b
  2094   0000A8  11AD               	iorwf	(_second+1)& (0+255),w,b
  2095   0000AA  A4D8               	btfss	status,2,c
  2096   0000AC  EF5A  F000         	goto	u3521
  2097   0000B0  EF5C  F000         	goto	u3520
  2098   0000B4                     u3521:
  2099   0000B4  EF60  F000         	goto	l3841
  2100   0000B8                     u3520:
  2101   0000B8                     
  2102                           ; BSR set to: 0
  2103                           ;common.c: 317:                     second = 0;
  2104   0000B8  0E00               	movlw	0
  2105   0000BA  6FAD               	movwf	(_second+1)& (0+255),b
  2106   0000BC  0E00               	movlw	0
  2107   0000BE  6FAC               	movwf	_second& (0+255),b
  2108   0000C0                     l3841:
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;common.c: 319:                 change_Time[6] = second / 10 + '0';
  2112   0000C0  C0AC  F001         	movff	_second,___lwdiv@dividend
  2113   0000C4  C0AD  F002         	movff	_second+1,___lwdiv@dividend+1
  2114   0000C8  0E00               	movlw	0
  2115   0000CA  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2116   0000CC  0E0A               	movlw	10
  2117   0000CE  6E03               	movwf	___lwdiv@divisor^0,c
  2118   0000D0  ECDA  F011         	call	___lwdiv	;wreg free
  2119   0000D4  5001               	movf	?___lwdiv^0,w,c
  2120   0000D6  0F30               	addlw	48
  2121   0000D8  0100               	movlb	0	; () banked
  2122   0000DA  6FD7               	movwf	(_change_Time+6)& (0+255),b
  2123   0000DC                     
  2124                           ; BSR set to: 0
  2125                           ;common.c: 320:                 change_Time[7] = second % 10 + '0';
  2126   0000DC  C0AC  F001         	movff	_second,___lwmod@dividend
  2127   0000E0  C0AD  F002         	movff	_second+1,___lwmod@dividend+1
  2128   0000E4  0E00               	movlw	0
  2129   0000E6  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2130   0000E8  0E0A               	movlw	10
  2131   0000EA  6E03               	movwf	___lwmod@divisor^0,c
  2132   0000EC  EC14  F012         	call	___lwmod	;wreg free
  2133   0000F0  5001               	movf	?___lwmod^0,w,c
  2134   0000F2  0F30               	addlw	48
  2135   0000F4  0100               	movlb	0	; () banked
  2136   0000F6  6FD8               	movwf	(_change_Time+7)& (0+255),b
  2137   0000F8                     l3845:
  2138                           
  2139                           ;common.c: 322:             if (FILED == 2) {
  2140   0000F8  0E02               	movlw	2
  2141   0000FA  1841               	xorwf	_FILED^0,w,c
  2142   0000FC  1042               	iorwf	(_FILED+1)^0,w,c
  2143   0000FE  A4D8               	btfss	status,2,c
  2144   000100  EF84  F000         	goto	u3531
  2145   000104  EF86  F000         	goto	u3530
  2146   000108                     u3531:
  2147   000108  EFB3  F000         	goto	l3857
  2148   00010C                     u3530:
  2149   00010C                     
  2150                           ;common.c: 323:                 ++min;
  2151   00010C  0100               	movlb	0	; () banked
  2152   00010E  4B9C               	infsnz	_min& (0+255),f,b
  2153   000110  2B9D               	incf	(_min+1)& (0+255),f,b
  2154   000112                     
  2155                           ; BSR set to: 0
  2156                           ;common.c: 324:                 if (min == 60) {
  2157   000112  0E3C               	movlw	60
  2158   000114  199C               	xorwf	_min& (0+255),w,b
  2159   000116  119D               	iorwf	(_min+1)& (0+255),w,b
  2160   000118  A4D8               	btfss	status,2,c
  2161   00011A  EF91  F000         	goto	u3541
  2162   00011E  EF93  F000         	goto	u3540
  2163   000122                     u3541:
  2164   000122  EF97  F000         	goto	l3853
  2165   000126                     u3540:
  2166   000126                     
  2167                           ; BSR set to: 0
  2168                           ;common.c: 325:                     min = 0;
  2169   000126  0E00               	movlw	0
  2170   000128  6F9D               	movwf	(_min+1)& (0+255),b
  2171   00012A  0E00               	movlw	0
  2172   00012C  6F9C               	movwf	_min& (0+255),b
  2173   00012E                     l3853:
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;common.c: 327:                 change_Time[3] = min / 10 + '0';
  2177   00012E  C09C  F001         	movff	_min,___lwdiv@dividend
  2178   000132  C09D  F002         	movff	_min+1,___lwdiv@dividend+1
  2179   000136  0E00               	movlw	0
  2180   000138  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2181   00013A  0E0A               	movlw	10
  2182   00013C  6E03               	movwf	___lwdiv@divisor^0,c
  2183   00013E  ECDA  F011         	call	___lwdiv	;wreg free
  2184   000142  5001               	movf	?___lwdiv^0,w,c
  2185   000144  0F30               	addlw	48
  2186   000146  0100               	movlb	0	; () banked
  2187   000148  6FD4               	movwf	(_change_Time+3)& (0+255),b
  2188   00014A                     
  2189                           ; BSR set to: 0
  2190                           ;common.c: 328:                 change_Time[4] = min % 10 + '0';
  2191   00014A  C09C  F001         	movff	_min,___lwmod@dividend
  2192   00014E  C09D  F002         	movff	_min+1,___lwmod@dividend+1
  2193   000152  0E00               	movlw	0
  2194   000154  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2195   000156  0E0A               	movlw	10
  2196   000158  6E03               	movwf	___lwmod@divisor^0,c
  2197   00015A  EC14  F012         	call	___lwmod	;wreg free
  2198   00015E  5001               	movf	?___lwmod^0,w,c
  2199   000160  0F30               	addlw	48
  2200   000162  0100               	movlb	0	; () banked
  2201   000164  6FD5               	movwf	(_change_Time+4)& (0+255),b
  2202   000166                     l3857:
  2203                           
  2204                           ;common.c: 330:             if (FILED == 3) {
  2205   000166  0E03               	movlw	3
  2206   000168  1841               	xorwf	_FILED^0,w,c
  2207   00016A  1042               	iorwf	(_FILED+1)^0,w,c
  2208   00016C  A4D8               	btfss	status,2,c
  2209   00016E  EFBB  F000         	goto	u3551
  2210   000172  EFBD  F000         	goto	u3550
  2211   000176                     u3551:
  2212   000176  EFEA  F000         	goto	l3869
  2213   00017A                     u3550:
  2214   00017A                     
  2215                           ;common.c: 331:                 ++hour;
  2216   00017A  0100               	movlb	0	; () banked
  2217   00017C  4B9A               	infsnz	_hour& (0+255),f,b
  2218   00017E  2B9B               	incf	(_hour+1)& (0+255),f,b
  2219   000180                     
  2220                           ; BSR set to: 0
  2221                           ;common.c: 332:                 if (hour == 13) {
  2222   000180  0E0D               	movlw	13
  2223   000182  199A               	xorwf	_hour& (0+255),w,b
  2224   000184  119B               	iorwf	(_hour+1)& (0+255),w,b
  2225   000186  A4D8               	btfss	status,2,c
  2226   000188  EFC8  F000         	goto	u3561
  2227   00018C  EFCA  F000         	goto	u3560
  2228   000190                     u3561:
  2229   000190  EFCE  F000         	goto	l3865
  2230   000194                     u3560:
  2231   000194                     
  2232                           ; BSR set to: 0
  2233                           ;common.c: 333:                     hour = 0;
  2234   000194  0E00               	movlw	0
  2235   000196  6F9B               	movwf	(_hour+1)& (0+255),b
  2236   000198  0E00               	movlw	0
  2237   00019A  6F9A               	movwf	_hour& (0+255),b
  2238   00019C                     l3865:
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;common.c: 335:                 change_Time[0] = hour / 10 + '0';
  2242   00019C  C09A  F001         	movff	_hour,___lwdiv@dividend
  2243   0001A0  C09B  F002         	movff	_hour+1,___lwdiv@dividend+1
  2244   0001A4  0E00               	movlw	0
  2245   0001A6  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2246   0001A8  0E0A               	movlw	10
  2247   0001AA  6E03               	movwf	___lwdiv@divisor^0,c
  2248   0001AC  ECDA  F011         	call	___lwdiv	;wreg free
  2249   0001B0  5001               	movf	?___lwdiv^0,w,c
  2250   0001B2  0F30               	addlw	48
  2251   0001B4  0100               	movlb	0	; () banked
  2252   0001B6  6FD1               	movwf	_change_Time& (0+255),b
  2253   0001B8                     
  2254                           ; BSR set to: 0
  2255                           ;common.c: 336:                 change_Time[1] = hour % 10 + '0';
  2256   0001B8  C09A  F001         	movff	_hour,___lwmod@dividend
  2257   0001BC  C09B  F002         	movff	_hour+1,___lwmod@dividend+1
  2258   0001C0  0E00               	movlw	0
  2259   0001C2  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2260   0001C4  0E0A               	movlw	10
  2261   0001C6  6E03               	movwf	___lwmod@divisor^0,c
  2262   0001C8  EC14  F012         	call	___lwmod	;wreg free
  2263   0001CC  5001               	movf	?___lwmod^0,w,c
  2264   0001CE  0F30               	addlw	48
  2265   0001D0  0100               	movlb	0	; () banked
  2266   0001D2  6FD2               	movwf	(_change_Time+1)& (0+255),b
  2267   0001D4                     l3869:
  2268                           
  2269                           ;common.c: 339:         if (NEW_KEY == 5 && FILED < 3) {
  2270   0001D4  0E05               	movlw	5
  2271   0001D6  1852               	xorwf	_NEW_KEY^0,w,c
  2272   0001D8  A4D8               	btfss	status,2,c
  2273   0001DA  EFF1  F000         	goto	u3571
  2274   0001DE  EFF3  F000         	goto	u3570
  2275   0001E2                     u3571:
  2276   0001E2  EF02  F001         	goto	l3875
  2277   0001E6                     u3570:
  2278   0001E6  5042               	movf	(_FILED+1)^0,w,c
  2279   0001E8  E107               	bnz	u3581
  2280   0001EA  0E03               	movlw	3
  2281   0001EC  5C41               	subwf	_FILED^0,w,c
  2282   0001EE  B0D8               	btfsc	status,0,c
  2283   0001F0  EFFC  F000         	goto	u3581
  2284   0001F4  EFFE  F000         	goto	u3580
  2285   0001F8                     u3581:
  2286   0001F8  EF02  F001         	goto	l3875
  2287   0001FC                     u3580:
  2288   0001FC                     
  2289                           ;common.c: 340:             FILED++;
  2290   0001FC  4A41               	infsnz	_FILED^0,f,c
  2291   0001FE  2A42               	incf	(_FILED+1)^0,f,c
  2292                           
  2293                           ;common.c: 341:         } else if (NEW_KEY == 5 && FILED == 3) {
  2294   000200  EF19  F001         	goto	l277
  2295   000204                     l3875:
  2296   000204  0E05               	movlw	5
  2297   000206  1852               	xorwf	_NEW_KEY^0,w,c
  2298   000208  A4D8               	btfss	status,2,c
  2299   00020A  EF09  F001         	goto	u3591
  2300   00020E  EF0B  F001         	goto	u3590
  2301   000212                     u3591:
  2302   000212  EF19  F001         	goto	l277
  2303   000216                     u3590:
  2304   000216  0E03               	movlw	3
  2305   000218  1841               	xorwf	_FILED^0,w,c
  2306   00021A  1042               	iorwf	(_FILED+1)^0,w,c
  2307   00021C  A4D8               	btfss	status,2,c
  2308   00021E  EF13  F001         	goto	u3601
  2309   000222  EF15  F001         	goto	u3600
  2310   000226                     u3601:
  2311   000226  EF19  F001         	goto	l277
  2312   00022A                     u3600:
  2313   00022A                     
  2314                           ;common.c: 342:             FILED = 1;
  2315   00022A  0E00               	movlw	0
  2316   00022C  6E42               	movwf	(_FILED+1)^0,c
  2317   00022E  0E01               	movlw	1
  2318   000230  6E41               	movwf	_FILED^0,c
  2319   000232                     l277:
  2320                           
  2321                           ;common.c: 344:         NEW_KEY = 0;
  2322   000232  0E00               	movlw	0
  2323   000234  6E52               	movwf	_NEW_KEY^0,c
  2324                           
  2325                           ;common.c: 345:         delay = 0;
  2326   000236  0E00               	movlw	0
  2327   000238  6E39               	movwf	_delay^0,c
  2328   00023A  0E00               	movlw	0
  2329   00023C  6E3A               	movwf	(_delay+1)^0,c
  2330   00023E  0E00               	movlw	0
  2331   000240  6E3B               	movwf	(_delay+2)^0,c
  2332   000242  0E00               	movlw	0
  2333   000244  6E3C               	movwf	(_delay+3)^0,c
  2334   000246                     l3881:
  2335                           
  2336                           ;common.c: 347:     if (blink_f) {
  2337   000246  0100               	movlb	0	; () banked
  2338   000248  5196               	movf	_blink_f& (0+255),w,b
  2339   00024A  1197               	iorwf	(_blink_f+1)& (0+255),w,b
  2340   00024C  B4D8               	btfsc	status,2,c
  2341   00024E  EF2B  F001         	goto	u3611
  2342   000252  EF2D  F001         	goto	u3610
  2343   000256                     u3611:
  2344   000256  EF3B  F001         	goto	l3887
  2345   00025A                     u3610:
  2346   00025A                     
  2347                           ; BSR set to: 0
  2348                           ;common.c: 348:         wait = 0;
  2349   00025A  0E00               	movlw	0
  2350   00025C  6F6C               	movwf	_wait& (0+255),b
  2351   00025E  0E00               	movlw	0
  2352   000260  6F6D               	movwf	(_wait+1)& (0+255),b
  2353   000262  0E00               	movlw	0
  2354   000264  6F6E               	movwf	(_wait+2)& (0+255),b
  2355   000266  0E00               	movlw	0
  2356   000268  6F6F               	movwf	(_wait+3)& (0+255),b
  2357   00026A                     
  2358                           ; BSR set to: 0
  2359                           ;common.c: 349:         BLINK = FILED;
  2360   00026A  C041  F098         	movff	_FILED,_BLINK
  2361   00026E  C042  F099         	movff	_FILED+1,_BLINK+1
  2362                           
  2363                           ;common.c: 350:     } else {
  2364   000272  EF3F  F001         	goto	l3889
  2365   000276                     l3887:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;common.c: 351:         BLINK = 0;
  2369   000276  0E00               	movlw	0
  2370   000278  6F99               	movwf	(_BLINK+1)& (0+255),b
  2371   00027A  0E00               	movlw	0
  2372   00027C  6F98               	movwf	_BLINK& (0+255),b
  2373   00027E                     l3889:
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;common.c: 353:     if (BLINK == 1) {
  2377   00027E  0598               	decf	_BLINK& (0+255),w,b
  2378   000280  1199               	iorwf	(_BLINK+1)& (0+255),w,b
  2379   000282  A4D8               	btfss	status,2,c
  2380   000284  EF46  F001         	goto	u3621
  2381   000288  EF48  F001         	goto	u3620
  2382   00028C                     u3621:
  2383   00028C  EF52  F001         	goto	l3893
  2384   000290                     u3620:
  2385   000290                     
  2386                           ; BSR set to: 0
  2387                           ;common.c: 354:         clcd_print("  ", (0xC0 + (10)));
  2388   000290  0EE2               	movlw	low (STR_7+14)
  2389   000292  6E0C               	movwf	clcd_print@str^0,c
  2390   000294  0E7E               	movlw	high (STR_7+14)
  2391   000296  6E0D               	movwf	(clcd_print@str+1)^0,c
  2392   000298  0ECA               	movlw	202
  2393   00029A  6E0E               	movwf	clcd_print@addr^0,c
  2394   00029C  ECDD  F010         	call	_clcd_print	;wreg free
  2395                           
  2396                           ;common.c: 355:     } else if (BLINK == 2) {
  2397   0002A0  EF81  F001         	goto	l282
  2398   0002A4                     l3893:
  2399                           
  2400                           ; BSR set to: 0
  2401   0002A4  0E02               	movlw	2
  2402   0002A6  1998               	xorwf	_BLINK& (0+255),w,b
  2403   0002A8  1199               	iorwf	(_BLINK+1)& (0+255),w,b
  2404   0002AA  A4D8               	btfss	status,2,c
  2405   0002AC  EF5A  F001         	goto	u3631
  2406   0002B0  EF5C  F001         	goto	u3630
  2407   0002B4                     u3631:
  2408   0002B4  EF66  F001         	goto	l3897
  2409   0002B8                     u3630:
  2410   0002B8                     
  2411                           ; BSR set to: 0
  2412                           ;common.c: 356:         clcd_print("  ", (0xC0 + (7)));
  2413   0002B8  0EE2               	movlw	low (STR_7+14)
  2414   0002BA  6E0C               	movwf	clcd_print@str^0,c
  2415   0002BC  0E7E               	movlw	high (STR_7+14)
  2416   0002BE  6E0D               	movwf	(clcd_print@str+1)^0,c
  2417   0002C0  0EC7               	movlw	199
  2418   0002C2  6E0E               	movwf	clcd_print@addr^0,c
  2419   0002C4  ECDD  F010         	call	_clcd_print	;wreg free
  2420                           
  2421                           ;common.c: 357:     } else if (BLINK == 3) {
  2422   0002C8  EF81  F001         	goto	l282
  2423   0002CC                     l3897:
  2424                           
  2425                           ; BSR set to: 0
  2426   0002CC  0E03               	movlw	3
  2427   0002CE  1998               	xorwf	_BLINK& (0+255),w,b
  2428   0002D0  1199               	iorwf	(_BLINK+1)& (0+255),w,b
  2429   0002D2  A4D8               	btfss	status,2,c
  2430   0002D4  EF6E  F001         	goto	u3641
  2431   0002D8  EF70  F001         	goto	u3640
  2432   0002DC                     u3641:
  2433   0002DC  EF7A  F001         	goto	l3901
  2434   0002E0                     u3640:
  2435   0002E0                     
  2436                           ; BSR set to: 0
  2437                           ;common.c: 358:         clcd_print("  ", (0xC0 + (4)));
  2438   0002E0  0EE2               	movlw	low (STR_7+14)
  2439   0002E2  6E0C               	movwf	clcd_print@str^0,c
  2440   0002E4  0E7E               	movlw	high (STR_7+14)
  2441   0002E6  6E0D               	movwf	(clcd_print@str+1)^0,c
  2442   0002E8  0EC4               	movlw	196
  2443   0002EA  6E0E               	movwf	clcd_print@addr^0,c
  2444   0002EC  ECDD  F010         	call	_clcd_print	;wreg free
  2445                           
  2446                           ;common.c: 359:     } else {
  2447   0002F0  EF81  F001         	goto	l282
  2448   0002F4                     l3901:
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;common.c: 360:         clcd_print(change_Time, (0xC0 + (4)));
  2452   0002F4  0ED1               	movlw	low _change_Time
  2453   0002F6  6E0C               	movwf	clcd_print@str^0,c
  2454   0002F8  6A0D               	clrf	(clcd_print@str+1)^0,c
  2455   0002FA  0EC4               	movlw	196
  2456   0002FC  6E0E               	movwf	clcd_print@addr^0,c
  2457   0002FE  ECDD  F010         	call	_clcd_print	;wreg free
  2458   000302                     l282:
  2459                           
  2460                           ;common.c: 362:     clcd_print("HH:MM:SS", (0x80 + (4)));
  2461   000302  0EEC               	movlw	low STR_23
  2462   000304  6E0C               	movwf	clcd_print@str^0,c
  2463   000306  0E7F               	movlw	high STR_23
  2464   000308  6E0D               	movwf	(clcd_print@str+1)^0,c
  2465   00030A  0E84               	movlw	132
  2466   00030C  6E0E               	movwf	clcd_print@addr^0,c
  2467   00030E  ECDD  F010         	call	_clcd_print	;wreg free
  2468   000312                     
  2469                           ;common.c: 363:     if (delay > 500) {
  2470   000312  503C               	movf	(_delay+3)^0,w,c
  2471   000314  103B               	iorwf	(_delay+2)^0,w,c
  2472   000316  E10B               	bnz	u3650
  2473   000318  0EF5               	movlw	245
  2474   00031A  5C39               	subwf	_delay^0,w,c
  2475   00031C  0E01               	movlw	1
  2476   00031E  583A               	subwfb	(_delay+1)^0,w,c
  2477   000320  A0D8               	btfss	status,0,c
  2478   000322  EF95  F001         	goto	u3651
  2479   000326  EF97  F001         	goto	u3650
  2480   00032A                     u3651:
  2481   00032A  EF2C  F002         	goto	l293
  2482   00032E                     u3650:
  2483   00032E                     
  2484                           ;common.c: 364:         if (NEW_KEY == 6) {
  2485   00032E  0E06               	movlw	6
  2486   000330  1852               	xorwf	_NEW_KEY^0,w,c
  2487   000332  A4D8               	btfss	status,2,c
  2488   000334  EF9E  F001         	goto	u3661
  2489   000338  EFA0  F001         	goto	u3660
  2490   00033C                     u3661:
  2491   00033C  EFC8  F001         	goto	l3927
  2492   000340                     u3660:
  2493   000340                     
  2494                           ;common.c: 365:             clcd_write(0x01);
  2495   000340  0E01               	movlw	1
  2496   000342  ECF7  F012         	call	_clcd_write
  2497   000346                     
  2498                           ;common.c: 366:             MENU_FLAG = 0;
  2499   000346  0E00               	movlw	0
  2500   000348  6E4E               	movwf	(_MENU_FLAG+1)^0,c
  2501   00034A  0E00               	movlw	0
  2502   00034C  6E4D               	movwf	_MENU_FLAG^0,c
  2503   00034E                     
  2504                           ;common.c: 367:             NEW_KEY = 0;
  2505   00034E  0E00               	movlw	0
  2506   000350  6E52               	movwf	_NEW_KEY^0,c
  2507   000352                     
  2508                           ;common.c: 368:             BLINK = 0;
  2509   000352  0E00               	movlw	0
  2510   000354  0100               	movlb	0	; () banked
  2511   000356  6F99               	movwf	(_BLINK+1)& (0+255),b
  2512   000358  0E00               	movlw	0
  2513   00035A  6F98               	movwf	_BLINK& (0+255),b
  2514   00035C                     
  2515                           ; BSR set to: 0
  2516                           ;common.c: 369:             FILED = 0;
  2517   00035C  0E00               	movlw	0
  2518   00035E  6E42               	movwf	(_FILED+1)^0,c
  2519   000360  0E00               	movlw	0
  2520   000362  6E41               	movwf	_FILED^0,c
  2521   000364                     
  2522                           ; BSR set to: 0
  2523                           ;common.c: 370:             flag = 1;
  2524   000364  0E01               	movlw	1
  2525   000366  6FD0               	movwf	_flag& (0+255),b
  2526   000368                     
  2527                           ; BSR set to: 0
  2528                           ;common.c: 371:             delay = 0;
  2529   000368  0E00               	movlw	0
  2530   00036A  6E39               	movwf	_delay^0,c
  2531   00036C  0E00               	movlw	0
  2532   00036E  6E3A               	movwf	(_delay+1)^0,c
  2533   000370  0E00               	movlw	0
  2534   000372  6E3B               	movwf	(_delay+2)^0,c
  2535   000374  0E00               	movlw	0
  2536   000376  6E3C               	movwf	(_delay+3)^0,c
  2537   000378                     
  2538                           ; BSR set to: 0
  2539                           ;common.c: 372:             hour = 0;
  2540   000378  0E00               	movlw	0
  2541   00037A  6F9B               	movwf	(_hour+1)& (0+255),b
  2542   00037C  0E00               	movlw	0
  2543   00037E  6F9A               	movwf	_hour& (0+255),b
  2544   000380                     
  2545                           ; BSR set to: 0
  2546                           ;common.c: 373:             min = 0;
  2547   000380  0E00               	movlw	0
  2548   000382  6F9D               	movwf	(_min+1)& (0+255),b
  2549   000384  0E00               	movlw	0
  2550   000386  6F9C               	movwf	_min& (0+255),b
  2551   000388                     
  2552                           ; BSR set to: 0
  2553                           ;common.c: 374:             second = 0;
  2554   000388  0E00               	movlw	0
  2555   00038A  6FAD               	movwf	(_second+1)& (0+255),b
  2556   00038C  0E00               	movlw	0
  2557   00038E  6FAC               	movwf	_second& (0+255),b
  2558   000390                     l3927:
  2559                           
  2560                           ;common.c: 376:         if (NEW_KEY == 5) {
  2561   000390  0E05               	movlw	5
  2562   000392  1852               	xorwf	_NEW_KEY^0,w,c
  2563   000394  A4D8               	btfss	status,2,c
  2564   000396  EFCF  F001         	goto	u3671
  2565   00039A  EFD1  F001         	goto	u3670
  2566   00039E                     u3671:
  2567   00039E  EF2C  F002         	goto	l293
  2568   0003A2                     u3670:
  2569   0003A2                     
  2570                           ;common.c: 383:             clcd_write(0x01);
  2571   0003A2  0E01               	movlw	1
  2572   0003A4  ECF7  F012         	call	_clcd_write
  2573   0003A8                     
  2574                           ;common.c: 384:             clcd_print("TIME  CHANGED", (0x80 + (2)));
  2575   0003A8  0EA5               	movlw	low STR_24
  2576   0003AA  6E0C               	movwf	clcd_print@str^0,c
  2577   0003AC  0E7F               	movlw	high STR_24
  2578   0003AE  6E0D               	movwf	(clcd_print@str+1)^0,c
  2579   0003B0  0E82               	movlw	130
  2580   0003B2  6E0E               	movwf	clcd_print@addr^0,c
  2581   0003B4  ECDD  F010         	call	_clcd_print	;wreg free
  2582   0003B8                     
  2583                           ;common.c: 385:             clcd_print("SUCCESSFULLY", (0xC0 + (2)));
  2584   0003B8  0EC0               	movlw	low STR_19
  2585   0003BA  6E0C               	movwf	clcd_print@str^0,c
  2586   0003BC  0E7F               	movlw	high STR_19
  2587   0003BE  6E0D               	movwf	(clcd_print@str+1)^0,c
  2588   0003C0  0EC2               	movlw	194
  2589   0003C2  6E0E               	movwf	clcd_print@addr^0,c
  2590   0003C4  ECDD  F010         	call	_clcd_print	;wreg free
  2591   0003C8                     
  2592                           ;common.c: 386:             for (unsigned long int y = 0xFFFFA; --y;);
  2593   0003C8  0EFA               	movlw	250
  2594   0003CA  6E12               	movwf	set_times@y^0,c
  2595   0003CC  0EFF               	movlw	255
  2596   0003CE  6E13               	movwf	(set_times@y+1)^0,c
  2597   0003D0  0E0F               	movlw	15
  2598   0003D2  6E14               	movwf	(set_times@y+2)^0,c
  2599   0003D4  0E00               	movlw	0
  2600   0003D6  6E15               	movwf	(set_times@y+3)^0,c
  2601   0003D8                     l3937:
  2602   0003D8  0612               	decf	set_times@y^0,f,c
  2603   0003DA  0E00               	movlw	0
  2604   0003DC  5A13               	subwfb	(set_times@y+1)^0,f,c
  2605   0003DE  5A14               	subwfb	(set_times@y+2)^0,f,c
  2606   0003E0  5A15               	subwfb	(set_times@y+3)^0,f,c
  2607   0003E2  5012               	movf	set_times@y^0,w,c
  2608   0003E4  1013               	iorwf	(set_times@y+1)^0,w,c
  2609   0003E6  1014               	iorwf	(set_times@y+2)^0,w,c
  2610   0003E8  1015               	iorwf	(set_times@y+3)^0,w,c
  2611   0003EA  A4D8               	btfss	status,2,c
  2612   0003EC  EFFA  F001         	goto	u3681
  2613   0003F0  EFFC  F001         	goto	u3680
  2614   0003F4                     u3681:
  2615   0003F4  EFEC  F001         	goto	l3937
  2616   0003F8                     u3680:
  2617   0003F8                     
  2618                           ;common.c: 387:             clcd_write(0x01);
  2619   0003F8  0E01               	movlw	1
  2620   0003FA  ECF7  F012         	call	_clcd_write
  2621   0003FE                     
  2622                           ;common.c: 388:             SCREEN_FLAG = 0;
  2623   0003FE  0E00               	movlw	0
  2624   000400  6E50               	movwf	(_SCREEN_FLAG+1)^0,c
  2625   000402  0E00               	movlw	0
  2626   000404  6E4F               	movwf	_SCREEN_FLAG^0,c
  2627   000406                     
  2628                           ;common.c: 389:             EI = 10;
  2629   000406  0E0A               	movlw	10
  2630   000408  0100               	movlb	0	; () banked
  2631   00040A  6FAF               	movwf	_EI& (0+255),b
  2632   00040C                     
  2633                           ; BSR set to: 0
  2634                           ;common.c: 390:             EF = 1;
  2635   00040C  0E01               	movlw	1
  2636   00040E  6FB0               	movwf	_EF& (0+255),b
  2637   000410                     
  2638                           ; BSR set to: 0
  2639                           ;common.c: 391:             MENU_FLAG = 0;
  2640   000410  0E00               	movlw	0
  2641   000412  6E4E               	movwf	(_MENU_FLAG+1)^0,c
  2642   000414  0E00               	movlw	0
  2643   000416  6E4D               	movwf	_MENU_FLAG^0,c
  2644   000418                     
  2645                           ; BSR set to: 0
  2646                           ;common.c: 392:             NEW_KEY = 0;
  2647   000418  0E00               	movlw	0
  2648   00041A  6E52               	movwf	_NEW_KEY^0,c
  2649   00041C                     
  2650                           ; BSR set to: 0
  2651                           ;common.c: 393:             BLINK = 0;
  2652   00041C  0E00               	movlw	0
  2653   00041E  6F99               	movwf	(_BLINK+1)& (0+255),b
  2654   000420  0E00               	movlw	0
  2655   000422  6F98               	movwf	_BLINK& (0+255),b
  2656   000424                     
  2657                           ; BSR set to: 0
  2658                           ;common.c: 394:             FILED = 0;
  2659   000424  0E00               	movlw	0
  2660   000426  6E42               	movwf	(_FILED+1)^0,c
  2661   000428  0E00               	movlw	0
  2662   00042A  6E41               	movwf	_FILED^0,c
  2663   00042C                     
  2664                           ; BSR set to: 0
  2665                           ;common.c: 395:             flag = 1;
  2666   00042C  0E01               	movlw	1
  2667   00042E  6FD0               	movwf	_flag& (0+255),b
  2668   000430                     
  2669                           ; BSR set to: 0
  2670                           ;common.c: 396:             delay = 0;
  2671   000430  0E00               	movlw	0
  2672   000432  6E39               	movwf	_delay^0,c
  2673   000434  0E00               	movlw	0
  2674   000436  6E3A               	movwf	(_delay+1)^0,c
  2675   000438  0E00               	movlw	0
  2676   00043A  6E3B               	movwf	(_delay+2)^0,c
  2677   00043C  0E00               	movlw	0
  2678   00043E  6E3C               	movwf	(_delay+3)^0,c
  2679   000440                     
  2680                           ; BSR set to: 0
  2681                           ;common.c: 397:             hour = 0;
  2682   000440  0E00               	movlw	0
  2683   000442  6F9B               	movwf	(_hour+1)& (0+255),b
  2684   000444  0E00               	movlw	0
  2685   000446  6F9A               	movwf	_hour& (0+255),b
  2686   000448                     
  2687                           ; BSR set to: 0
  2688                           ;common.c: 398:             min = 0;
  2689   000448  0E00               	movlw	0
  2690   00044A  6F9D               	movwf	(_min+1)& (0+255),b
  2691   00044C  0E00               	movlw	0
  2692   00044E  6F9C               	movwf	_min& (0+255),b
  2693   000450                     
  2694                           ; BSR set to: 0
  2695                           ;common.c: 399:             second = 0;
  2696   000450  0E00               	movlw	0
  2697   000452  6FAD               	movwf	(_second+1)& (0+255),b
  2698   000454  0E00               	movlw	0
  2699   000456  6FAC               	movwf	_second& (0+255),b
  2700   000458                     l293:
  2701   000458  0012               	return		;funcret
  2702   00045A                     __end_of_set_times:
  2703                           	callstack 0
  2704                           
  2705 ;; *************** function _password_screen *****************
  2706 ;; Defined at:
  2707 ;;		line 72 in file "common.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  y               4   23[COMRAM] unsigned long 
  2712 ;;  y               4   19[COMRAM] unsigned long 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2722 ;;      Params:         0       0       0       0       0       0       0
  2723 ;;      Locals:         8       0       0       0       0       0       0
  2724 ;;      Temps:          2       0       0       0       0       0       0
  2725 ;;      Totals:        10       0       0       0       0       0       0
  2726 ;;Total ram usage:       10 bytes
  2727 ;; Hardware stack levels used: 1
  2728 ;; Hardware stack levels required when called: 4
  2729 ;; This function calls:
  2730 ;;		___lwdiv
  2731 ;;		___lwmod
  2732 ;;		_clcd_print
  2733 ;;		_clcd_putch
  2734 ;;		_clcd_write
  2735 ;;		_read_internal_eeprom
  2736 ;; This function is called by:
  2737 ;;		_main
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text3
  2742   00083C                     __ptext3:
  2743                           	callstack 0
  2744   00083C                     _password_screen:
  2745                           	callstack 26
  2746   00083C                     
  2747                           ;common.c: 74:     if (chance > 0) {
  2748   00083C  0100               	movlb	0	; () banked
  2749   00083E  BFCE               	btfsc	(_chance+1)& (0+255),7,b
  2750   000840  EF2A  F004         	goto	u3181
  2751   000844  51CE               	movf	(_chance+1)& (0+255),w,b
  2752   000846  E108               	bnz	u3180
  2753   000848  05CD               	decf	_chance& (0+255),w,b
  2754   00084A  A0D8               	btfss	status,0,c
  2755   00084C  EF2A  F004         	goto	u3181
  2756   000850  EF2C  F004         	goto	u3180
  2757   000854                     u3181:
  2758   000854  EF9E  F005         	goto	l3621
  2759   000858                     u3180:
  2760   000858                     
  2761                           ; BSR set to: 0
  2762                           ;common.c: 75:         if (index < 4) {
  2763   000858  BE48               	btfsc	(_index+1)^0,7,c
  2764   00085A  EF3A  F004         	goto	u3190
  2765   00085E  5048               	movf	(_index+1)^0,w,c
  2766   000860  E107               	bnz	u3191
  2767   000862  0E04               	movlw	4
  2768   000864  5C47               	subwf	_index^0,w,c
  2769   000866  B0D8               	btfsc	status,0,c
  2770   000868  EF38  F004         	goto	u3191
  2771   00086C  EF3A  F004         	goto	u3190
  2772   000870                     u3191:
  2773   000870  EFF8  F004         	goto	l3567
  2774   000874                     u3190:
  2775   000874                     
  2776                           ; BSR set to: 0
  2777                           ;common.c: 76:             if (once) {
  2778   000874  51CB               	movf	_once& (0+255),w,b
  2779   000876  11CC               	iorwf	(_once+1)& (0+255),w,b
  2780   000878  B4D8               	btfsc	status,2,c
  2781   00087A  EF41  F004         	goto	u3201
  2782   00087E  EF43  F004         	goto	u3200
  2783   000882                     u3201:
  2784   000882  EF72  F004         	goto	l3525
  2785   000886                     u3200:
  2786   000886                     
  2787                           ; BSR set to: 0
  2788                           ;common.c: 77:                 once = 0;
  2789   000886  0E00               	movlw	0
  2790   000888  6FCC               	movwf	(_once+1)& (0+255),b
  2791   00088A  0E00               	movlw	0
  2792   00088C  6FCB               	movwf	_once& (0+255),b
  2793   00088E                     
  2794                           ; BSR set to: 0
  2795                           ;common.c: 78:                 clcd_write(0x01);
  2796   00088E  0E01               	movlw	1
  2797   000890  ECF7  F012         	call	_clcd_write
  2798   000894                     
  2799                           ;common.c: 79:                 clcd_print(" ENTER PASSWORD ", (0x80 + (0)));
  2800   000894  0EF6               	movlw	low STR_2
  2801   000896  6E0C               	movwf	clcd_print@str^0,c
  2802   000898  0E7E               	movlw	high STR_2
  2803   00089A  6E0D               	movwf	(clcd_print@str+1)^0,c
  2804   00089C  0E80               	movlw	128
  2805   00089E  6E0E               	movwf	clcd_print@addr^0,c
  2806   0008A0  ECDD  F010         	call	_clcd_print	;wreg free
  2807   0008A4                     
  2808                           ;common.c: 80:                 clcd_write(0xC3);
  2809   0008A4  0EC3               	movlw	195
  2810   0008A6  ECF7  F012         	call	_clcd_write
  2811   0008AA                     
  2812                           ;common.c: 81:                 clcd_write(0x0F);
  2813   0008AA  0E0F               	movlw	15
  2814   0008AC  ECF7  F012         	call	_clcd_write
  2815   0008B0                     
  2816                           ;common.c: 83:                 pass[0] = read_internal_eeprom(0x64);
  2817   0008B0  0E64               	movlw	100
  2818   0008B2  EC8D  F013         	call	_read_internal_eeprom
  2819   0008B6  0100               	movlb	0	; () banked
  2820   0008B8  6F70               	movwf	_pass& (0+255),b
  2821   0008BA                     
  2822                           ; BSR set to: 0
  2823                           ;common.c: 84:                 pass[1] = read_internal_eeprom(0x65);
  2824   0008BA  0E65               	movlw	101
  2825   0008BC  EC8D  F013         	call	_read_internal_eeprom
  2826   0008C0  0100               	movlb	0	; () banked
  2827   0008C2  6F71               	movwf	(_pass+1)& (0+255),b
  2828   0008C4                     
  2829                           ; BSR set to: 0
  2830                           ;common.c: 85:                 pass[2] = read_internal_eeprom(0x66);
  2831   0008C4  0E66               	movlw	102
  2832   0008C6  EC8D  F013         	call	_read_internal_eeprom
  2833   0008CA  0100               	movlb	0	; () banked
  2834   0008CC  6F72               	movwf	(_pass+2)& (0+255),b
  2835   0008CE                     
  2836                           ; BSR set to: 0
  2837                           ;common.c: 86:                 pass[3] = read_internal_eeprom(0x67);
  2838   0008CE  0E67               	movlw	103
  2839   0008D0  EC8D  F013         	call	_read_internal_eeprom
  2840   0008D4  0100               	movlb	0	; () banked
  2841   0008D6  6F73               	movwf	(_pass+3)& (0+255),b
  2842   0008D8                     
  2843                           ; BSR set to: 0
  2844                           ;common.c: 87:                 sec = 60;
  2845   0008D8  0E00               	movlw	0
  2846   0008DA  6E57               	movwf	(_sec+1)^0,c
  2847   0008DC  0E3C               	movlw	60
  2848   0008DE  6E56               	movwf	_sec^0,c
  2849   0008E0                     
  2850                           ; BSR set to: 0
  2851                           ;common.c: 88:                 key = 0;
  2852   0008E0  0E00               	movlw	0
  2853   0008E2  6E53               	movwf	_key^0,c
  2854   0008E4                     l3525:
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;common.c: 91:             if (key == 5) {
  2858   0008E4  0E05               	movlw	5
  2859   0008E6  1853               	xorwf	_key^0,w,c
  2860   0008E8  A4D8               	btfss	status,2,c
  2861   0008EA  EF79  F004         	goto	u3211
  2862   0008EE  EF7B  F004         	goto	u3210
  2863   0008F2                     u3211:
  2864   0008F2  EFA2  F004         	goto	l3537
  2865   0008F6                     u3210:
  2866   0008F6                     
  2867                           ; BSR set to: 0
  2868                           ;common.c: 92:                 arr[index] = 0;
  2869   0008F6  5047               	movf	_index^0,w,c
  2870   0008F8  0F74               	addlw	low _arr
  2871   0008FA  6ED9               	movwf	fsr2l,c
  2872   0008FC  6ADA               	clrf	fsr2h,c
  2873   0008FE  6ADF               	clrf	indf2,c
  2874   000900                     
  2875                           ; BSR set to: 0
  2876                           ;common.c: 93:                 clcd_putch('*', (0xC0 + (index + 3)));
  2877   000900  5047               	movf	_index^0,w,c
  2878   000902  0FC3               	addlw	195
  2879   000904  6E08               	movwf	clcd_putch@addr^0,c
  2880   000906  0E2A               	movlw	42
  2881   000908  ECDB  F012         	call	_clcd_putch
  2882   00090C                     
  2883                           ;common.c: 94:                 if (arr[index] == pass[index]) {
  2884   00090C  5047               	movf	_index^0,w,c
  2885   00090E  0F70               	addlw	low _pass
  2886   000910  6ED9               	movwf	fsr2l,c
  2887   000912  6ADA               	clrf	fsr2h,c
  2888   000914  5047               	movf	_index^0,w,c
  2889   000916  0F74               	addlw	low _arr
  2890   000918  6EE1               	movwf	fsr1l,c
  2891   00091A  6AE2               	clrf	fsr1h,c
  2892   00091C  50DE               	movf	postinc2,w,c
  2893   00091E  18E6               	xorwf	postinc1,w,c
  2894   000920  A4D8               	btfss	status,2,c
  2895   000922  EF95  F004         	goto	u3221
  2896   000926  EF97  F004         	goto	u3220
  2897   00092A                     u3221:
  2898   00092A  EF9A  F004         	goto	l172
  2899   00092E                     u3220:
  2900   00092E                     l3533:
  2901                           
  2902                           ;common.c: 95:                     ++count;
  2903   00092E  0100               	movlb	0	; () banked
  2904   000930  4BAA               	infsnz	_count& (0+255),f,b
  2905   000932  2BAB               	incf	(_count+1)& (0+255),f,b
  2906   000934                     l172:
  2907                           
  2908                           ;common.c: 97:                 ++index;
  2909   000934  4A47               	infsnz	_index^0,f,c
  2910   000936  2A48               	incf	(_index+1)^0,f,c
  2911   000938                     
  2912                           ;common.c: 98:                 sec = 60;
  2913   000938  0E00               	movlw	0
  2914   00093A  6E57               	movwf	(_sec+1)^0,c
  2915   00093C  0E3C               	movlw	60
  2916   00093E  6E56               	movwf	_sec^0,c
  2917                           
  2918                           ;common.c: 99:             } else if (key == 6) {
  2919   000940  EFEF  F005         	goto	l189
  2920   000944                     l3537:
  2921                           
  2922                           ; BSR set to: 0
  2923   000944  0E06               	movlw	6
  2924   000946  1853               	xorwf	_key^0,w,c
  2925   000948  A4D8               	btfss	status,2,c
  2926   00094A  EFA9  F004         	goto	u3231
  2927   00094E  EFAB  F004         	goto	u3230
  2928   000952                     u3231:
  2929   000952  EFCA  F004         	goto	l3549
  2930   000956                     u3230:
  2931   000956                     
  2932                           ; BSR set to: 0
  2933                           ;common.c: 100:                 arr[index] = 1;
  2934   000956  5047               	movf	_index^0,w,c
  2935   000958  0F74               	addlw	low _arr
  2936   00095A  6ED9               	movwf	fsr2l,c
  2937   00095C  6ADA               	clrf	fsr2h,c
  2938   00095E  0E01               	movlw	1
  2939   000960  6EDF               	movwf	indf2,c
  2940   000962                     
  2941                           ; BSR set to: 0
  2942                           ;common.c: 101:                 clcd_putch('*', (0xC0 + (index + 3)));
  2943   000962  5047               	movf	_index^0,w,c
  2944   000964  0FC3               	addlw	195
  2945   000966  6E08               	movwf	clcd_putch@addr^0,c
  2946   000968  0E2A               	movlw	42
  2947   00096A  ECDB  F012         	call	_clcd_putch
  2948   00096E                     
  2949                           ;common.c: 102:                 if (arr[index] == pass[index]) {
  2950   00096E  5047               	movf	_index^0,w,c
  2951   000970  0F70               	addlw	low _pass
  2952   000972  6ED9               	movwf	fsr2l,c
  2953   000974  6ADA               	clrf	fsr2h,c
  2954   000976  5047               	movf	_index^0,w,c
  2955   000978  0F74               	addlw	low _arr
  2956   00097A  6EE1               	movwf	fsr1l,c
  2957   00097C  6AE2               	clrf	fsr1h,c
  2958   00097E  50DE               	movf	postinc2,w,c
  2959   000980  18E6               	xorwf	postinc1,w,c
  2960   000982  A4D8               	btfss	status,2,c
  2961   000984  EFC6  F004         	goto	u3241
  2962   000988  EFC8  F004         	goto	u3240
  2963   00098C                     u3241:
  2964   00098C  EF9A  F004         	goto	l172
  2965   000990                     u3240:
  2966   000990  EF97  F004         	goto	l3533
  2967   000994                     l3549:
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;common.c: 109:                 if (sec < 54) {
  2971   000994  5057               	movf	(_sec+1)^0,w,c
  2972   000996  E107               	bnz	u3251
  2973   000998  0E36               	movlw	54
  2974   00099A  5C56               	subwf	_sec^0,w,c
  2975   00099C  B0D8               	btfsc	status,0,c
  2976   00099E  EFD3  F004         	goto	u3251
  2977   0009A2  EFD5  F004         	goto	u3250
  2978   0009A6                     u3251:
  2979   0009A6  EF9C  F005         	goto	l178
  2980   0009AA                     u3250:
  2981   0009AA                     
  2982                           ; BSR set to: 0
  2983                           ;common.c: 110:                     clcd_write(0x0C);
  2984   0009AA  0E0C               	movlw	12
  2985   0009AC  ECF7  F012         	call	_clcd_write
  2986                           
  2987                           ;common.c: 111:                     clcd_write(0x01);
  2988   0009B0  0E01               	movlw	1
  2989   0009B2  ECF7  F012         	call	_clcd_write
  2990   0009B6                     
  2991                           ;common.c: 112:                     SCREEN_FLAG = 0;
  2992   0009B6  0E00               	movlw	0
  2993   0009B8  6E50               	movwf	(_SCREEN_FLAG+1)^0,c
  2994   0009BA  0E00               	movlw	0
  2995   0009BC  6E4F               	movwf	_SCREEN_FLAG^0,c
  2996   0009BE                     
  2997                           ;common.c: 113:                     index = 0;
  2998   0009BE  0E00               	movlw	0
  2999   0009C0  6E48               	movwf	(_index+1)^0,c
  3000   0009C2  0E00               	movlw	0
  3001   0009C4  6E47               	movwf	_index^0,c
  3002   0009C6                     
  3003                           ;common.c: 114:                     count = 0;
  3004   0009C6  0E00               	movlw	0
  3005   0009C8  0100               	movlb	0	; () banked
  3006   0009CA  6FAB               	movwf	(_count+1)& (0+255),b
  3007   0009CC  0E00               	movlw	0
  3008   0009CE  6FAA               	movwf	_count& (0+255),b
  3009   0009D0                     
  3010                           ; BSR set to: 0
  3011                           ;common.c: 115:                     sec = 60;
  3012   0009D0  0E00               	movlw	0
  3013   0009D2  6E57               	movwf	(_sec+1)^0,c
  3014   0009D4  0E3C               	movlw	60
  3015   0009D6  6E56               	movwf	_sec^0,c
  3016   0009D8                     
  3017                           ; BSR set to: 0
  3018                           ;common.c: 116:                     flag = 1;
  3019   0009D8  0E01               	movlw	1
  3020   0009DA  6FD0               	movwf	_flag& (0+255),b
  3021   0009DC                     
  3022                           ; BSR set to: 0
  3023                           ;common.c: 117:                     chance = 3;
  3024   0009DC  0E00               	movlw	0
  3025   0009DE  6FCE               	movwf	(_chance+1)& (0+255),b
  3026   0009E0  0E03               	movlw	3
  3027   0009E2  6FCD               	movwf	_chance& (0+255),b
  3028   0009E4                     l3565:
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;common.c: 118:                     once = 1;
  3032   0009E4  0E00               	movlw	0
  3033   0009E6  6FCC               	movwf	(_once+1)& (0+255),b
  3034   0009E8  0E01               	movlw	1
  3035   0009EA  6FCB               	movwf	_once& (0+255),b
  3036   0009EC  EFEF  F005         	goto	l189
  3037   0009F0                     l3567:
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;common.c: 123:             if (index == count) {
  3041   0009F0  51AA               	movf	_count& (0+255),w,b
  3042   0009F2  1847               	xorwf	_index^0,w,c
  3043   0009F4  E107               	bnz	u3261
  3044   0009F6  51AB               	movf	(_count+1)& (0+255),w,b
  3045   0009F8  1848               	xorwf	(_index+1)^0,w,c
  3046   0009FA  A4D8               	btfss	status,2,c
  3047   0009FC  EF02  F005         	goto	u3261
  3048   000A00  EF04  F005         	goto	u3260
  3049   000A04                     u3261:
  3050   000A04  EF52  F005         	goto	l3595
  3051   000A08                     u3260:
  3052   000A08                     
  3053                           ; BSR set to: 0
  3054                           ;common.c: 124:                 clcd_write(0x0C);
  3055   000A08  0E0C               	movlw	12
  3056   000A0A  ECF7  F012         	call	_clcd_write
  3057                           
  3058                           ;common.c: 125:                 clcd_write(0x01);
  3059   000A0E  0E01               	movlw	1
  3060   000A10  ECF7  F012         	call	_clcd_write
  3061   000A14                     
  3062                           ;common.c: 126:                 clcd_print("   WEL-COME TO ", (0x80 + (0)));
  3063   000A14  0E39               	movlw	low STR_3
  3064   000A16  6E0C               	movwf	clcd_print@str^0,c
  3065   000A18  0E7F               	movlw	high STR_3
  3066   000A1A  6E0D               	movwf	(clcd_print@str+1)^0,c
  3067   000A1C  0E80               	movlw	128
  3068   000A1E  6E0E               	movwf	clcd_print@addr^0,c
  3069   000A20  ECDD  F010         	call	_clcd_print	;wreg free
  3070   000A24                     
  3071                           ;common.c: 127:                 clcd_print("   MENU SCREEN", (0xC0 + (0)));
  3072   000A24  0E88               	movlw	low STR_4
  3073   000A26  6E0C               	movwf	clcd_print@str^0,c
  3074   000A28  0E7F               	movlw	high STR_4
  3075   000A2A  6E0D               	movwf	(clcd_print@str+1)^0,c
  3076   000A2C  0EC0               	movlw	192
  3077   000A2E  6E0E               	movwf	clcd_print@addr^0,c
  3078   000A30  ECDD  F010         	call	_clcd_print	;wreg free
  3079   000A34                     
  3080                           ;common.c: 128:                 for (unsigned long y = 0xFFFFA; --y;);
  3081   000A34  0EFA               	movlw	250
  3082   000A36  6E14               	movwf	password_screen@y^0,c
  3083   000A38  0EFF               	movlw	255
  3084   000A3A  6E15               	movwf	(password_screen@y+1)^0,c
  3085   000A3C  0E0F               	movlw	15
  3086   000A3E  6E16               	movwf	(password_screen@y+2)^0,c
  3087   000A40  0E00               	movlw	0
  3088   000A42  6E17               	movwf	(password_screen@y+3)^0,c
  3089   000A44                     l3577:
  3090   000A44  0614               	decf	password_screen@y^0,f,c
  3091   000A46  0E00               	movlw	0
  3092   000A48  5A15               	subwfb	(password_screen@y+1)^0,f,c
  3093   000A4A  5A16               	subwfb	(password_screen@y+2)^0,f,c
  3094   000A4C  5A17               	subwfb	(password_screen@y+3)^0,f,c
  3095   000A4E  5014               	movf	password_screen@y^0,w,c
  3096   000A50  1015               	iorwf	(password_screen@y+1)^0,w,c
  3097   000A52  1016               	iorwf	(password_screen@y+2)^0,w,c
  3098   000A54  1017               	iorwf	(password_screen@y+3)^0,w,c
  3099   000A56  A4D8               	btfss	status,2,c
  3100   000A58  EF30  F005         	goto	u3271
  3101   000A5C  EF32  F005         	goto	u3270
  3102   000A60                     u3271:
  3103   000A60  EF22  F005         	goto	l3577
  3104   000A64                     u3270:
  3105   000A64                     
  3106                           ;common.c: 129:                 clcd_write(0x01);
  3107   000A64  0E01               	movlw	1
  3108   000A66  ECF7  F012         	call	_clcd_write
  3109   000A6A                     
  3110                           ;common.c: 130:                 flag = 0;
  3111   000A6A  0E00               	movlw	0
  3112   000A6C  0100               	movlb	0	; () banked
  3113   000A6E  6FD0               	movwf	_flag& (0+255),b
  3114   000A70                     
  3115                           ; BSR set to: 0
  3116                           ;common.c: 131:                 index = 0;
  3117   000A70  0E00               	movlw	0
  3118   000A72  6E48               	movwf	(_index+1)^0,c
  3119   000A74  0E00               	movlw	0
  3120   000A76  6E47               	movwf	_index^0,c
  3121   000A78                     
  3122                           ; BSR set to: 0
  3123                           ;common.c: 132:                 count = 0;
  3124   000A78  0E00               	movlw	0
  3125   000A7A  6FAB               	movwf	(_count+1)& (0+255),b
  3126   000A7C  0E00               	movlw	0
  3127   000A7E  6FAA               	movwf	_count& (0+255),b
  3128   000A80                     
  3129                           ; BSR set to: 0
  3130                           ;common.c: 133:                 sec = 60;
  3131   000A80  0E00               	movlw	0
  3132   000A82  6E57               	movwf	(_sec+1)^0,c
  3133   000A84  0E3C               	movlw	60
  3134   000A86  6E56               	movwf	_sec^0,c
  3135   000A88                     
  3136                           ; BSR set to: 0
  3137                           ;common.c: 134:                 chance = 3;
  3138   000A88  0E00               	movlw	0
  3139   000A8A  6FCE               	movwf	(_chance+1)& (0+255),b
  3140   000A8C  0E03               	movlw	3
  3141   000A8E  6FCD               	movwf	_chance& (0+255),b
  3142   000A90                     
  3143                           ; BSR set to: 0
  3144                           ;common.c: 135:                 once = 1;
  3145   000A90  0E00               	movlw	0
  3146   000A92  6FCC               	movwf	(_once+1)& (0+255),b
  3147   000A94  0E01               	movlw	1
  3148   000A96  6FCB               	movwf	_once& (0+255),b
  3149   000A98                     
  3150                           ; BSR set to: 0
  3151                           ;common.c: 137:                 SCREEN_FLAG = 2;
  3152   000A98  0E00               	movlw	0
  3153   000A9A  6E50               	movwf	(_SCREEN_FLAG+1)^0,c
  3154   000A9C  0E02               	movlw	2
  3155   000A9E  6E4F               	movwf	_SCREEN_FLAG^0,c
  3156                           
  3157                           ;common.c: 138:             } else {
  3158   000AA0  EFEF  F005         	goto	l189
  3159   000AA4                     l3595:
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;common.c: 139:                 chance--;
  3163   000AA4  07CD               	decf	_chance& (0+255),f,b
  3164   000AA6  A0D8               	btfss	status,0,c
  3165   000AA8  07CE               	decf	(_chance+1)& (0+255),f,b
  3166   000AAA                     
  3167                           ; BSR set to: 0
  3168                           ;common.c: 140:                 clcd_write(0x0C);
  3169   000AAA  0E0C               	movlw	12
  3170   000AAC  ECF7  F012         	call	_clcd_write
  3171   000AB0                     
  3172                           ;common.c: 141:                 clcd_write(0x01);
  3173   000AB0  0E01               	movlw	1
  3174   000AB2  ECF7  F012         	call	_clcd_write
  3175   000AB6                     
  3176                           ;common.c: 142:                 clcd_print(" WRONG PASSWORD ", (0x80 + (0)));
  3177   000AB6  0EE5               	movlw	low STR_5
  3178   000AB8  6E0C               	movwf	clcd_print@str^0,c
  3179   000ABA  0E7E               	movlw	high STR_5
  3180   000ABC  6E0D               	movwf	(clcd_print@str+1)^0,c
  3181   000ABE  0E80               	movlw	128
  3182   000AC0  6E0E               	movwf	clcd_print@addr^0,c
  3183   000AC2  ECDD  F010         	call	_clcd_print	;wreg free
  3184   000AC6                     
  3185                           ;common.c: 143:                 clcd_print(" ATTEMPT ", (0xC0 + (0)));
  3186   000AC6  0ED8               	movlw	low STR_6
  3187   000AC8  6E0C               	movwf	clcd_print@str^0,c
  3188   000ACA  0E7F               	movlw	high STR_6
  3189   000ACC  6E0D               	movwf	(clcd_print@str+1)^0,c
  3190   000ACE  0EC0               	movlw	192
  3191   000AD0  6E0E               	movwf	clcd_print@addr^0,c
  3192   000AD2  ECDD  F010         	call	_clcd_print	;wreg free
  3193   000AD6                     
  3194                           ;common.c: 144:                 clcd_putch('0' + chance, (0xC0 + (10)));
  3195   000AD6  0ECA               	movlw	202
  3196   000AD8  6E08               	movwf	clcd_putch@addr^0,c
  3197   000ADA  0100               	movlb	0	; () banked
  3198   000ADC  51CD               	movf	_chance& (0+255),w,b
  3199   000ADE  0F30               	addlw	48
  3200   000AE0  ECDB  F012         	call	_clcd_putch
  3201   000AE4                     
  3202                           ;common.c: 145:                 for (unsigned long y = 0xFFFFA; --y;);
  3203   000AE4  0EFA               	movlw	250
  3204   000AE6  6E18               	movwf	password_screen@y_138^0,c
  3205   000AE8  0EFF               	movlw	255
  3206   000AEA  6E19               	movwf	(password_screen@y_138+1)^0,c
  3207   000AEC  0E0F               	movlw	15
  3208   000AEE  6E1A               	movwf	(password_screen@y_138+2)^0,c
  3209   000AF0  0E00               	movlw	0
  3210   000AF2  6E1B               	movwf	(password_screen@y_138+3)^0,c
  3211   000AF4                     l3609:
  3212   000AF4  0618               	decf	password_screen@y_138^0,f,c
  3213   000AF6  0E00               	movlw	0
  3214   000AF8  5A19               	subwfb	(password_screen@y_138+1)^0,f,c
  3215   000AFA  5A1A               	subwfb	(password_screen@y_138+2)^0,f,c
  3216   000AFC  5A1B               	subwfb	(password_screen@y_138+3)^0,f,c
  3217   000AFE  5018               	movf	password_screen@y_138^0,w,c
  3218   000B00  1019               	iorwf	(password_screen@y_138+1)^0,w,c
  3219   000B02  101A               	iorwf	(password_screen@y_138+2)^0,w,c
  3220   000B04  101B               	iorwf	(password_screen@y_138+3)^0,w,c
  3221   000B06  A4D8               	btfss	status,2,c
  3222   000B08  EF88  F005         	goto	u3281
  3223   000B0C  EF8A  F005         	goto	u3280
  3224   000B10                     u3281:
  3225   000B10  EF7A  F005         	goto	l3609
  3226   000B14                     u3280:
  3227   000B14                     
  3228                           ;common.c: 146:                 clcd_write(0x01);
  3229   000B14  0E01               	movlw	1
  3230   000B16  ECF7  F012         	call	_clcd_write
  3231   000B1A                     
  3232                           ;common.c: 147:                 index = 0;
  3233   000B1A  0E00               	movlw	0
  3234   000B1C  6E48               	movwf	(_index+1)^0,c
  3235   000B1E  0E00               	movlw	0
  3236   000B20  6E47               	movwf	_index^0,c
  3237   000B22                     
  3238                           ;common.c: 148:                 count = 0;
  3239   000B22  0E00               	movlw	0
  3240   000B24  0100               	movlb	0	; () banked
  3241   000B26  6FAB               	movwf	(_count+1)& (0+255),b
  3242   000B28  0E00               	movlw	0
  3243   000B2A  6FAA               	movwf	_count& (0+255),b
  3244   000B2C                     
  3245                           ; BSR set to: 0
  3246                           ;common.c: 149:                 sec = 60;
  3247   000B2C  0E00               	movlw	0
  3248   000B2E  6E57               	movwf	(_sec+1)^0,c
  3249   000B30  0E3C               	movlw	60
  3250   000B32  6E56               	movwf	_sec^0,c
  3251   000B34  EFF2  F004         	goto	l3565
  3252   000B38                     l178:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;common.c: 153:     } else {
  3256   000B38  EFEF  F005         	goto	l189
  3257   000B3C                     l3621:
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;common.c: 154:         clcd_write(0x0C);
  3261   000B3C  0E0C               	movlw	12
  3262   000B3E  ECF7  F012         	call	_clcd_write
  3263   000B42                     
  3264                           ;common.c: 155:         clcd_print("  USER BLOCKED  ", (0x80 + (0)));
  3265   000B42  0ED4               	movlw	low STR_7
  3266   000B44  6E0C               	movwf	clcd_print@str^0,c
  3267   000B46  0E7E               	movlw	high STR_7
  3268   000B48  6E0D               	movwf	(clcd_print@str+1)^0,c
  3269   000B4A  0E80               	movlw	128
  3270   000B4C  6E0E               	movwf	clcd_print@addr^0,c
  3271   000B4E  ECDD  F010         	call	_clcd_print	;wreg free
  3272   000B52                     
  3273                           ;common.c: 156:         clcd_print(" WAIT FOR   SEC", (0xC0 + (0)));
  3274   000B52  0E69               	movlw	low STR_8
  3275   000B54  6E0C               	movwf	clcd_print@str^0,c
  3276   000B56  0E7F               	movlw	high STR_8
  3277   000B58  6E0D               	movwf	(clcd_print@str+1)^0,c
  3278   000B5A  0EC0               	movlw	192
  3279   000B5C  6E0E               	movwf	clcd_print@addr^0,c
  3280   000B5E  ECDD  F010         	call	_clcd_print	;wreg free
  3281                           
  3282                           ;common.c: 157:         clcd_putch('0' + sec / 10, (0xC0 + (10)));
  3283   000B62  0ECA               	movlw	202
  3284   000B64  6E08               	movwf	clcd_putch@addr^0,c
  3285   000B66  C056  F001         	movff	_sec,___lwdiv@dividend
  3286   000B6A  C057  F002         	movff	_sec+1,___lwdiv@dividend+1
  3287   000B6E  0E00               	movlw	0
  3288   000B70  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3289   000B72  0E0A               	movlw	10
  3290   000B74  6E03               	movwf	___lwdiv@divisor^0,c
  3291   000B76  ECDA  F011         	call	___lwdiv	;wreg free
  3292   000B7A  5001               	movf	?___lwdiv^0,w,c
  3293   000B7C  0F30               	addlw	48
  3294   000B7E  ECDB  F012         	call	_clcd_putch
  3295                           
  3296                           ;common.c: 158:         clcd_putch('0' + sec % 10, (0xC0 + (11)));
  3297   000B82  0ECB               	movlw	203
  3298   000B84  6E08               	movwf	clcd_putch@addr^0,c
  3299   000B86  C056  F001         	movff	_sec,___lwmod@dividend
  3300   000B8A  C057  F002         	movff	_sec+1,___lwmod@dividend+1
  3301   000B8E  0E00               	movlw	0
  3302   000B90  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3303   000B92  0E0A               	movlw	10
  3304   000B94  6E03               	movwf	___lwmod@divisor^0,c
  3305   000B96  EC14  F012         	call	___lwmod	;wreg free
  3306   000B9A  5001               	movf	?___lwmod^0,w,c
  3307   000B9C  0F30               	addlw	48
  3308   000B9E  ECDB  F012         	call	_clcd_putch
  3309   000BA2                     
  3310                           ;common.c: 159:         if (!sec) {
  3311   000BA2  5056               	movf	_sec^0,w,c
  3312   000BA4  1057               	iorwf	(_sec+1)^0,w,c
  3313   000BA6  A4D8               	btfss	status,2,c
  3314   000BA8  EFD8  F005         	goto	u3291
  3315   000BAC  EFDA  F005         	goto	u3290
  3316   000BB0                     u3291:
  3317   000BB0  EFEF  F005         	goto	l189
  3318   000BB4                     u3290:
  3319   000BB4                     
  3320                           ;common.c: 160:             index = 0;
  3321   000BB4  0E00               	movlw	0
  3322   000BB6  6E48               	movwf	(_index+1)^0,c
  3323   000BB8  0E00               	movlw	0
  3324   000BBA  6E47               	movwf	_index^0,c
  3325                           
  3326                           ;common.c: 161:             count = 0;
  3327   000BBC  0E00               	movlw	0
  3328   000BBE  0100               	movlb	0	; () banked
  3329   000BC0  6FAB               	movwf	(_count+1)& (0+255),b
  3330   000BC2  0E00               	movlw	0
  3331   000BC4  6FAA               	movwf	_count& (0+255),b
  3332                           
  3333                           ;common.c: 162:             sec = 60;
  3334   000BC6  0E00               	movlw	0
  3335   000BC8  6E57               	movwf	(_sec+1)^0,c
  3336   000BCA  0E3C               	movlw	60
  3337   000BCC  6E56               	movwf	_sec^0,c
  3338                           
  3339                           ;common.c: 163:             chance = 3;
  3340   000BCE  0E00               	movlw	0
  3341   000BD0  6FCE               	movwf	(_chance+1)& (0+255),b
  3342   000BD2  0E03               	movlw	3
  3343   000BD4  6FCD               	movwf	_chance& (0+255),b
  3344                           
  3345                           ;common.c: 164:             once = 1;
  3346   000BD6  0E00               	movlw	0
  3347   000BD8  6FCC               	movwf	(_once+1)& (0+255),b
  3348   000BDA  0E01               	movlw	1
  3349   000BDC  6FCB               	movwf	_once& (0+255),b
  3350   000BDE                     l189:
  3351   000BDE  0012               	return		;funcret
  3352   000BE0                     __end_of_password_screen:
  3353                           	callstack 0
  3354                           
  3355 ;; *************** function _init_config *****************
  3356 ;; Defined at:
  3357 ;;		line 81 in file "main.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;		None
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;		None
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3371 ;;      Params:         0       0       0       0       0       0       0
  3372 ;;      Locals:         0       0       0       0       0       0       0
  3373 ;;      Temps:          0       0       0       0       0       0       0
  3374 ;;      Totals:         0       0       0       0       0       0       0
  3375 ;;Total ram usage:        0 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 3
  3378 ;; This function calls:
  3379 ;;		_init_adc
  3380 ;;		_init_clcd
  3381 ;;		_init_matrix_config
  3382 ;;		_init_timer0
  3383 ;;		_write_internal_eeprom
  3384 ;; This function is called by:
  3385 ;;		_main
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text4
  3390   002578                     __ptext4:
  3391                           	callstack 0
  3392   002578                     _init_config:
  3393                           	callstack 27
  3394   002578                     
  3395                           ;main.c: 82:     init_matrix_config();
  3396   002578  EC96  F013         	call	_init_matrix_config	;wreg free
  3397   00257C                     
  3398                           ;main.c: 83:     init_clcd();
  3399   00257C  EC4D  F013         	call	_init_clcd	;wreg free
  3400   002580                     
  3401                           ;main.c: 84:     init_adc();
  3402   002580  EC5E  F013         	call	_init_adc	;wreg free
  3403   002584                     
  3404                           ;main.c: 85:     init_timer0();
  3405   002584  EC6E  F013         	call	_init_timer0	;wreg free
  3406   002588                     
  3407                           ;main.c: 86:     GIE = 1;
  3408   002588  8EF2               	bsf	4082,7,c	;volatile
  3409   00258A                     
  3410                           ;main.c: 87:     PEIE = 1;
  3411   00258A  8CF2               	bsf	4082,6,c	;volatile
  3412   00258C                     
  3413                           ;main.c: 90:     write_internal_eeprom(0x64, 0);
  3414   00258C  0E00               	movlw	0
  3415   00258E  6E07               	movwf	write_internal_eeprom@data^0,c
  3416   002590  0E64               	movlw	100
  3417   002592  EC10  F013         	call	_write_internal_eeprom
  3418   002596                     
  3419                           ;main.c: 91:     write_internal_eeprom(0x65, 0);
  3420   002596  0E00               	movlw	0
  3421   002598  6E07               	movwf	write_internal_eeprom@data^0,c
  3422   00259A  0E65               	movlw	101
  3423   00259C  EC10  F013         	call	_write_internal_eeprom
  3424   0025A0                     
  3425                           ;main.c: 92:     write_internal_eeprom(0x66, 0);
  3426   0025A0  0E00               	movlw	0
  3427   0025A2  6E07               	movwf	write_internal_eeprom@data^0,c
  3428   0025A4  0E66               	movlw	102
  3429   0025A6  EC10  F013         	call	_write_internal_eeprom
  3430   0025AA                     
  3431                           ;main.c: 93:     write_internal_eeprom(0x67, 0);
  3432   0025AA  0E00               	movlw	0
  3433   0025AC  6E07               	movwf	write_internal_eeprom@data^0,c
  3434   0025AE  0E67               	movlw	103
  3435   0025B0  EC10  F013         	call	_write_internal_eeprom
  3436   0025B4  0012               	return		;funcret
  3437   0025B6                     __end_of_init_config:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _init_timer0 *****************
  3441 ;; Defined at:
  3442 ;;		line 4 in file "timer0.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3456 ;;      Params:         0       0       0       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0       0       0
  3459 ;;      Totals:         0       0       0       0       0       0       0
  3460 ;;Total ram usage:        0 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; Hardware stack levels required when called: 1
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_init_config
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text5
  3471   0026DC                     __ptext5:
  3472                           	callstack 0
  3473   0026DC                     _init_timer0:
  3474                           	callstack 28
  3475   0026DC                     
  3476                           ;timer0.c: 12:  T08BIT = 1;
  3477   0026DC  8CD5               	bsf	4053,6,c	;volatile
  3478                           
  3479                           ;timer0.c: 15:  T0CS = 0;
  3480   0026DE  9AD5               	bcf	4053,5,c	;volatile
  3481                           
  3482                           ;timer0.c: 18:  TMR0ON = 1;
  3483   0026E0  8ED5               	bsf	4053,7,c	;volatile
  3484                           
  3485                           ;timer0.c: 21:  PSA = 1;
  3486   0026E2  86D5               	bsf	4053,3,c	;volatile
  3487   0026E4                     
  3488                           ;timer0.c: 23:  TMR0 = 6;
  3489   0026E4  0E00               	movlw	0
  3490   0026E6  6ED7               	movwf	215,c	;volatile
  3491   0026E8  0E06               	movlw	6
  3492   0026EA  6ED6               	movwf	214,c	;volatile
  3493   0026EC                     
  3494                           ;timer0.c: 26:  TMR0IF = 0;
  3495   0026EC  94F2               	bcf	4082,2,c	;volatile
  3496   0026EE                     
  3497                           ;timer0.c: 29:  TMR0IE = 1;
  3498   0026EE  8AF2               	bsf	4082,5,c	;volatile
  3499   0026F0  0012               	return		;funcret
  3500   0026F2                     __end_of_init_timer0:
  3501                           	callstack 0
  3502                           
  3503 ;; *************** function _init_matrix_config *****************
  3504 ;; Defined at:
  3505 ;;		line 12 in file "matrix.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;		None
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;		None
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1    wreg      void 
  3512 ;; Registers used:
  3513 ;;		wreg, status,2
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3519 ;;      Params:         0       0       0       0       0       0       0
  3520 ;;      Locals:         0       0       0       0       0       0       0
  3521 ;;      Temps:          0       0       0       0       0       0       0
  3522 ;;      Totals:         0       0       0       0       0       0       0
  3523 ;;Total ram usage:        0 bytes
  3524 ;; Hardware stack levels used: 1
  3525 ;; Hardware stack levels required when called: 1
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_init_config
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           	psect	text6
  3534   00272C                     __ptext6:
  3535                           	callstack 0
  3536   00272C                     _init_matrix_config:
  3537                           	callstack 28
  3538   00272C                     
  3539                           ;matrix.c: 14:     TRISB = 0xF0;
  3540   00272C  0EF0               	movlw	240
  3541   00272E  6E93               	movwf	147,c	;volatile
  3542   002730  0012               	return		;funcret
  3543   002732                     __end_of_init_matrix_config:
  3544                           	callstack 0
  3545                           
  3546 ;; *************** function _init_clcd *****************
  3547 ;; Defined at:
  3548 ;;		line 4 in file "clcd.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3562 ;;      Params:         0       0       0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0       0       0
  3565 ;;      Totals:         0       0       0       0       0       0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels used: 1
  3568 ;; Hardware stack levels required when called: 2
  3569 ;; This function calls:
  3570 ;;		_clcd_write
  3571 ;; This function is called by:
  3572 ;;		_init_config
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text7
  3577   00269A                     __ptext7:
  3578                           	callstack 0
  3579   00269A                     _init_clcd:
  3580                           	callstack 27
  3581   00269A                     
  3582                           ;clcd.c: 6:     TRISC = 0X00;
  3583   00269A  0E00               	movlw	0
  3584   00269C  6E94               	movwf	148,c	;volatile
  3585                           
  3586                           ;clcd.c: 7:     TRISD = 0X00;
  3587   00269E  0E00               	movlw	0
  3588   0026A0  6E95               	movwf	149,c	;volatile
  3589   0026A2                     
  3590                           ;clcd.c: 10:     clcd_write(0x38);
  3591   0026A2  0E38               	movlw	56
  3592   0026A4  ECF7  F012         	call	_clcd_write
  3593   0026A8                     
  3594                           ;clcd.c: 11:     clcd_write(0x06);
  3595   0026A8  0E06               	movlw	6
  3596   0026AA  ECF7  F012         	call	_clcd_write
  3597   0026AE                     
  3598                           ;clcd.c: 12:     clcd_write(0x0c);
  3599   0026AE  0E0C               	movlw	12
  3600   0026B0  ECF7  F012         	call	_clcd_write
  3601   0026B4                     
  3602                           ;clcd.c: 13:     clcd_write(0x01);
  3603   0026B4  0E01               	movlw	1
  3604   0026B6  ECF7  F012         	call	_clcd_write
  3605   0026BA  0012               	return		;funcret
  3606   0026BC                     __end_of_init_clcd:
  3607                           	callstack 0
  3608                           
  3609 ;; *************** function _init_adc *****************
  3610 ;; Defined at:
  3611 ;;		line 4 in file "adc.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;		None
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3625 ;;      Params:         0       0       0       0       0       0       0
  3626 ;;      Locals:         0       0       0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0
  3628 ;;      Totals:         0       0       0       0       0       0       0
  3629 ;;Total ram usage:        0 bytes
  3630 ;; Hardware stack levels used: 1
  3631 ;; Hardware stack levels required when called: 1
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_init_config
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text8
  3640   0026BC                     __ptext8:
  3641                           	callstack 0
  3642   0026BC                     _init_adc:
  3643                           	callstack 28
  3644   0026BC                     
  3645                           ;adc.c: 7:  ADFM = 1;
  3646   0026BC  8EC0               	bsf	4032,7,c	;volatile
  3647                           
  3648                           ;adc.c: 13:  ACQT2 = 0;
  3649   0026BE  9AC0               	bcf	4032,5,c	;volatile
  3650                           
  3651                           ;adc.c: 14:  ACQT1 = 1;
  3652   0026C0  88C0               	bsf	4032,4,c	;volatile
  3653                           
  3654                           ;adc.c: 15:  ACQT0 = 0;
  3655   0026C2  96C0               	bcf	4032,3,c	;volatile
  3656                           
  3657                           ;adc.c: 21:  ADCS0 = 0;
  3658   0026C4  90C0               	bcf	4032,0,c	;volatile
  3659                           
  3660                           ;adc.c: 22:  ADCS1 = 1;
  3661   0026C6  82C0               	bsf	4032,1,c	;volatile
  3662                           
  3663                           ;adc.c: 23:  ADCS2 = 0;
  3664   0026C8  94C0               	bcf	4032,2,c	;volatile
  3665                           
  3666                           ;adc.c: 26:  GODONE = 0;
  3667   0026CA  92C2               	bcf	4034,1,c	;volatile
  3668                           
  3669                           ;adc.c: 31:  VCFG1 = 0;
  3670   0026CC  9AC1               	bcf	4033,5,c	;volatile
  3671                           
  3672                           ;adc.c: 33:  VCFG0 = 0;
  3673   0026CE  98C1               	bcf	4033,4,c	;volatile
  3674   0026D0                     
  3675                           ;adc.c: 36:  ADRESH = 0;
  3676   0026D0  0E00               	movlw	0
  3677   0026D2  6EC4               	movwf	196,c	;volatile
  3678                           
  3679                           ;adc.c: 37:  ADRESL = 0;
  3680   0026D4  0E00               	movlw	0
  3681   0026D6  6EC3               	movwf	195,c	;volatile
  3682   0026D8                     
  3683                           ;adc.c: 40:  ADON = 1;
  3684   0026D8  80C2               	bsf	4034,0,c	;volatile
  3685   0026DA  0012               	return		;funcret
  3686   0026DC                     __end_of_init_adc:
  3687                           	callstack 0
  3688                           
  3689 ;; *************** function _download_log *****************
  3690 ;; Defined at:
  3691 ;;		line 237 in file "common.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;		None
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  y               4   22[COMRAM] unsigned long 
  3696 ;;  i               2   26[COMRAM] int 
  3697 ;;  y               4   18[COMRAM] unsigned long 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3707 ;;      Params:         0       0       0       0       0       0       0
  3708 ;;      Locals:        10       0       0       0       0       0       0
  3709 ;;      Temps:          1       0       0       0       0       0       0
  3710 ;;      Totals:        11       0       0       0       0       0       0
  3711 ;;Total ram usage:       11 bytes
  3712 ;; Hardware stack levels used: 1
  3713 ;; Hardware stack levels required when called: 4
  3714 ;; This function calls:
  3715 ;;		___lwdiv
  3716 ;;		___lwmod
  3717 ;;		_clcd_print
  3718 ;;		_clcd_write
  3719 ;;		_putch
  3720 ;;		_puts
  3721 ;;		_read_internal_eeprom
  3722 ;;		_uartinit
  3723 ;; This function is called by:
  3724 ;;		_main
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text9
  3729   001872                     __ptext9:
  3730                           	callstack 0
  3731   001872                     _download_log:
  3732                           	callstack 26
  3733   001872                     
  3734                           ;common.c: 238:     uartinit();
  3735   001872  EC84  F013         	call	_uartinit	;wreg free
  3736   001876                     
  3737                           ;common.c: 239:     address = 0x00;
  3738   001876  0E00               	movlw	0
  3739   001878  6E44               	movwf	(_address+1)^0,c
  3740   00187A  0E00               	movlw	0
  3741   00187C  6E43               	movwf	_address^0,c
  3742   00187E                     
  3743                           ;common.c: 240:     clcd_print("DOWNLOADING...", (0x80 + (0)));
  3744   00187E  0E79               	movlw	low STR_11
  3745   001880  6E0C               	movwf	clcd_print@str^0,c
  3746   001882  0E7F               	movlw	high STR_11
  3747   001884  6E0D               	movwf	(clcd_print@str+1)^0,c
  3748   001886  0E80               	movlw	128
  3749   001888  6E0E               	movwf	clcd_print@addr^0,c
  3750   00188A  ECDD  F010         	call	_clcd_print	;wreg free
  3751   00188E                     
  3752                           ;common.c: 241:     for (unsigned long y = 0xFFFFA; --y;);
  3753   00188E  0EFA               	movlw	250
  3754   001890  6E13               	movwf	download_log@y^0,c
  3755   001892  0EFF               	movlw	255
  3756   001894  6E14               	movwf	(download_log@y+1)^0,c
  3757   001896  0E0F               	movlw	15
  3758   001898  6E15               	movwf	(download_log@y+2)^0,c
  3759   00189A  0E00               	movlw	0
  3760   00189C  6E16               	movwf	(download_log@y+3)^0,c
  3761   00189E                     l3733:
  3762   00189E  0613               	decf	download_log@y^0,f,c
  3763   0018A0  0E00               	movlw	0
  3764   0018A2  5A14               	subwfb	(download_log@y+1)^0,f,c
  3765   0018A4  5A15               	subwfb	(download_log@y+2)^0,f,c
  3766   0018A6  5A16               	subwfb	(download_log@y+3)^0,f,c
  3767   0018A8  5013               	movf	download_log@y^0,w,c
  3768   0018AA  1014               	iorwf	(download_log@y+1)^0,w,c
  3769   0018AC  1015               	iorwf	(download_log@y+2)^0,w,c
  3770   0018AE  1016               	iorwf	(download_log@y+3)^0,w,c
  3771   0018B0  A4D8               	btfss	status,2,c
  3772   0018B2  EF5D  F00C         	goto	u3411
  3773   0018B6  EF5F  F00C         	goto	u3410
  3774   0018BA                     u3411:
  3775   0018BA  EF4F  F00C         	goto	l3733
  3776   0018BE                     u3410:
  3777   0018BE                     
  3778                           ;common.c: 242:     puts("#  TIME EV SP\n\r");
  3779   0018BE  0E29               	movlw	low STR_12
  3780   0018C0  6E02               	movwf	puts@s^0,c
  3781   0018C2  0E7F               	movlw	high STR_12
  3782   0018C4  6E03               	movwf	(puts@s+1)^0,c
  3783   0018C6  EC46  F012         	call	_puts	;wreg free
  3784                           
  3785                           ;common.c: 243:     puts("\n\r");
  3786   0018CA  0E36               	movlw	low (STR_12+13)
  3787   0018CC  6E02               	movwf	puts@s^0,c
  3788   0018CE  0E7F               	movlw	high (STR_12+13)
  3789   0018D0  6E03               	movwf	(puts@s+1)^0,c
  3790   0018D2  EC46  F012         	call	_puts	;wreg free
  3791   0018D6                     
  3792                           ;common.c: 244:     if (no_of_event > 0) {
  3793   0018D6  5054               	movf	_no_of_event^0,w,c
  3794   0018D8  1055               	iorwf	(_no_of_event+1)^0,w,c
  3795   0018DA  B4D8               	btfsc	status,2,c
  3796   0018DC  EF72  F00C         	goto	u3421
  3797   0018E0  EF74  F00C         	goto	u3420
  3798   0018E4                     u3421:
  3799   0018E4  EF2A  F00D         	goto	l3793
  3800   0018E8                     u3420:
  3801   0018E8                     
  3802                           ;common.c: 245:         for (int i = 0; i < no_of_event; i++) {
  3803   0018E8  0E00               	movlw	0
  3804   0018EA  6E1C               	movwf	(download_log@i+1)^0,c
  3805   0018EC  0E00               	movlw	0
  3806   0018EE  6E1B               	movwf	download_log@i^0,c
  3807   0018F0  EFFD  F00C         	goto	l3785
  3808   0018F4                     l3741:
  3809                           
  3810                           ;common.c: 246:             print[0] = read_internal_eeprom(0x00 + address);
  3811   0018F4  5043               	movf	_address^0,w,c
  3812   0018F6  EC8D  F013         	call	_read_internal_eeprom
  3813   0018FA  0100               	movlb	0	; () banked
  3814   0018FC  6FB3               	movwf	_print& (0+255),b
  3815   0018FE                     
  3816                           ; BSR set to: 0
  3817                           ;common.c: 247:             print[1] = read_internal_eeprom(0x01 + address);
  3818   0018FE  2843               	incf	_address^0,w,c
  3819   001900  EC8D  F013         	call	_read_internal_eeprom
  3820   001904  0100               	movlb	0	; () banked
  3821   001906  6FB4               	movwf	(_print+1)& (0+255),b
  3822   001908                     
  3823                           ; BSR set to: 0
  3824                           ;common.c: 248:             print[2] = read_internal_eeprom(0x02 + address);
  3825   001908  5043               	movf	_address^0,w,c
  3826   00190A  0F02               	addlw	2
  3827   00190C  EC8D  F013         	call	_read_internal_eeprom
  3828   001910  0100               	movlb	0	; () banked
  3829   001912  6FB5               	movwf	(_print+2)& (0+255),b
  3830   001914                     
  3831                           ; BSR set to: 0
  3832                           ;common.c: 249:             print[3] = read_internal_eeprom(0x03 + address);
  3833   001914  5043               	movf	_address^0,w,c
  3834   001916  0F03               	addlw	3
  3835   001918  EC8D  F013         	call	_read_internal_eeprom
  3836   00191C  0100               	movlb	0	; () banked
  3837   00191E  6FB6               	movwf	(_print+3)& (0+255),b
  3838   001920                     
  3839                           ; BSR set to: 0
  3840                           ;common.c: 250:             print[4] = read_internal_eeprom(0x04 + address);
  3841   001920  5043               	movf	_address^0,w,c
  3842   001922  0F04               	addlw	4
  3843   001924  EC8D  F013         	call	_read_internal_eeprom
  3844   001928  0100               	movlb	0	; () banked
  3845   00192A  6FB7               	movwf	(_print+4)& (0+255),b
  3846   00192C                     
  3847                           ; BSR set to: 0
  3848                           ;common.c: 251:             print[5] = read_internal_eeprom(0x05 + address);
  3849   00192C  5043               	movf	_address^0,w,c
  3850   00192E  0F05               	addlw	5
  3851   001930  EC8D  F013         	call	_read_internal_eeprom
  3852   001934  0100               	movlb	0	; () banked
  3853   001936  6FB8               	movwf	(_print+5)& (0+255),b
  3854   001938                     
  3855                           ; BSR set to: 0
  3856                           ;common.c: 252:             print[6] = read_internal_eeprom(0x06 + address);
  3857   001938  5043               	movf	_address^0,w,c
  3858   00193A  0F06               	addlw	6
  3859   00193C  EC8D  F013         	call	_read_internal_eeprom
  3860   001940  0100               	movlb	0	; () banked
  3861   001942  6FB9               	movwf	(_print+6)& (0+255),b
  3862   001944                     
  3863                           ; BSR set to: 0
  3864                           ;common.c: 253:             print[7] = read_internal_eeprom(0x07 + address);
  3865   001944  5043               	movf	_address^0,w,c
  3866   001946  0F07               	addlw	7
  3867   001948  EC8D  F013         	call	_read_internal_eeprom
  3868   00194C  0100               	movlb	0	; () banked
  3869   00194E  6FBA               	movwf	(_print+7)& (0+255),b
  3870   001950                     
  3871                           ; BSR set to: 0
  3872                           ;common.c: 254:             print[8] = ' ';
  3873   001950  0E20               	movlw	32
  3874   001952  6FBB               	movwf	(_print+8)& (0+255),b
  3875   001954                     
  3876                           ; BSR set to: 0
  3877                           ;common.c: 255:             print[9] = read_internal_eeprom(0x08 + address);
  3878   001954  5043               	movf	_address^0,w,c
  3879   001956  0F08               	addlw	8
  3880   001958  EC8D  F013         	call	_read_internal_eeprom
  3881   00195C  0100               	movlb	0	; () banked
  3882   00195E  6FBC               	movwf	(_print+9)& (0+255),b
  3883   001960                     
  3884                           ; BSR set to: 0
  3885                           ;common.c: 256:             print[10] = read_internal_eeprom(0X09 + address);
  3886   001960  5043               	movf	_address^0,w,c
  3887   001962  0F09               	addlw	9
  3888   001964  EC8D  F013         	call	_read_internal_eeprom
  3889   001968  0100               	movlb	0	; () banked
  3890   00196A  6FBD               	movwf	(_print+10)& (0+255),b
  3891   00196C                     
  3892                           ; BSR set to: 0
  3893                           ;common.c: 257:             print[11] = '\0';
  3894   00196C  0E00               	movlw	0
  3895   00196E  6FBE               	movwf	(_print+11)& (0+255),b
  3896   001970                     
  3897                           ; BSR set to: 0
  3898                           ;common.c: 258:             pk = read_internal_eeprom(0x0A + address);
  3899   001970  5043               	movf	_address^0,w,c
  3900   001972  0F0A               	addlw	10
  3901   001974  EC8D  F013         	call	_read_internal_eeprom
  3902   001978  6E12               	movwf	??_download_log^0,c
  3903   00197A  5012               	movf	??_download_log^0,w,c
  3904   00197C  0100               	movlb	0	; () banked
  3905   00197E  6FA2               	movwf	_pk& (0+255),b
  3906   001980  6BA3               	clrf	(_pk+1)& (0+255),b
  3907   001982                     
  3908                           ; BSR set to: 0
  3909                           ;common.c: 260:             putch(i + '0');
  3910   001982  501B               	movf	download_log@i^0,w,c
  3911   001984  0F30               	addlw	48
  3912   001986  EC79  F013         	call	_putch
  3913   00198A                     
  3914                           ;common.c: 261:             puts("  ");
  3915   00198A  0EE2               	movlw	low (STR_7+14)
  3916   00198C  6E02               	movwf	puts@s^0,c
  3917   00198E  0E7E               	movlw	high (STR_7+14)
  3918   001990  6E03               	movwf	(puts@s+1)^0,c
  3919   001992  EC46  F012         	call	_puts	;wreg free
  3920   001996                     
  3921                           ;common.c: 262:             puts(print);
  3922   001996  0EB3               	movlw	low _print
  3923   001998  6E02               	movwf	puts@s^0,c
  3924   00199A  6A03               	clrf	(puts@s+1)^0,c
  3925   00199C  EC46  F012         	call	_puts	;wreg free
  3926   0019A0                     
  3927                           ;common.c: 263:             putch(' ');
  3928   0019A0  0E20               	movlw	32
  3929   0019A2  EC79  F013         	call	_putch
  3930   0019A6                     
  3931                           ;common.c: 264:             putch((pk / 10) + '0');
  3932   0019A6  C0A2  F001         	movff	_pk,___lwdiv@dividend
  3933   0019AA  C0A3  F002         	movff	_pk+1,___lwdiv@dividend+1
  3934   0019AE  0E00               	movlw	0
  3935   0019B0  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3936   0019B2  0E0A               	movlw	10
  3937   0019B4  6E03               	movwf	___lwdiv@divisor^0,c
  3938   0019B6  ECDA  F011         	call	___lwdiv	;wreg free
  3939   0019BA  5001               	movf	?___lwdiv^0,w,c
  3940   0019BC  0F30               	addlw	48
  3941   0019BE  EC79  F013         	call	_putch
  3942   0019C2                     
  3943                           ;common.c: 265:             putch((pk % 10) + '0');
  3944   0019C2  C0A2  F001         	movff	_pk,___lwmod@dividend
  3945   0019C6  C0A3  F002         	movff	_pk+1,___lwmod@dividend+1
  3946   0019CA  0E00               	movlw	0
  3947   0019CC  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3948   0019CE  0E0A               	movlw	10
  3949   0019D0  6E03               	movwf	___lwmod@divisor^0,c
  3950   0019D2  EC14  F012         	call	___lwmod	;wreg free
  3951   0019D6  5001               	movf	?___lwmod^0,w,c
  3952   0019D8  0F30               	addlw	48
  3953   0019DA  EC79  F013         	call	_putch
  3954   0019DE                     
  3955                           ;common.c: 266:             puts("\n\r");
  3956   0019DE  0E36               	movlw	low (STR_12+13)
  3957   0019E0  6E02               	movwf	puts@s^0,c
  3958   0019E2  0E7F               	movlw	high (STR_12+13)
  3959   0019E4  6E03               	movwf	(puts@s+1)^0,c
  3960   0019E6  EC46  F012         	call	_puts	;wreg free
  3961   0019EA                     
  3962                           ;common.c: 267:             address = address + 11;
  3963   0019EA  0E0B               	movlw	11
  3964   0019EC  2443               	addwf	_address^0,w,c
  3965   0019EE  6E43               	movwf	_address^0,c
  3966   0019F0  0E00               	movlw	0
  3967   0019F2  2044               	addwfc	(_address+1)^0,w,c
  3968   0019F4  6E44               	movwf	(_address+1)^0,c
  3969   0019F6                     
  3970                           ;common.c: 268:         }
  3971   0019F6  4A1B               	infsnz	download_log@i^0,f,c
  3972   0019F8  2A1C               	incf	(download_log@i+1)^0,f,c
  3973   0019FA                     l3785:
  3974   0019FA  5054               	movf	_no_of_event^0,w,c
  3975   0019FC  5C1B               	subwf	download_log@i^0,w,c
  3976   0019FE  5055               	movf	(_no_of_event+1)^0,w,c
  3977   001A00  581C               	subwfb	(download_log@i+1)^0,w,c
  3978   001A02  A0D8               	btfss	status,0,c
  3979   001A04  EF06  F00D         	goto	u3431
  3980   001A08  EF08  F00D         	goto	u3430
  3981   001A0C                     u3431:
  3982   001A0C  EF7A  F00C         	goto	l3741
  3983   001A10                     u3430:
  3984   001A10                     
  3985                           ;common.c: 269:         clcd_print("DOWNLOAD COMPLETED", (0x80 + (0)));
  3986   001A10  0EC1               	movlw	low STR_16
  3987   001A12  6E0C               	movwf	clcd_print@str^0,c
  3988   001A14  0E7E               	movlw	high STR_16
  3989   001A16  6E0D               	movwf	(clcd_print@str+1)^0,c
  3990   001A18  0E80               	movlw	128
  3991   001A1A  6E0E               	movwf	clcd_print@addr^0,c
  3992   001A1C  ECDD  F010         	call	_clcd_print	;wreg free
  3993   001A20                     
  3994                           ;common.c: 270:         for (unsigned long y = 0xFFFFA; --y;);
  3995   001A20  0EFA               	movlw	250
  3996   001A22  6E17               	movwf	download_log@y_163^0,c
  3997   001A24  0EFF               	movlw	255
  3998   001A26  6E18               	movwf	(download_log@y_163+1)^0,c
  3999   001A28  0E0F               	movlw	15
  4000   001A2A  6E19               	movwf	(download_log@y_163+2)^0,c
  4001   001A2C  0E00               	movlw	0
  4002   001A2E  6E1A               	movwf	(download_log@y_163+3)^0,c
  4003   001A30                     l3791:
  4004   001A30  0617               	decf	download_log@y_163^0,f,c
  4005   001A32  0E00               	movlw	0
  4006   001A34  5A18               	subwfb	(download_log@y_163+1)^0,f,c
  4007   001A36  5A19               	subwfb	(download_log@y_163+2)^0,f,c
  4008   001A38  5A1A               	subwfb	(download_log@y_163+3)^0,f,c
  4009   001A3A  5017               	movf	download_log@y_163^0,w,c
  4010   001A3C  1018               	iorwf	(download_log@y_163+1)^0,w,c
  4011   001A3E  1019               	iorwf	(download_log@y_163+2)^0,w,c
  4012   001A40  101A               	iorwf	(download_log@y_163+3)^0,w,c
  4013   001A42  A4D8               	btfss	status,2,c
  4014   001A44  EF26  F00D         	goto	u3441
  4015   001A48  EF28  F00D         	goto	u3440
  4016   001A4C                     u3441:
  4017   001A4C  EF18  F00D         	goto	l3791
  4018   001A50                     u3440:
  4019   001A50  EF30  F00D         	goto	l3795
  4020   001A54                     l3793:
  4021                           
  4022                           ;common.c: 272:         puts("DOWNLOAD LOG IS EMPTY\n\r");
  4023   001A54  0EA9               	movlw	low STR_17
  4024   001A56  6E02               	movwf	puts@s^0,c
  4025   001A58  0E7E               	movlw	high STR_17
  4026   001A5A  6E03               	movwf	(puts@s+1)^0,c
  4027   001A5C  EC46  F012         	call	_puts	;wreg free
  4028   001A60                     l3795:
  4029                           
  4030                           ;common.c: 274:     SCREEN_FLAG = 0;
  4031   001A60  0E00               	movlw	0
  4032   001A62  6E50               	movwf	(_SCREEN_FLAG+1)^0,c
  4033   001A64  0E00               	movlw	0
  4034   001A66  6E4F               	movwf	_SCREEN_FLAG^0,c
  4035   001A68                     
  4036                           ;common.c: 275:     clcd_write(0x01);
  4037   001A68  0E01               	movlw	1
  4038   001A6A  ECF7  F012         	call	_clcd_write
  4039   001A6E                     
  4040                           ;common.c: 276:     flag = 1;
  4041   001A6E  0E01               	movlw	1
  4042   001A70  0100               	movlb	0	; () banked
  4043   001A72  6FD0               	movwf	_flag& (0+255),b
  4044   001A74                     
  4045                           ; BSR set to: 0
  4046                           ;common.c: 277:     NEW_KEY = 0;
  4047   001A74  0E00               	movlw	0
  4048   001A76  6E52               	movwf	_NEW_KEY^0,c
  4049   001A78                     
  4050                           ; BSR set to: 0
  4051                           ;common.c: 278:     MENU_FLAG = 0;
  4052   001A78  0E00               	movlw	0
  4053   001A7A  6E4E               	movwf	(_MENU_FLAG+1)^0,c
  4054   001A7C  0E00               	movlw	0
  4055   001A7E  6E4D               	movwf	_MENU_FLAG^0,c
  4056   001A80                     
  4057                           ; BSR set to: 0
  4058                           ;common.c: 279:     address = 0x00;
  4059   001A80  0E00               	movlw	0
  4060   001A82  6E44               	movwf	(_address+1)^0,c
  4061   001A84  0E00               	movlw	0
  4062   001A86  6E43               	movwf	_address^0,c
  4063   001A88                     
  4064                           ; BSR set to: 0
  4065   001A88  0012               	return		;funcret
  4066   001A8A                     __end_of_download_log:
  4067                           	callstack 0
  4068                           
  4069 ;; *************** function _uartinit *****************
  4070 ;; Defined at:
  4071 ;;		line 4 in file "uart.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;		None
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4085 ;;      Params:         0       0       0       0       0       0       0
  4086 ;;      Locals:         0       0       0       0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0
  4088 ;;      Totals:         0       0       0       0       0       0       0
  4089 ;;Total ram usage:        0 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 1
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_download_log
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text10
  4100   002708                     __ptext10:
  4101                           	callstack 0
  4102   002708                     _uartinit:
  4103                           	callstack 28
  4104   002708                     
  4105                           ;uart.c: 5:     TRISCbits.TRISC6 = 0;
  4106   002708  9C94               	bcf	148,6,c	;volatile
  4107                           
  4108                           ;uart.c: 6:     TRISCbits.TRISC7 = 1;
  4109   00270A  8E94               	bsf	148,7,c	;volatile
  4110   00270C                     
  4111                           ;uart.c: 7:     TXSTA = 0b00100000;
  4112   00270C  0E20               	movlw	32
  4113   00270E  6EAC               	movwf	172,c	;volatile
  4114                           
  4115                           ;uart.c: 8:     RCSTA = 0b10010000;
  4116   002710  0E90               	movlw	144
  4117   002712  6EAB               	movwf	171,c	;volatile
  4118                           
  4119                           ;uart.c: 9:     SPBRG = 31;
  4120   002714  0E1F               	movlw	31
  4121   002716  6EAF               	movwf	175,c	;volatile
  4122   002718  0012               	return		;funcret
  4123   00271A                     __end_of_uartinit:
  4124                           	callstack 0
  4125                           
  4126 ;; *************** function _puts *****************
  4127 ;; Defined at:
  4128 ;;		line 42 in file "uart.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;  s               2    1[COMRAM] PTR const unsigned char 
  4131 ;;		 -> STR_17(24), STR_15(3), STR_14(3), STR_13(3), 
  4132 ;;		 -> STR_12(16), print(12), 
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;		None
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  2    1[COMRAM] int 
  4137 ;; Registers used:
  4138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4144 ;;      Params:         2       0       0       0       0       0       0
  4145 ;;      Locals:         0       0       0       0       0       0       0
  4146 ;;      Temps:          0       0       0       0       0       0       0
  4147 ;;      Totals:         2       0       0       0       0       0       0
  4148 ;;Total ram usage:        2 bytes
  4149 ;; Hardware stack levels used: 1
  4150 ;; Hardware stack levels required when called: 2
  4151 ;; This function calls:
  4152 ;;		_putch
  4153 ;; This function is called by:
  4154 ;;		_download_log
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           	psect	text11
  4159   00248C                     __ptext11:
  4160                           	callstack 0
  4161   00248C                     _puts:
  4162                           	callstack 27
  4163   00248C                     
  4164                           ;uart.c: 42: int puts(const char *s);uart.c: 43: {;uart.c: 44:  while(*s)
  4165   00248C  EF5C  F012         	goto	l3103
  4166   002490                     l3099:
  4167                           
  4168                           ;uart.c: 45:  {;uart.c: 46:   putch(*s++);
  4169   002490  C002  FFF6         	movff	puts@s,tblptrl
  4170   002494  C003  FFF7         	movff	puts@s+1,tblptrh
  4171   002498  6AF8               	clrf	tblptru,c
  4172   00249A  0E05               	movlw	(high __ramtop+-1)
  4173   00249C  64F7               	cpfsgt	tblptrh,c
  4174   00249E  D003               	bra	u2417
  4175   0024A0  0008               	tblrd		*
  4176   0024A2  50F5               	movf	tablat,w,c
  4177   0024A4  D005               	bra	u2410
  4178   0024A6                     u2417:
  4179   0024A6  CFF6 FFE9          	movff	tblptrl,fsr0l
  4180   0024AA  CFF7 FFEA          	movff	tblptrh,fsr0h
  4181   0024AE  50EF               	movf	indf0,w,c
  4182   0024B0                     u2410:
  4183   0024B0  EC79  F013         	call	_putch
  4184   0024B4  4A02               	infsnz	puts@s^0,f,c
  4185   0024B6  2A03               	incf	(puts@s+1)^0,f,c
  4186   0024B8                     l3103:
  4187                           
  4188                           ;uart.c: 44:  while(*s)
  4189   0024B8  C002  FFF6         	movff	puts@s,tblptrl
  4190   0024BC  C003  FFF7         	movff	puts@s+1,tblptrh
  4191   0024C0  6AF8               	clrf	tblptru,c
  4192   0024C2  0E05               	movlw	(high __ramtop+-1)
  4193   0024C4  64F7               	cpfsgt	tblptrh,c
  4194   0024C6  D003               	bra	u2427
  4195   0024C8  0008               	tblrd		*
  4196   0024CA  50F5               	movf	tablat,w,c
  4197   0024CC  D005               	bra	u2420
  4198   0024CE                     u2427:
  4199   0024CE  CFF6 FFE9          	movff	tblptrl,fsr0l
  4200   0024D2  CFF7 FFEA          	movff	tblptrh,fsr0h
  4201   0024D6  50EF               	movf	indf0,w,c
  4202   0024D8                     u2420:
  4203   0024D8  0900               	iorlw	0
  4204   0024DA  A4D8               	btfss	status,2,c
  4205   0024DC  EF72  F012         	goto	u2431
  4206   0024E0  EF74  F012         	goto	u2430
  4207   0024E4                     u2431:
  4208   0024E4  EF48  F012         	goto	l3099
  4209   0024E8                     u2430:
  4210   0024E8  0012               	return		;funcret
  4211   0024EA                     __end_of_puts:
  4212                           	callstack 0
  4213                           
  4214 ;; *************** function _putch *****************
  4215 ;; Defined at:
  4216 ;;		line 31 in file "uart.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  byte            1    wreg     unsigned char 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  byte            1    0[COMRAM] unsigned char 
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  1    wreg      void 
  4223 ;; Registers used:
  4224 ;;		wreg
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4230 ;;      Params:         0       0       0       0       0       0       0
  4231 ;;      Locals:         1       0       0       0       0       0       0
  4232 ;;      Temps:          0       0       0       0       0       0       0
  4233 ;;      Totals:         1       0       0       0       0       0       0
  4234 ;;Total ram usage:        1 bytes
  4235 ;; Hardware stack levels used: 1
  4236 ;; Hardware stack levels required when called: 1
  4237 ;; This function calls:
  4238 ;;		Nothing
  4239 ;; This function is called by:
  4240 ;;		_download_log
  4241 ;;		_puts
  4242 ;;		_getche
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text12
  4247   0026F2                     __ptext12:
  4248                           	callstack 0
  4249   0026F2                     _putch:
  4250                           	callstack 27
  4251                           
  4252                           ;incstack = 0
  4253                           ;putch@byte stored from wreg
  4254   0026F2  6E01               	movwf	putch@byte^0,c
  4255   0026F4                     l721:
  4256                           
  4257                           ;uart.c: 35:  while(!TXIF)
  4258   0026F4  A89E               	btfss	3998,4,c	;volatile
  4259   0026F6  EF7F  F013         	goto	u2141
  4260   0026FA  EF81  F013         	goto	u2140
  4261   0026FE                     u2141:
  4262   0026FE  EF7A  F013         	goto	l721
  4263   002702                     u2140:
  4264   002702                     
  4265                           ;uart.c: 39:  TXREG = byte;
  4266   002702  C001  FFAD         	movff	putch@byte,4013	;volatile
  4267   002706  0012               	return		;funcret
  4268   002708                     __end_of_putch:
  4269                           	callstack 0
  4270                           
  4271 ;; *************** function _display_menu *****************
  4272 ;; Defined at:
  4273 ;;		line 559 in file "common.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4287 ;;      Params:         0       0       0       0       0       0       0
  4288 ;;      Locals:         0       0       0       0       0       0       0
  4289 ;;      Temps:          0       0       0       0       0       0       0
  4290 ;;      Totals:         0       0       0       0       0       0       0
  4291 ;;Total ram usage:        0 bytes
  4292 ;; Hardware stack levels used: 1
  4293 ;; Hardware stack levels required when called: 4
  4294 ;; This function calls:
  4295 ;;		___wmul
  4296 ;;		_clcd_print
  4297 ;;		_clcd_write
  4298 ;;		_read_switches
  4299 ;; This function is called by:
  4300 ;;		_main
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text13
  4305   0012BE                     __ptext13:
  4306                           	callstack 0
  4307   0012BE                     _display_menu:
  4308                           	callstack 26
  4309   0012BE                     
  4310                           ;common.c: 560:     key = read_switches(0);
  4311   0012BE  0E00               	movlw	0
  4312   0012C0  EC9D  F011         	call	_read_switches
  4313   0012C4  6E53               	movwf	_key^0,c
  4314   0012C6                     
  4315                           ;common.c: 561:     if (key == 5 || key == 6) {
  4316   0012C6  0E05               	movlw	5
  4317   0012C8  1853               	xorwf	_key^0,w,c
  4318   0012CA  B4D8               	btfsc	status,2,c
  4319   0012CC  EF6A  F009         	goto	u3831
  4320   0012D0  EF6C  F009         	goto	u3830
  4321   0012D4                     u3831:
  4322   0012D4  EF75  F009         	goto	l4095
  4323   0012D8                     u3830:
  4324   0012D8  0E06               	movlw	6
  4325   0012DA  1853               	xorwf	_key^0,w,c
  4326   0012DC  A4D8               	btfss	status,2,c
  4327   0012DE  EF73  F009         	goto	u3841
  4328   0012E2  EF75  F009         	goto	u3840
  4329   0012E6                     u3841:
  4330   0012E6  EF7D  F009         	goto	l325
  4331   0012EA                     u3840:
  4332   0012EA                     l4095:
  4333                           
  4334                           ;common.c: 562:         delay++;
  4335   0012EA  0E01               	movlw	1
  4336   0012EC  2639               	addwf	_delay^0,f,c
  4337   0012EE  0E00               	movlw	0
  4338   0012F0  223A               	addwfc	(_delay+1)^0,f,c
  4339   0012F2  223B               	addwfc	(_delay+2)^0,f,c
  4340   0012F4  223C               	addwfc	(_delay+3)^0,f,c
  4341   0012F6                     
  4342                           ;common.c: 563:         NEW_KEY = key;
  4343   0012F6  C053  F052         	movff	_key,_NEW_KEY
  4344   0012FA                     l325:
  4345                           
  4346                           ;common.c: 565:     if (delay < 100 && key == 0xFF) {
  4347   0012FA  503C               	movf	(_delay+3)^0,w,c
  4348   0012FC  103B               	iorwf	(_delay+2)^0,w,c
  4349   0012FE  103A               	iorwf	(_delay+1)^0,w,c
  4350   001300  E107               	bnz	u3851
  4351   001302  0E64               	movlw	100
  4352   001304  5C39               	subwf	_delay^0,w,c
  4353   001306  B0D8               	btfsc	status,0,c
  4354   001308  EF88  F009         	goto	u3851
  4355   00130C  EF8A  F009         	goto	u3850
  4356   001310                     u3851:
  4357   001310  EF13  F00A         	goto	l4133
  4358   001314                     u3850:
  4359   001314  2853               	incf	_key^0,w,c
  4360   001316  A4D8               	btfss	status,2,c
  4361   001318  EF90  F009         	goto	u3861
  4362   00131C  EF92  F009         	goto	u3860
  4363   001320                     u3861:
  4364   001320  EF13  F00A         	goto	l4133
  4365   001324                     u3860:
  4366   001324                     
  4367                           ;common.c: 566:         if (M_index < 3 && NEW_KEY == 5) {
  4368   001324  5040               	movf	(_M_index+1)^0,w,c
  4369   001326  E107               	bnz	u3871
  4370   001328  0E03               	movlw	3
  4371   00132A  5C3F               	subwf	_M_index^0,w,c
  4372   00132C  B0D8               	btfsc	status,0,c
  4373   00132E  EF9B  F009         	goto	u3871
  4374   001332  EF9D  F009         	goto	u3870
  4375   001336                     u3871:
  4376   001336  EFB7  F009         	goto	l4111
  4377   00133A                     u3870:
  4378   00133A  0E05               	movlw	5
  4379   00133C  1852               	xorwf	_NEW_KEY^0,w,c
  4380   00133E  A4D8               	btfss	status,2,c
  4381   001340  EFA4  F009         	goto	u3881
  4382   001344  EFA6  F009         	goto	u3880
  4383   001348                     u3881:
  4384   001348  EFB7  F009         	goto	l4111
  4385   00134C                     u3880:
  4386   00134C                     
  4387                           ;common.c: 567:             (ARROW) ? (M_index++) : (ARROW = 1);
  4388   00134C  503D               	movf	_ARROW^0,w,c
  4389   00134E  103E               	iorwf	(_ARROW+1)^0,w,c
  4390   001350  B4D8               	btfsc	status,2,c
  4391   001352  EFAD  F009         	goto	u3891
  4392   001356  EFAF  F009         	goto	u3890
  4393   00135A                     u3891:
  4394   00135A  EFB3  F009         	goto	l4109
  4395   00135E                     u3890:
  4396   00135E  4A3F               	infsnz	_M_index^0,f,c
  4397   001360  2A40               	incf	(_M_index+1)^0,f,c
  4398   001362  EFB7  F009         	goto	l4111
  4399   001366                     l4109:
  4400   001366  0E00               	movlw	0
  4401   001368  6E3E               	movwf	(_ARROW+1)^0,c
  4402   00136A  0E01               	movlw	1
  4403   00136C  6E3D               	movwf	_ARROW^0,c
  4404   00136E                     l4111:
  4405                           
  4406                           ;common.c: 569:         if (M_index > 0 && NEW_KEY == 6) {
  4407   00136E  503F               	movf	_M_index^0,w,c
  4408   001370  1040               	iorwf	(_M_index+1)^0,w,c
  4409   001372  B4D8               	btfsc	status,2,c
  4410   001374  EFBE  F009         	goto	u3901
  4411   001378  EFC0  F009         	goto	u3900
  4412   00137C                     u3901:
  4413   00137C  EFDD  F009         	goto	l4121
  4414   001380                     u3900:
  4415   001380  0E06               	movlw	6
  4416   001382  1852               	xorwf	_NEW_KEY^0,w,c
  4417   001384  A4D8               	btfss	status,2,c
  4418   001386  EFC7  F009         	goto	u3911
  4419   00138A  EFC9  F009         	goto	u3910
  4420   00138E                     u3911:
  4421   00138E  EFDD  F009         	goto	l4121
  4422   001392                     u3910:
  4423   001392                     
  4424                           ;common.c: 570:             (!ARROW) ? (M_index--) : (ARROW = 0);
  4425   001392  503D               	movf	_ARROW^0,w,c
  4426   001394  103E               	iorwf	(_ARROW+1)^0,w,c
  4427   001396  A4D8               	btfss	status,2,c
  4428   001398  EFD0  F009         	goto	u3921
  4429   00139C  EFD2  F009         	goto	u3920
  4430   0013A0                     u3921:
  4431   0013A0  EFD7  F009         	goto	l4119
  4432   0013A4                     u3920:
  4433   0013A4  063F               	decf	_M_index^0,f,c
  4434   0013A6  A0D8               	btfss	status,0,c
  4435   0013A8  0640               	decf	(_M_index+1)^0,f,c
  4436   0013AA  EF09  F00A         	goto	l339
  4437   0013AE                     l4119:
  4438   0013AE  0E00               	movlw	0
  4439   0013B0  6E3E               	movwf	(_ARROW+1)^0,c
  4440   0013B2  0E00               	movlw	0
  4441   0013B4  6E3D               	movwf	_ARROW^0,c
  4442   0013B6  EF09  F00A         	goto	l339
  4443   0013BA                     l4121:
  4444   0013BA  0E05               	movlw	5
  4445   0013BC  1852               	xorwf	_NEW_KEY^0,w,c
  4446   0013BE  A4D8               	btfss	status,2,c
  4447   0013C0  EFE4  F009         	goto	u3931
  4448   0013C4  EFE6  F009         	goto	u3930
  4449   0013C8                     u3931:
  4450   0013C8  EFF5  F009         	goto	l4127
  4451   0013CC                     u3930:
  4452   0013CC  503D               	movf	_ARROW^0,w,c
  4453   0013CE  103E               	iorwf	(_ARROW+1)^0,w,c
  4454   0013D0  A4D8               	btfss	status,2,c
  4455   0013D2  EFED  F009         	goto	u3941
  4456   0013D6  EFEF  F009         	goto	u3940
  4457   0013DA                     u3941:
  4458   0013DA  EFF5  F009         	goto	l4127
  4459   0013DE                     u3940:
  4460   0013DE                     
  4461                           ;common.c: 572:             ARROW = 1;
  4462   0013DE  0E00               	movlw	0
  4463   0013E0  6E3E               	movwf	(_ARROW+1)^0,c
  4464   0013E2  0E01               	movlw	1
  4465   0013E4  6E3D               	movwf	_ARROW^0,c
  4466                           
  4467                           ;common.c: 573:         } else if (NEW_KEY == 6 && ARROW) {
  4468   0013E6  EF09  F00A         	goto	l339
  4469   0013EA                     l4127:
  4470   0013EA  0E06               	movlw	6
  4471   0013EC  1852               	xorwf	_NEW_KEY^0,w,c
  4472   0013EE  A4D8               	btfss	status,2,c
  4473   0013F0  EFFC  F009         	goto	u3951
  4474   0013F4  EFFE  F009         	goto	u3950
  4475   0013F8                     u3951:
  4476   0013F8  EF09  F00A         	goto	l339
  4477   0013FC                     u3950:
  4478   0013FC  503D               	movf	_ARROW^0,w,c
  4479   0013FE  103E               	iorwf	(_ARROW+1)^0,w,c
  4480   001400  B4D8               	btfsc	status,2,c
  4481   001402  EF05  F00A         	goto	u3961
  4482   001406  EF07  F00A         	goto	u3960
  4483   00140A                     u3961:
  4484   00140A  EF09  F00A         	goto	l339
  4485   00140E                     u3960:
  4486   00140E  EFD7  F009         	goto	l4119
  4487   001412                     l339:
  4488                           
  4489                           ;common.c: 576:         delay = 0;
  4490   001412  0E00               	movlw	0
  4491   001414  6E39               	movwf	_delay^0,c
  4492   001416  0E00               	movlw	0
  4493   001418  6E3A               	movwf	(_delay+1)^0,c
  4494   00141A  0E00               	movlw	0
  4495   00141C  6E3B               	movwf	(_delay+2)^0,c
  4496   00141E  0E00               	movlw	0
  4497   001420  6E3C               	movwf	(_delay+3)^0,c
  4498                           
  4499                           ;common.c: 577:         NEW_KEY = 0;
  4500   001422  0E00               	movlw	0
  4501   001424  6E52               	movwf	_NEW_KEY^0,c
  4502   001426                     l4133:
  4503                           
  4504                           ;common.c: 580:     if (ARROW == 0) {
  4505   001426  503D               	movf	_ARROW^0,w,c
  4506   001428  103E               	iorwf	(_ARROW+1)^0,w,c
  4507   00142A  A4D8               	btfss	status,2,c
  4508   00142C  EF1A  F00A         	goto	u3971
  4509   001430  EF1C  F00A         	goto	u3970
  4510   001434                     u3971:
  4511   001434  EF2E  F00A         	goto	l4137
  4512   001438                     u3970:
  4513   001438                     
  4514                           ;common.c: 581:         clcd_print("->", (0x80 + (0)));
  4515   001438  0EFB               	movlw	low STR_31
  4516   00143A  6E0C               	movwf	clcd_print@str^0,c
  4517   00143C  0E7F               	movlw	high STR_31
  4518   00143E  6E0D               	movwf	(clcd_print@str+1)^0,c
  4519   001440  0E80               	movlw	128
  4520   001442  6E0E               	movwf	clcd_print@addr^0,c
  4521   001444  ECDD  F010         	call	_clcd_print	;wreg free
  4522                           
  4523                           ;common.c: 582:         clcd_print("  ", (0xC0 + (0)));
  4524   001448  0EE2               	movlw	low (STR_7+14)
  4525   00144A  6E0C               	movwf	clcd_print@str^0,c
  4526   00144C  0E7E               	movlw	high (STR_7+14)
  4527   00144E  6E0D               	movwf	(clcd_print@str+1)^0,c
  4528   001450  0EC0               	movlw	192
  4529   001452  6E0E               	movwf	clcd_print@addr^0,c
  4530   001454  ECDD  F010         	call	_clcd_print	;wreg free
  4531                           
  4532                           ;common.c: 583:     } else {
  4533   001458  EF3E  F00A         	goto	l4139
  4534   00145C                     l4137:
  4535                           
  4536                           ;common.c: 584:         clcd_print("  ", (0x80 + (0)));
  4537   00145C  0EE2               	movlw	low (STR_7+14)
  4538   00145E  6E0C               	movwf	clcd_print@str^0,c
  4539   001460  0E7E               	movlw	high (STR_7+14)
  4540   001462  6E0D               	movwf	(clcd_print@str+1)^0,c
  4541   001464  0E80               	movlw	128
  4542   001466  6E0E               	movwf	clcd_print@addr^0,c
  4543   001468  ECDD  F010         	call	_clcd_print	;wreg free
  4544                           
  4545                           ;common.c: 585:         clcd_print("->", (0xC0 + (0)));
  4546   00146C  0EFB               	movlw	low STR_31
  4547   00146E  6E0C               	movwf	clcd_print@str^0,c
  4548   001470  0E7F               	movlw	high STR_31
  4549   001472  6E0D               	movwf	(clcd_print@str+1)^0,c
  4550   001474  0EC0               	movlw	192
  4551   001476  6E0E               	movwf	clcd_print@addr^0,c
  4552   001478  ECDD  F010         	call	_clcd_print	;wreg free
  4553   00147C                     l4139:
  4554                           
  4555                           ;common.c: 587:     clcd_print(diplay[M_index], (0x80 + (3)));
  4556   00147C  C03F  F001         	movff	_M_index,___wmul@multiplier
  4557   001480  C040  F002         	movff	_M_index+1,___wmul@multiplier+1
  4558   001484  0E00               	movlw	0
  4559   001486  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4560   001488  0E14               	movlw	20
  4561   00148A  6E03               	movwf	___wmul@multiplicand^0,c
  4562   00148C  EC28  F013         	call	___wmul	;wreg free
  4563   001490  0E00               	movlw	low _diplay
  4564   001492  2401               	addwf	?___wmul^0,w,c
  4565   001494  6E0C               	movwf	clcd_print@str^0,c
  4566   001496  0E01               	movlw	high _diplay
  4567   001498  2002               	addwfc	(?___wmul+1)^0,w,c
  4568   00149A  6E0D               	movwf	(clcd_print@str+1)^0,c
  4569   00149C  0E83               	movlw	131
  4570   00149E  6E0E               	movwf	clcd_print@addr^0,c
  4571   0014A0  ECDD  F010         	call	_clcd_print	;wreg free
  4572   0014A4                     
  4573                           ;common.c: 588:     clcd_print(diplay[M_index + 1], (0xC0 + (3)));
  4574   0014A4  C03F  F001         	movff	_M_index,___wmul@multiplier
  4575   0014A8  C040  F002         	movff	_M_index+1,___wmul@multiplier+1
  4576   0014AC  0E00               	movlw	0
  4577   0014AE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4578   0014B0  0E14               	movlw	20
  4579   0014B2  6E03               	movwf	___wmul@multiplicand^0,c
  4580   0014B4  EC28  F013         	call	___wmul	;wreg free
  4581   0014B8  0E14               	movlw	low (_diplay+20)
  4582   0014BA  2401               	addwf	?___wmul^0,w,c
  4583   0014BC  6E0C               	movwf	clcd_print@str^0,c
  4584   0014BE  0E01               	movlw	high (_diplay+20)
  4585   0014C0  2002               	addwfc	(?___wmul+1)^0,w,c
  4586   0014C2  6E0D               	movwf	(clcd_print@str+1)^0,c
  4587   0014C4  0EC3               	movlw	195
  4588   0014C6  6E0E               	movwf	clcd_print@addr^0,c
  4589   0014C8  ECDD  F010         	call	_clcd_print	;wreg free
  4590   0014CC                     
  4591                           ;common.c: 591:     if (delay >= 100) {
  4592   0014CC  503C               	movf	(_delay+3)^0,w,c
  4593   0014CE  103B               	iorwf	(_delay+2)^0,w,c
  4594   0014D0  103A               	iorwf	(_delay+1)^0,w,c
  4595   0014D2  E109               	bnz	u3980
  4596   0014D4  0E64               	movlw	100
  4597   0014D6  5C39               	subwf	_delay^0,w,c
  4598   0014D8  A0D8               	btfss	status,0,c
  4599   0014DA  EF71  F00A         	goto	u3981
  4600   0014DE  EF73  F00A         	goto	u3980
  4601   0014E2                     u3981:
  4602   0014E2  EFCF  F00A         	goto	l353
  4603   0014E6                     u3980:
  4604   0014E6                     
  4605                           ;common.c: 592:         delay = 0;
  4606   0014E6  0E00               	movlw	0
  4607   0014E8  6E39               	movwf	_delay^0,c
  4608   0014EA  0E00               	movlw	0
  4609   0014EC  6E3A               	movwf	(_delay+1)^0,c
  4610   0014EE  0E00               	movlw	0
  4611   0014F0  6E3B               	movwf	(_delay+2)^0,c
  4612   0014F2  0E00               	movlw	0
  4613   0014F4  6E3C               	movwf	(_delay+3)^0,c
  4614   0014F6                     
  4615                           ;common.c: 593:         if (NEW_KEY == 6) {
  4616   0014F6  0E06               	movlw	6
  4617   0014F8  1852               	xorwf	_NEW_KEY^0,w,c
  4618   0014FA  A4D8               	btfss	status,2,c
  4619   0014FC  EF82  F00A         	goto	u3991
  4620   001500  EF84  F00A         	goto	u3990
  4621   001504                     u3991:
  4622   001504  EFA2  F00A         	goto	l4163
  4623   001508                     u3990:
  4624   001508                     
  4625                           ;common.c: 594:             clcd_write(0x01);
  4626   001508  0E01               	movlw	1
  4627   00150A  ECF7  F012         	call	_clcd_write
  4628   00150E                     
  4629                           ;common.c: 595:             SCREEN_FLAG = 0;
  4630   00150E  0E00               	movlw	0
  4631   001510  6E50               	movwf	(_SCREEN_FLAG+1)^0,c
  4632   001512  0E00               	movlw	0
  4633   001514  6E4F               	movwf	_SCREEN_FLAG^0,c
  4634   001516                     
  4635                           ;common.c: 596:             delay = 0;
  4636   001516  0E00               	movlw	0
  4637   001518  6E39               	movwf	_delay^0,c
  4638   00151A  0E00               	movlw	0
  4639   00151C  6E3A               	movwf	(_delay+1)^0,c
  4640   00151E  0E00               	movlw	0
  4641   001520  6E3B               	movwf	(_delay+2)^0,c
  4642   001522  0E00               	movlw	0
  4643   001524  6E3C               	movwf	(_delay+3)^0,c
  4644   001526                     
  4645                           ;common.c: 597:             flag = 1;
  4646   001526  0E01               	movlw	1
  4647   001528  0100               	movlb	0	; () banked
  4648   00152A  6FD0               	movwf	_flag& (0+255),b
  4649   00152C                     l4157:
  4650                           
  4651                           ;common.c: 598:             M_index = 0;
  4652   00152C  0E00               	movlw	0
  4653   00152E  6E40               	movwf	(_M_index+1)^0,c
  4654   001530  0E00               	movlw	0
  4655   001532  6E3F               	movwf	_M_index^0,c
  4656   001534                     
  4657                           ;common.c: 599:             ARROW = 0;
  4658   001534  0E00               	movlw	0
  4659   001536  6E3E               	movwf	(_ARROW+1)^0,c
  4660   001538  0E00               	movlw	0
  4661   00153A  6E3D               	movwf	_ARROW^0,c
  4662   00153C                     
  4663                           ;common.c: 600:             NEW_KEY = 0;
  4664   00153C  0E00               	movlw	0
  4665   00153E  6E52               	movwf	_NEW_KEY^0,c
  4666                           
  4667                           ;common.c: 601:         } else if (NEW_KEY == 5) {
  4668   001540  EFCF  F00A         	goto	l353
  4669   001544                     l4163:
  4670   001544  0E05               	movlw	5
  4671   001546  1852               	xorwf	_NEW_KEY^0,w,c
  4672   001548  A4D8               	btfss	status,2,c
  4673   00154A  EFA9  F00A         	goto	u4001
  4674   00154E  EFAB  F00A         	goto	u4000
  4675   001552                     u4001:
  4676   001552  EFCF  F00A         	goto	l353
  4677   001556                     u4000:
  4678   001556                     
  4679                           ;common.c: 602:             clcd_write(0x01);
  4680   001556  0E01               	movlw	1
  4681   001558  ECF7  F012         	call	_clcd_write
  4682   00155C                     
  4683                           ;common.c: 603:             MENU_FLAG = ARROW ? (M_index + 4) : (M_index + 3);
  4684   00155C  503D               	movf	_ARROW^0,w,c
  4685   00155E  103E               	iorwf	(_ARROW+1)^0,w,c
  4686   001560  A4D8               	btfss	status,2,c
  4687   001562  EFB5  F00A         	goto	u4011
  4688   001566  EFB7  F00A         	goto	u4010
  4689   00156A                     u4011:
  4690   00156A  EFBF  F00A         	goto	l4171
  4691   00156E                     u4010:
  4692   00156E  0E03               	movlw	3
  4693   001570  243F               	addwf	_M_index^0,w,c
  4694   001572  6E4D               	movwf	_MENU_FLAG^0,c
  4695   001574  0E00               	movlw	0
  4696   001576  2040               	addwfc	(_M_index+1)^0,w,c
  4697   001578  6E4E               	movwf	(_MENU_FLAG+1)^0,c
  4698   00157A  EFC5  F00A         	goto	l4173
  4699   00157E                     l4171:
  4700   00157E  0E04               	movlw	4
  4701   001580  243F               	addwf	_M_index^0,w,c
  4702   001582  6E4D               	movwf	_MENU_FLAG^0,c
  4703   001584  0E00               	movlw	0
  4704   001586  2040               	addwfc	(_M_index+1)^0,w,c
  4705   001588  6E4E               	movwf	(_MENU_FLAG+1)^0,c
  4706   00158A                     l4173:
  4707                           
  4708                           ;common.c: 604:             delay = 0;
  4709   00158A  0E00               	movlw	0
  4710   00158C  6E39               	movwf	_delay^0,c
  4711   00158E  0E00               	movlw	0
  4712   001590  6E3A               	movwf	(_delay+1)^0,c
  4713   001592  0E00               	movlw	0
  4714   001594  6E3B               	movwf	(_delay+2)^0,c
  4715   001596  0E00               	movlw	0
  4716   001598  6E3C               	movwf	(_delay+3)^0,c
  4717   00159A  EF96  F00A         	goto	l4157
  4718   00159E                     l353:
  4719   00159E  0012               	return		;funcret
  4720   0015A0                     __end_of_display_menu:
  4721                           	callstack 0
  4722                           
  4723 ;; *************** function _read_switches *****************
  4724 ;; Defined at:
  4725 ;;		line 86 in file "matrix.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  detection_ty    1    wreg     unsigned char 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;  detection_ty    1    0[COMRAM] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      unsigned char 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4739 ;;      Params:         0       0       0       0       0       0       0
  4740 ;;      Locals:         1       0       0       0       0       0       0
  4741 ;;      Temps:          0       0       0       0       0       0       0
  4742 ;;      Totals:         1       0       0       0       0       0       0
  4743 ;;Total ram usage:        1 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 2
  4746 ;; This function calls:
  4747 ;;		_scan_key
  4748 ;; This function is called by:
  4749 ;;		_view_log
  4750 ;;		_set_times
  4751 ;;		_display_menu
  4752 ;;		_main
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text14
  4757   00233A                     __ptext14:
  4758                           	callstack 0
  4759   00233A                     _read_switches:
  4760                           	callstack 27
  4761                           
  4762                           ;incstack = 0
  4763                           ;read_switches@detection_type stored from wreg
  4764   00233A  6E01               	movwf	read_switches@detection_type^0,c
  4765   00233C                     
  4766                           ;matrix.c: 86: unsigned char read_switches(unsigned char detection_type);matrix.c: 87: {
      +                          ;matrix.c: 88:  static unsigned char once = 1, key;;matrix.c: 90:  if (detection_type ==
      +                           1)
  4767   00233C  0401               	decf	read_switches@detection_type^0,w,c
  4768   00233E  A4D8               	btfss	status,2,c
  4769   002340  EFA4  F011         	goto	u2361
  4770   002344  EFA6  F011         	goto	u2360
  4771   002348                     u2361:
  4772   002348  EFCC  F011         	goto	l3083
  4773   00234C                     u2360:
  4774   00234C                     
  4775                           ;matrix.c: 91:  {;matrix.c: 92:   key = scan_key();
  4776   00234C  EC42  F00F         	call	_scan_key	;wreg free
  4777   002350  6E51               	movwf	read_switches@key^0,c
  4778   002352                     
  4779                           ;matrix.c: 93:   if(key != 0xFF && once )
  4780   002352  2851               	incf	read_switches@key^0,w,c
  4781   002354  B4D8               	btfsc	status,2,c
  4782   002356  EFAF  F011         	goto	u2371
  4783   00235A  EFB1  F011         	goto	u2370
  4784   00235E                     u2371:
  4785   00235E  EFBF  F011         	goto	l3079
  4786   002362                     u2370:
  4787   002362  0100               	movlb	0	; () banked
  4788   002364  51CF               	movf	read_switches@once& (0+255),w,b
  4789   002366  B4D8               	btfsc	status,2,c
  4790   002368  EFB8  F011         	goto	u2381
  4791   00236C  EFBA  F011         	goto	u2380
  4792   002370                     u2381:
  4793   002370  EFBF  F011         	goto	l3079
  4794   002374                     u2380:
  4795   002374                     
  4796                           ; BSR set to: 0
  4797                           ;matrix.c: 94:   {;matrix.c: 95:    once = 0;
  4798   002374  0E00               	movlw	0
  4799   002376  6FCF               	movwf	read_switches@once& (0+255),b
  4800                           
  4801                           ;matrix.c: 96:    return key;
  4802   002378  5051               	movf	read_switches@key^0,w,c
  4803   00237A  EFD9  F011         	goto	l506
  4804   00237E                     l3079:
  4805   00237E  2851               	incf	read_switches@key^0,w,c
  4806   002380  A4D8               	btfss	status,2,c
  4807   002382  EFC5  F011         	goto	u2391
  4808   002386  EFC7  F011         	goto	u2390
  4809   00238A                     u2391:
  4810   00238A  EFD8  F011         	goto	l3089
  4811   00238E                     u2390:
  4812   00238E                     
  4813                           ;matrix.c: 99:   {;matrix.c: 100:    once = 1;
  4814   00238E  0E01               	movlw	1
  4815   002390  0100               	movlb	0	; () banked
  4816   002392  6FCF               	movwf	read_switches@once& (0+255),b
  4817   002394  EFD8  F011         	goto	l3089
  4818   002398                     l3083:
  4819   002398  5001               	movf	read_switches@detection_type^0,w,c
  4820   00239A  A4D8               	btfss	status,2,c
  4821   00239C  EFD2  F011         	goto	u2401
  4822   0023A0  EFD4  F011         	goto	u2400
  4823   0023A4                     u2401:
  4824   0023A4  EFD8  F011         	goto	l3089
  4825   0023A8                     u2400:
  4826   0023A8                     
  4827                           ;matrix.c: 104:  {;matrix.c: 105:   return scan_key();
  4828   0023A8  EC42  F00F         	call	_scan_key	;wreg free
  4829   0023AC  EFD9  F011         	goto	l506
  4830   0023B0                     l3089:
  4831                           
  4832                           ;matrix.c: 108:  return 0xFF;
  4833   0023B0  0EFF               	movlw	255
  4834   0023B2                     l506:
  4835   0023B2  0012               	return		;funcret
  4836   0023B4                     __end_of_read_switches:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function _scan_key *****************
  4840 ;; Defined at:
  4841 ;;		line 17 in file "matrix.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;		None
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      unsigned char 
  4848 ;; Registers used:
  4849 ;;		wreg
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4855 ;;      Params:         0       0       0       0       0       0       0
  4856 ;;      Locals:         0       0       0       0       0       0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0
  4858 ;;      Totals:         0       0       0       0       0       0       0
  4859 ;;Total ram usage:        0 bytes
  4860 ;; Hardware stack levels used: 1
  4861 ;; Hardware stack levels required when called: 1
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_read_switches
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text15
  4870   001E84                     __ptext15:
  4871                           	callstack 0
  4872   001E84                     _scan_key:
  4873                           	callstack 27
  4874   001E84                     
  4875                           ;matrix.c: 19:     PORTBbits.RB0=1;PORTBbits.RB1=0;PORTBbits.RB2=0;
  4876   001E84  8081               	bsf	129,0,c	;volatile
  4877   001E86  9281               	bcf	129,1,c	;volatile
  4878   001E88  9481               	bcf	129,2,c	;volatile
  4879                           
  4880                           ;matrix.c: 20:     if(PORTBbits.RB4 == 1)
  4881   001E8A  A881               	btfss	129,4,c	;volatile
  4882   001E8C  EF4A  F00F         	goto	u2161
  4883   001E90  EF4C  F00F         	goto	u2160
  4884   001E94                     u2161:
  4885   001E94  EF4F  F00F         	goto	l485
  4886   001E98                     u2160:
  4887   001E98                     
  4888                           ;matrix.c: 21:     {;matrix.c: 22:         return 1;
  4889   001E98  0E01               	movlw	1
  4890   001E9A  EFC4  F00F         	goto	l486
  4891   001E9E                     l485:
  4892                           
  4893                           ;matrix.c: 24:     if(PORTBbits.RB5 == 1)
  4894   001E9E  AA81               	btfss	129,5,c	;volatile
  4895   001EA0  EF54  F00F         	goto	u2171
  4896   001EA4  EF56  F00F         	goto	u2170
  4897   001EA8                     u2171:
  4898   001EA8  EF59  F00F         	goto	l487
  4899   001EAC                     u2170:
  4900   001EAC                     
  4901                           ;matrix.c: 25:     {;matrix.c: 26:         return 4;
  4902   001EAC  0E04               	movlw	4
  4903   001EAE  EFC4  F00F         	goto	l486
  4904   001EB2                     l487:
  4905                           
  4906                           ;matrix.c: 29:     if(PORTBbits.RB6 == 1)
  4907   001EB2  AC81               	btfss	129,6,c	;volatile
  4908   001EB4  EF5E  F00F         	goto	u2181
  4909   001EB8  EF60  F00F         	goto	u2180
  4910   001EBC                     u2181:
  4911   001EBC  EF63  F00F         	goto	l488
  4912   001EC0                     u2180:
  4913   001EC0                     
  4914                           ;matrix.c: 30:     {;matrix.c: 31:         return 7;
  4915   001EC0  0E07               	movlw	7
  4916   001EC2  EFC4  F00F         	goto	l486
  4917   001EC6                     l488:
  4918                           
  4919                           ;matrix.c: 34:     if(PORTBbits.RB7 == 1)
  4920   001EC6  AE81               	btfss	129,7,c	;volatile
  4921   001EC8  EF68  F00F         	goto	u2191
  4922   001ECC  EF6A  F00F         	goto	u2190
  4923   001ED0                     u2191:
  4924   001ED0  EF6D  F00F         	goto	l489
  4925   001ED4                     u2190:
  4926   001ED4                     
  4927                           ;matrix.c: 35:     {;matrix.c: 36:         return 10;
  4928   001ED4  0E0A               	movlw	10
  4929   001ED6  EFC4  F00F         	goto	l486
  4930   001EDA                     l489:
  4931                           
  4932                           ;matrix.c: 40:      PORTBbits.RB0=0;PORTBbits.RB1=1;PORTBbits.RB2=0;
  4933   001EDA  9081               	bcf	129,0,c	;volatile
  4934   001EDC  8281               	bsf	129,1,c	;volatile
  4935   001EDE  9481               	bcf	129,2,c	;volatile
  4936                           
  4937                           ;matrix.c: 41:     if(PORTBbits.RB4 == 1)
  4938   001EE0  A881               	btfss	129,4,c	;volatile
  4939   001EE2  EF75  F00F         	goto	u2201
  4940   001EE6  EF77  F00F         	goto	u2200
  4941   001EEA                     u2201:
  4942   001EEA  EF7A  F00F         	goto	l490
  4943   001EEE                     u2200:
  4944   001EEE                     
  4945                           ;matrix.c: 42:     {;matrix.c: 43:         return 2;
  4946   001EEE  0E02               	movlw	2
  4947   001EF0  EFC4  F00F         	goto	l486
  4948   001EF4                     l490:
  4949                           
  4950                           ;matrix.c: 46:     if(PORTBbits.RB5 == 1)
  4951   001EF4  AA81               	btfss	129,5,c	;volatile
  4952   001EF6  EF7F  F00F         	goto	u2211
  4953   001EFA  EF81  F00F         	goto	u2210
  4954   001EFE                     u2211:
  4955   001EFE  EF84  F00F         	goto	l491
  4956   001F02                     u2210:
  4957   001F02                     
  4958                           ;matrix.c: 47:     {;matrix.c: 48:         return 5;
  4959   001F02  0E05               	movlw	5
  4960   001F04  EFC4  F00F         	goto	l486
  4961   001F08                     l491:
  4962                           
  4963                           ;matrix.c: 51:     if(PORTBbits.RB6 == 1)
  4964   001F08  AC81               	btfss	129,6,c	;volatile
  4965   001F0A  EF89  F00F         	goto	u2221
  4966   001F0E  EF8B  F00F         	goto	u2220
  4967   001F12                     u2221:
  4968   001F12  EF8E  F00F         	goto	l492
  4969   001F16                     u2220:
  4970   001F16                     
  4971                           ;matrix.c: 52:     {;matrix.c: 53:         return 8;
  4972   001F16  0E08               	movlw	8
  4973   001F18  EFC4  F00F         	goto	l486
  4974   001F1C                     l492:
  4975                           
  4976                           ;matrix.c: 56:     if(PORTBbits.RB7 == 1)
  4977   001F1C  AE81               	btfss	129,7,c	;volatile
  4978   001F1E  EF93  F00F         	goto	u2231
  4979   001F22  EF95  F00F         	goto	u2230
  4980   001F26                     u2231:
  4981   001F26  EF98  F00F         	goto	l493
  4982   001F2A                     u2230:
  4983   001F2A                     
  4984                           ;matrix.c: 57:     {;matrix.c: 58:         return 11;
  4985   001F2A  0E0B               	movlw	11
  4986   001F2C  EFC4  F00F         	goto	l486
  4987   001F30                     l493:
  4988                           
  4989                           ;matrix.c: 62:        PORTBbits.RB0=0;PORTBbits.RB1=0;PORTBbits.RB2=1;
  4990   001F30  9081               	bcf	129,0,c	;volatile
  4991   001F32  9281               	bcf	129,1,c	;volatile
  4992   001F34  8481               	bsf	129,2,c	;volatile
  4993                           
  4994                           ;matrix.c: 63:     if(PORTBbits.RB4 == 1)
  4995   001F36  A881               	btfss	129,4,c	;volatile
  4996   001F38  EFA0  F00F         	goto	u2241
  4997   001F3C  EFA2  F00F         	goto	u2240
  4998   001F40                     u2241:
  4999   001F40  EFA5  F00F         	goto	l494
  5000   001F44                     u2240:
  5001   001F44                     
  5002                           ;matrix.c: 64:     {;matrix.c: 65:         return 3;
  5003   001F44  0E03               	movlw	3
  5004   001F46  EFC4  F00F         	goto	l486
  5005   001F4A                     l494:
  5006                           
  5007                           ;matrix.c: 68:     if(PORTBbits.RB5 == 1)
  5008   001F4A  AA81               	btfss	129,5,c	;volatile
  5009   001F4C  EFAA  F00F         	goto	u2251
  5010   001F50  EFAC  F00F         	goto	u2250
  5011   001F54                     u2251:
  5012   001F54  EFAF  F00F         	goto	l495
  5013   001F58                     u2250:
  5014   001F58                     
  5015                           ;matrix.c: 69:     {;matrix.c: 70:         return 6;
  5016   001F58  0E06               	movlw	6
  5017   001F5A  EFC4  F00F         	goto	l486
  5018   001F5E                     l495:
  5019                           
  5020                           ;matrix.c: 73:     if(PORTBbits.RB6 == 1)
  5021   001F5E  AC81               	btfss	129,6,c	;volatile
  5022   001F60  EFB4  F00F         	goto	u2261
  5023   001F64  EFB6  F00F         	goto	u2260
  5024   001F68                     u2261:
  5025   001F68  EFB9  F00F         	goto	l496
  5026   001F6C                     u2260:
  5027   001F6C                     
  5028                           ;matrix.c: 74:     {;matrix.c: 75:         return 9;
  5029   001F6C  0E09               	movlw	9
  5030   001F6E  EFC4  F00F         	goto	l486
  5031   001F72                     l496:
  5032                           
  5033                           ;matrix.c: 78:     if(PORTBbits.RB7 == 1)
  5034   001F72  AE81               	btfss	129,7,c	;volatile
  5035   001F74  EFBE  F00F         	goto	u2271
  5036   001F78  EFC0  F00F         	goto	u2270
  5037   001F7C                     u2271:
  5038   001F7C  EFC3  F00F         	goto	l2979
  5039   001F80                     u2270:
  5040   001F80                     
  5041                           ;matrix.c: 79:     {;matrix.c: 80:         return 12;
  5042   001F80  0E0C               	movlw	12
  5043   001F82  EFC4  F00F         	goto	l486
  5044   001F86                     l2979:
  5045                           
  5046                           ;matrix.c: 83:        return 0xFF;
  5047   001F86  0EFF               	movlw	255
  5048   001F88                     l486:
  5049   001F88  0012               	return		;funcret
  5050   001F8A                     __end_of_scan_key:
  5051                           	callstack 0
  5052                           
  5053 ;; *************** function _display_dashboard *****************
  5054 ;; Defined at:
  5055 ;;		line 16 in file "common.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;		None
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;		None
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  1    wreg      void 
  5062 ;; Registers used:
  5063 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5069 ;;      Params:         0       0       0       0       0       0       0
  5070 ;;      Locals:         0       0       0       0       0       0       0
  5071 ;;      Temps:          0       0       0       0       0       0       0
  5072 ;;      Totals:         0       0       0       0       0       0       0
  5073 ;;Total ram usage:        0 bytes
  5074 ;; Hardware stack levels used: 1
  5075 ;; Hardware stack levels required when called: 4
  5076 ;; This function calls:
  5077 ;;		___fldiv
  5078 ;;		___fltol
  5079 ;;		___lwdiv
  5080 ;;		___lwmod
  5081 ;;		___wmul
  5082 ;;		___xxtofl
  5083 ;;		_clcd_print
  5084 ;;		_clcd_putch
  5085 ;;		_read_adc
  5086 ;;		_store_event_in_eeprom
  5087 ;; This function is called by:
  5088 ;;		_main
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           	psect	text16
  5093   00045A                     __ptext16:
  5094                           	callstack 0
  5095   00045A                     _display_dashboard:
  5096                           	callstack 26
  5097   00045A                     
  5098                           ;common.c: 17:     clcd_print(" TIME     EV  SP", (0x80 + (0)));
  5099   00045A  0E07               	movlw	low STR_1
  5100   00045C  6E0C               	movwf	clcd_print@str^0,c
  5101   00045E  0E7F               	movlw	high STR_1
  5102   000460  6E0D               	movwf	(clcd_print@str+1)^0,c
  5103   000462  0E80               	movlw	128
  5104   000464  6E0E               	movwf	clcd_print@addr^0,c
  5105   000466  ECDD  F010         	call	_clcd_print	;wreg free
  5106                           
  5107                           ;common.c: 18:     clcd_print(time, (0xC0 + (0)));
  5108   00046A  0EDA               	movlw	low _time
  5109   00046C  6E0C               	movwf	clcd_print@str^0,c
  5110   00046E  6A0D               	clrf	(clcd_print@str+1)^0,c
  5111   000470  0EC0               	movlw	192
  5112   000472  6E0E               	movwf	clcd_print@addr^0,c
  5113   000474  ECDD  F010         	call	_clcd_print	;wreg free
  5114   000478                     
  5115                           ;common.c: 19:     speed = (read_adc(0x04) / 10.23);
  5116   000478  0E14               	movlw	20
  5117   00047A  6E1A               	movwf	___fldiv@a^0,c
  5118   00047C  0EAE               	movlw	174
  5119   00047E  6E1B               	movwf	(___fldiv@a+1)^0,c
  5120   000480  0E23               	movlw	35
  5121   000482  6E1C               	movwf	(___fldiv@a+2)^0,c
  5122   000484  0E41               	movlw	65
  5123   000486  6E1D               	movwf	(___fldiv@a+3)^0,c
  5124   000488  0E04               	movlw	4
  5125   00048A  EC99  F012         	call	_read_adc
  5126   00048E  C001  F008         	movff	?_read_adc,___xxtofl@val
  5127   000492  C002  F009         	movff	?_read_adc+1,___xxtofl@val+1
  5128   000496  6A0A               	clrf	(___xxtofl@val+2)^0,c
  5129   000498  6A0B               	clrf	(___xxtofl@val+3)^0,c
  5130   00049A  0E00               	movlw	0
  5131   00049C  EC45  F00D         	call	___xxtofl
  5132   0004A0  C008  F016         	movff	?___xxtofl,___fldiv@b
  5133   0004A4  C009  F017         	movff	?___xxtofl+1,___fldiv@b+1
  5134   0004A8  C00A  F018         	movff	?___xxtofl+2,___fldiv@b+2
  5135   0004AC  C00B  F019         	movff	?___xxtofl+3,___fldiv@b+3
  5136   0004B0  ECF0  F005         	call	___fldiv	;wreg free
  5137   0004B4  C016  F02F         	movff	?___fldiv,___fltol@f1
  5138   0004B8  C017  F030         	movff	?___fldiv+1,___fltol@f1+1
  5139   0004BC  C018  F031         	movff	?___fldiv+2,___fltol@f1+2
  5140   0004C0  C019  F032         	movff	?___fldiv+3,___fltol@f1+3
  5141   0004C4  ECC5  F00F         	call	___fltol	;wreg free
  5142   0004C8  C02F  F04B         	movff	?___fltol,_speed@common$F106
  5143   0004CC  C030  F04C         	movff	?___fltol+1,_speed@common$F106+1
  5144   0004D0                     
  5145                           ;common.c: 22:     if (g_index == 1 && speed >= 20) {
  5146   0004D0  0449               	decf	_g_index^0,w,c
  5147   0004D2  104A               	iorwf	(_g_index+1)^0,w,c
  5148   0004D4  A4D8               	btfss	status,2,c
  5149   0004D6  EF6F  F002         	goto	u2901
  5150   0004DA  EF71  F002         	goto	u2900
  5151   0004DE                     u2901:
  5152   0004DE  EF82  F002         	goto	l3401
  5153   0004E2                     u2900:
  5154   0004E2  504C               	movf	(_speed@common$F106+1)^0,w,c
  5155   0004E4  E109               	bnz	u2910
  5156   0004E6  0E14               	movlw	20
  5157   0004E8  5C4B               	subwf	_speed@common$F106^0,w,c
  5158   0004EA  A0D8               	btfss	status,0,c
  5159   0004EC  EF7A  F002         	goto	u2911
  5160   0004F0  EF7C  F002         	goto	u2910
  5161   0004F4                     u2911:
  5162   0004F4  EF82  F002         	goto	l3401
  5163   0004F8                     u2910:
  5164   0004F8                     
  5165                           ;common.c: 23:         speed = 20;
  5166   0004F8  0E00               	movlw	0
  5167   0004FA  6E4C               	movwf	(_speed@common$F106+1)^0,c
  5168   0004FC  0E14               	movlw	20
  5169   0004FE  6E4B               	movwf	_speed@common$F106^0,c
  5170                           
  5171                           ;common.c: 24:     } else if (g_index == 2 || g_index == 0 || g_index == 8) {
  5172   000500  EF2C  F003         	goto	l127
  5173   000504                     l3401:
  5174   000504  0E02               	movlw	2
  5175   000506  1849               	xorwf	_g_index^0,w,c
  5176   000508  104A               	iorwf	(_g_index+1)^0,w,c
  5177   00050A  B4D8               	btfsc	status,2,c
  5178   00050C  EF8A  F002         	goto	u2921
  5179   000510  EF8C  F002         	goto	u2920
  5180   000514                     u2921:
  5181   000514  EF9F  F002         	goto	l3407
  5182   000518                     u2920:
  5183   000518  5049               	movf	_g_index^0,w,c
  5184   00051A  104A               	iorwf	(_g_index+1)^0,w,c
  5185   00051C  B4D8               	btfsc	status,2,c
  5186   00051E  EF93  F002         	goto	u2931
  5187   000522  EF95  F002         	goto	u2930
  5188   000526                     u2931:
  5189   000526  EF9F  F002         	goto	l3407
  5190   00052A                     u2930:
  5191   00052A  0E08               	movlw	8
  5192   00052C  1849               	xorwf	_g_index^0,w,c
  5193   00052E  104A               	iorwf	(_g_index+1)^0,w,c
  5194   000530  A4D8               	btfss	status,2,c
  5195   000532  EF9D  F002         	goto	u2941
  5196   000536  EF9F  F002         	goto	u2940
  5197   00053A                     u2941:
  5198   00053A  EFA5  F002         	goto	l3409
  5199   00053E                     u2940:
  5200   00053E                     l3407:
  5201                           
  5202                           ;common.c: 25:         speed = 0;
  5203   00053E  0E00               	movlw	0
  5204   000540  6E4C               	movwf	(_speed@common$F106+1)^0,c
  5205   000542  0E00               	movlw	0
  5206   000544  6E4B               	movwf	_speed@common$F106^0,c
  5207                           
  5208                           ;common.c: 26:     } else if (g_index == 3 && speed >= 30) {
  5209   000546  EF2C  F003         	goto	l127
  5210   00054A                     l3409:
  5211   00054A  0E03               	movlw	3
  5212   00054C  1849               	xorwf	_g_index^0,w,c
  5213   00054E  104A               	iorwf	(_g_index+1)^0,w,c
  5214   000550  A4D8               	btfss	status,2,c
  5215   000552  EFAD  F002         	goto	u2951
  5216   000556  EFAF  F002         	goto	u2950
  5217   00055A                     u2951:
  5218   00055A  EFC0  F002         	goto	l3415
  5219   00055E                     u2950:
  5220   00055E  504C               	movf	(_speed@common$F106+1)^0,w,c
  5221   000560  E109               	bnz	u2960
  5222   000562  0E1E               	movlw	30
  5223   000564  5C4B               	subwf	_speed@common$F106^0,w,c
  5224   000566  A0D8               	btfss	status,0,c
  5225   000568  EFB8  F002         	goto	u2961
  5226   00056C  EFBA  F002         	goto	u2960
  5227   000570                     u2961:
  5228   000570  EFC0  F002         	goto	l3415
  5229   000574                     u2960:
  5230   000574                     
  5231                           ;common.c: 27:         speed = 30;
  5232   000574  0E00               	movlw	0
  5233   000576  6E4C               	movwf	(_speed@common$F106+1)^0,c
  5234   000578  0E1E               	movlw	30
  5235   00057A  6E4B               	movwf	_speed@common$F106^0,c
  5236                           
  5237                           ;common.c: 28:     } else if (g_index == 4 && speed >= 40) {
  5238   00057C  EF2C  F003         	goto	l127
  5239   000580                     l3415:
  5240   000580  0E04               	movlw	4
  5241   000582  1849               	xorwf	_g_index^0,w,c
  5242   000584  104A               	iorwf	(_g_index+1)^0,w,c
  5243   000586  A4D8               	btfss	status,2,c
  5244   000588  EFC8  F002         	goto	u2971
  5245   00058C  EFCA  F002         	goto	u2970
  5246   000590                     u2971:
  5247   000590  EFDB  F002         	goto	l3421
  5248   000594                     u2970:
  5249   000594  504C               	movf	(_speed@common$F106+1)^0,w,c
  5250   000596  E109               	bnz	u2980
  5251   000598  0E28               	movlw	40
  5252   00059A  5C4B               	subwf	_speed@common$F106^0,w,c
  5253   00059C  A0D8               	btfss	status,0,c
  5254   00059E  EFD3  F002         	goto	u2981
  5255   0005A2  EFD5  F002         	goto	u2980
  5256   0005A6                     u2981:
  5257   0005A6  EFDB  F002         	goto	l3421
  5258   0005AA                     u2980:
  5259   0005AA                     
  5260                           ;common.c: 29:         speed = 40;
  5261   0005AA  0E00               	movlw	0
  5262   0005AC  6E4C               	movwf	(_speed@common$F106+1)^0,c
  5263   0005AE  0E28               	movlw	40
  5264   0005B0  6E4B               	movwf	_speed@common$F106^0,c
  5265                           
  5266                           ;common.c: 30:     } else if (g_index == 5 && speed >= 60) {
  5267   0005B2  EF2C  F003         	goto	l127
  5268   0005B6                     l3421:
  5269   0005B6  0E05               	movlw	5
  5270   0005B8  1849               	xorwf	_g_index^0,w,c
  5271   0005BA  104A               	iorwf	(_g_index+1)^0,w,c
  5272   0005BC  A4D8               	btfss	status,2,c
  5273   0005BE  EFE3  F002         	goto	u2991
  5274   0005C2  EFE5  F002         	goto	u2990
  5275   0005C6                     u2991:
  5276   0005C6  EFF6  F002         	goto	l3427
  5277   0005CA                     u2990:
  5278   0005CA  504C               	movf	(_speed@common$F106+1)^0,w,c
  5279   0005CC  E109               	bnz	u3000
  5280   0005CE  0E3C               	movlw	60
  5281   0005D0  5C4B               	subwf	_speed@common$F106^0,w,c
  5282   0005D2  A0D8               	btfss	status,0,c
  5283   0005D4  EFEE  F002         	goto	u3001
  5284   0005D8  EFF0  F002         	goto	u3000
  5285   0005DC                     u3001:
  5286   0005DC  EFF6  F002         	goto	l3427
  5287   0005E0                     u3000:
  5288   0005E0                     
  5289                           ;common.c: 31:         speed = 60;
  5290   0005E0  0E00               	movlw	0
  5291   0005E2  6E4C               	movwf	(_speed@common$F106+1)^0,c
  5292   0005E4  0E3C               	movlw	60
  5293   0005E6  6E4B               	movwf	_speed@common$F106^0,c
  5294                           
  5295                           ;common.c: 32:     } else if (g_index == 6 && speed >= 80) {
  5296   0005E8  EF2C  F003         	goto	l127
  5297   0005EC                     l3427:
  5298   0005EC  0E06               	movlw	6
  5299   0005EE  1849               	xorwf	_g_index^0,w,c
  5300   0005F0  104A               	iorwf	(_g_index+1)^0,w,c
  5301   0005F2  A4D8               	btfss	status,2,c
  5302   0005F4  EFFE  F002         	goto	u3011
  5303   0005F8  EF00  F003         	goto	u3010
  5304   0005FC                     u3011:
  5305   0005FC  EF11  F003         	goto	l3433
  5306   000600                     u3010:
  5307   000600  504C               	movf	(_speed@common$F106+1)^0,w,c
  5308   000602  E109               	bnz	u3020
  5309   000604  0E50               	movlw	80
  5310   000606  5C4B               	subwf	_speed@common$F106^0,w,c
  5311   000608  A0D8               	btfss	status,0,c
  5312   00060A  EF09  F003         	goto	u3021
  5313   00060E  EF0B  F003         	goto	u3020
  5314   000612                     u3021:
  5315   000612  EF11  F003         	goto	l3433
  5316   000616                     u3020:
  5317   000616                     
  5318                           ;common.c: 33:         speed = 80;
  5319   000616  0E00               	movlw	0
  5320   000618  6E4C               	movwf	(_speed@common$F106+1)^0,c
  5321   00061A  0E50               	movlw	80
  5322   00061C  6E4B               	movwf	_speed@common$F106^0,c
  5323                           
  5324                           ;common.c: 34:     } else if (g_index == 7 && speed >= 99) {
  5325   00061E  EF2C  F003         	goto	l127
  5326   000622                     l3433:
  5327   000622  0E07               	movlw	7
  5328   000624  1849               	xorwf	_g_index^0,w,c
  5329   000626  104A               	iorwf	(_g_index+1)^0,w,c
  5330   000628  A4D8               	btfss	status,2,c
  5331   00062A  EF19  F003         	goto	u3031
  5332   00062E  EF1B  F003         	goto	u3030
  5333   000632                     u3031:
  5334   000632  EF2C  F003         	goto	l135
  5335   000636                     u3030:
  5336   000636  504C               	movf	(_speed@common$F106+1)^0,w,c
  5337   000638  E109               	bnz	u3040
  5338   00063A  0E63               	movlw	99
  5339   00063C  5C4B               	subwf	_speed@common$F106^0,w,c
  5340   00063E  A0D8               	btfss	status,0,c
  5341   000640  EF24  F003         	goto	u3041
  5342   000644  EF26  F003         	goto	u3040
  5343   000648                     u3041:
  5344   000648  EF2C  F003         	goto	l135
  5345   00064C                     u3040:
  5346   00064C                     
  5347                           ;common.c: 35:         speed = 99;
  5348   00064C  0E00               	movlw	0
  5349   00064E  6E4C               	movwf	(_speed@common$F106+1)^0,c
  5350   000650  0E63               	movlw	99
  5351   000652  6E4B               	movwf	_speed@common$F106^0,c
  5352   000654  EF2C  F003         	goto	l127
  5353   000658                     l135:
  5354   000658                     l127:
  5355                           
  5356                           ;common.c: 37:     if (ee) {
  5357   000658  0100               	movlb	0	; () banked
  5358   00065A  51B1               	movf	_ee& (0+255),w,b
  5359   00065C  B4D8               	btfsc	status,2,c
  5360   00065E  EF33  F003         	goto	u3051
  5361   000662  EF35  F003         	goto	u3050
  5362   000666                     u3051:
  5363   000666  EF39  F003         	goto	l3443
  5364   00066A                     u3050:
  5365   00066A                     
  5366                           ; BSR set to: 0
  5367                           ;common.c: 38:         ee = 0;
  5368   00066A  0E00               	movlw	0
  5369   00066C  6FB1               	movwf	_ee& (0+255),b
  5370   00066E                     
  5371                           ; BSR set to: 0
  5372                           ;common.c: 39:         store_event_in_eeprom();
  5373   00066E  ECB6  F00E         	call	_store_event_in_eeprom	;wreg free
  5374   000672                     l3443:
  5375                           
  5376                           ;common.c: 42:     if (key == 1) {
  5377   000672  0453               	decf	_key^0,w,c
  5378   000674  A4D8               	btfss	status,2,c
  5379   000676  EF3F  F003         	goto	u3061
  5380   00067A  EF41  F003         	goto	u3060
  5381   00067E                     u3061:
  5382   00067E  EF50  F003         	goto	l3447
  5383   000682                     u3060:
  5384   000682                     
  5385                           ;common.c: 43:         g_index = 8;
  5386   000682  0E00               	movlw	0
  5387   000684  6E4A               	movwf	(_g_index+1)^0,c
  5388   000686  0E08               	movlw	8
  5389   000688  6E49               	movwf	_g_index^0,c
  5390                           
  5391                           ;common.c: 44:         speed = 0;
  5392   00068A  0E00               	movlw	0
  5393   00068C  6E4C               	movwf	(_speed@common$F106+1)^0,c
  5394   00068E  0E00               	movlw	0
  5395   000690  6E4B               	movwf	_speed@common$F106^0,c
  5396                           
  5397                           ;common.c: 45:         ee = 1;
  5398   000692  0E01               	movlw	1
  5399   000694  0100               	movlb	0	; () banked
  5400   000696  6FB1               	movwf	_ee& (0+255),b
  5401                           
  5402                           ;common.c: 46:         EF = 0;
  5403   000698  0E00               	movlw	0
  5404   00069A  6FB0               	movwf	_EF& (0+255),b
  5405                           
  5406                           ;common.c: 47:     } else if (key == 2 && g_index <= 6 || key == 2 && g_index == 8) {
  5407   00069C  EFC8  F003         	goto	l3483
  5408   0006A0                     l3447:
  5409   0006A0  0E02               	movlw	2
  5410   0006A2  1853               	xorwf	_key^0,w,c
  5411   0006A4  A4D8               	btfss	status,2,c
  5412   0006A6  EF57  F003         	goto	u3071
  5413   0006AA  EF59  F003         	goto	u3070
  5414   0006AE                     u3071:
  5415   0006AE  EF64  F003         	goto	l3451
  5416   0006B2                     u3070:
  5417   0006B2  504A               	movf	(_g_index+1)^0,w,c
  5418   0006B4  E109               	bnz	u3080
  5419   0006B6  0E07               	movlw	7
  5420   0006B8  5C49               	subwf	_g_index^0,w,c
  5421   0006BA  A0D8               	btfss	status,0,c
  5422   0006BC  EF62  F003         	goto	u3081
  5423   0006C0  EF64  F003         	goto	u3080
  5424   0006C4                     u3081:
  5425   0006C4  EF77  F003         	goto	l3455
  5426   0006C8                     u3080:
  5427   0006C8                     l3451:
  5428   0006C8  0E02               	movlw	2
  5429   0006CA  1853               	xorwf	_key^0,w,c
  5430   0006CC  A4D8               	btfss	status,2,c
  5431   0006CE  EF6B  F003         	goto	u3091
  5432   0006D2  EF6D  F003         	goto	u3090
  5433   0006D6                     u3091:
  5434   0006D6  EF90  F003         	goto	l3465
  5435   0006DA                     u3090:
  5436   0006DA  0E08               	movlw	8
  5437   0006DC  1849               	xorwf	_g_index^0,w,c
  5438   0006DE  104A               	iorwf	(_g_index+1)^0,w,c
  5439   0006E0  A4D8               	btfss	status,2,c
  5440   0006E2  EF75  F003         	goto	u3101
  5441   0006E6  EF77  F003         	goto	u3100
  5442   0006EA                     u3101:
  5443   0006EA  EF90  F003         	goto	l3465
  5444   0006EE                     u3100:
  5445   0006EE                     l3455:
  5446                           
  5447                           ;common.c: 49:         (g_index == 8) ? (g_index = 2) : (g_index++);
  5448   0006EE  0E08               	movlw	8
  5449   0006F0  1849               	xorwf	_g_index^0,w,c
  5450   0006F2  104A               	iorwf	(_g_index+1)^0,w,c
  5451   0006F4  A4D8               	btfss	status,2,c
  5452   0006F6  EF7F  F003         	goto	u3111
  5453   0006FA  EF81  F003         	goto	u3110
  5454   0006FE                     u3111:
  5455   0006FE  EF87  F003         	goto	l3459
  5456   000702                     u3110:
  5457   000702                     l3457:
  5458   000702  0E00               	movlw	0
  5459   000704  6E4A               	movwf	(_g_index+1)^0,c
  5460   000706  0E02               	movlw	2
  5461   000708  6E49               	movwf	_g_index^0,c
  5462   00070A  EF89  F003         	goto	l3461
  5463   00070E                     l3459:
  5464   00070E  4A49               	infsnz	_g_index^0,f,c
  5465   000710  2A4A               	incf	(_g_index+1)^0,f,c
  5466   000712                     l3461:
  5467                           
  5468                           ;common.c: 50:         ee = 1;
  5469   000712  0E01               	movlw	1
  5470   000714  0100               	movlb	0	; () banked
  5471   000716  6FB1               	movwf	_ee& (0+255),b
  5472   000718                     
  5473                           ; BSR set to: 0
  5474                           ;common.c: 51:         EF = 0;
  5475   000718  0E00               	movlw	0
  5476   00071A  6FB0               	movwf	_EF& (0+255),b
  5477                           
  5478                           ;common.c: 52:     } else if (key == 3 && g_index > 1 || key == 3 && g_index == 8) {
  5479   00071C  EFC8  F003         	goto	l3483
  5480   000720                     l3465:
  5481   000720  0E03               	movlw	3
  5482   000722  1853               	xorwf	_key^0,w,c
  5483   000724  A4D8               	btfss	status,2,c
  5484   000726  EF97  F003         	goto	u3121
  5485   00072A  EF99  F003         	goto	u3120
  5486   00072E                     u3121:
  5487   00072E  EFA4  F003         	goto	l3469
  5488   000732                     u3120:
  5489   000732  504A               	movf	(_g_index+1)^0,w,c
  5490   000734  E107               	bnz	u3131
  5491   000736  0E02               	movlw	2
  5492   000738  5C49               	subwf	_g_index^0,w,c
  5493   00073A  B0D8               	btfsc	status,0,c
  5494   00073C  EFA2  F003         	goto	u3131
  5495   000740  EFA4  F003         	goto	u3130
  5496   000744                     u3131:
  5497   000744  EFB7  F003         	goto	l3473
  5498   000748                     u3130:
  5499   000748                     l3469:
  5500   000748  0E03               	movlw	3
  5501   00074A  1853               	xorwf	_key^0,w,c
  5502   00074C  A4D8               	btfss	status,2,c
  5503   00074E  EFAB  F003         	goto	u3141
  5504   000752  EFAD  F003         	goto	u3140
  5505   000756                     u3141:
  5506   000756  EFC8  F003         	goto	l3483
  5507   00075A                     u3140:
  5508   00075A  0E08               	movlw	8
  5509   00075C  1849               	xorwf	_g_index^0,w,c
  5510   00075E  104A               	iorwf	(_g_index+1)^0,w,c
  5511   000760  A4D8               	btfss	status,2,c
  5512   000762  EFB5  F003         	goto	u3151
  5513   000766  EFB7  F003         	goto	u3150
  5514   00076A                     u3151:
  5515   00076A  EFC8  F003         	goto	l3483
  5516   00076E                     u3150:
  5517   00076E                     l3473:
  5518                           
  5519                           ;common.c: 54:         (g_index == 8) ? (g_index = 2) : (g_index--);
  5520   00076E  0E08               	movlw	8
  5521   000770  1849               	xorwf	_g_index^0,w,c
  5522   000772  104A               	iorwf	(_g_index+1)^0,w,c
  5523   000774  A4D8               	btfss	status,2,c
  5524   000776  EFBF  F003         	goto	u3161
  5525   00077A  EFC1  F003         	goto	u3160
  5526   00077E                     u3161:
  5527   00077E  EFC3  F003         	goto	l3477
  5528   000782                     u3160:
  5529   000782  EF81  F003         	goto	l3457
  5530   000786                     l3477:
  5531   000786  0649               	decf	_g_index^0,f,c
  5532   000788  A0D8               	btfss	status,0,c
  5533   00078A  064A               	decf	(_g_index+1)^0,f,c
  5534   00078C  EF89  F003         	goto	l3461
  5535   000790                     l3483:
  5536                           
  5537                           ;common.c: 58:     if (!EF) {
  5538   000790  0100               	movlb	0	; () banked
  5539   000792  51B0               	movf	_EF& (0+255),w,b
  5540   000794  A4D8               	btfss	status,2,c
  5541   000796  EFCF  F003         	goto	u3171
  5542   00079A  EFD1  F003         	goto	u3170
  5543   00079E                     u3171:
  5544   00079E  EF07  F004         	goto	l3491
  5545   0007A2                     u3170:
  5546   0007A2                     
  5547                           ; BSR set to: 0
  5548                           ;common.c: 59:         clcd_print(gear[g_index], (0xC0 + (10)));
  5549   0007A2  C049  F001         	movff	_g_index,___wmul@multiplier
  5550   0007A6  C04A  F002         	movff	_g_index+1,___wmul@multiplier+1
  5551   0007AA  0E00               	movlw	0
  5552   0007AC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5553   0007AE  0E03               	movlw	3
  5554   0007B0  6E03               	movwf	___wmul@multiplicand^0,c
  5555   0007B2  EC28  F013         	call	___wmul	;wreg free
  5556   0007B6  0E78               	movlw	low _gear
  5557   0007B8  2401               	addwf	?___wmul^0,w,c
  5558   0007BA  6E0C               	movwf	clcd_print@str^0,c
  5559   0007BC  0E01               	movlw	high _gear
  5560   0007BE  2002               	addwfc	(?___wmul+1)^0,w,c
  5561   0007C0  6E0D               	movwf	(clcd_print@str+1)^0,c
  5562   0007C2  0ECA               	movlw	202
  5563   0007C4  6E0E               	movwf	clcd_print@addr^0,c
  5564   0007C6  ECDD  F010         	call	_clcd_print	;wreg free
  5565   0007CA                     
  5566                           ;common.c: 60:         clcd_putch((speed / 10) + '0', (0xC0 + (14)));
  5567   0007CA  0ECE               	movlw	206
  5568   0007CC  6E08               	movwf	clcd_putch@addr^0,c
  5569   0007CE  C04B  F001         	movff	_speed@common$F106,___lwdiv@dividend
  5570   0007D2  C04C  F002         	movff	_speed@common$F106+1,___lwdiv@dividend+1
  5571   0007D6  0E00               	movlw	0
  5572   0007D8  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  5573   0007DA  0E0A               	movlw	10
  5574   0007DC  6E03               	movwf	___lwdiv@divisor^0,c
  5575   0007DE  ECDA  F011         	call	___lwdiv	;wreg free
  5576   0007E2  5001               	movf	?___lwdiv^0,w,c
  5577   0007E4  0F30               	addlw	48
  5578   0007E6  ECDB  F012         	call	_clcd_putch
  5579   0007EA                     
  5580                           ;common.c: 61:         clcd_putch((speed % 10) + '0', (0xC0 + (15)));
  5581   0007EA  0ECF               	movlw	207
  5582   0007EC  6E08               	movwf	clcd_putch@addr^0,c
  5583   0007EE  C04B  F001         	movff	_speed@common$F106,___lwmod@dividend
  5584   0007F2  C04C  F002         	movff	_speed@common$F106+1,___lwmod@dividend+1
  5585   0007F6  0E00               	movlw	0
  5586   0007F8  6E04               	movwf	(___lwmod@divisor+1)^0,c
  5587   0007FA  0E0A               	movlw	10
  5588   0007FC  6E03               	movwf	___lwmod@divisor^0,c
  5589   0007FE  EC14  F012         	call	___lwmod	;wreg free
  5590   000802  5001               	movf	?___lwmod^0,w,c
  5591   000804  0F30               	addlw	48
  5592   000806  ECDB  F012         	call	_clcd_putch
  5593                           
  5594                           ;common.c: 62:     } else {
  5595   00080A  EF1D  F004         	goto	l165
  5596   00080E                     l3491:
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;common.c: 63:         clcd_print(gear[EI], (0xC0 + (10)));
  5600   00080E  51AF               	movf	_EI& (0+255),w,b
  5601   000810  0D03               	mullw	3
  5602   000812  0E78               	movlw	low _gear
  5603   000814  24F3               	addwf	243,w,c
  5604   000816  6E0C               	movwf	clcd_print@str^0,c
  5605   000818  0E01               	movlw	high _gear
  5606   00081A  20F4               	addwfc	prodh,w,c
  5607   00081C  6E0D               	movwf	(clcd_print@str+1)^0,c
  5608   00081E  0ECA               	movlw	202
  5609   000820  6E0E               	movwf	clcd_print@addr^0,c
  5610   000822  ECDD  F010         	call	_clcd_print	;wreg free
  5611   000826                     
  5612                           ;common.c: 64:         clcd_putch('0', (0xC0 + (14)));
  5613   000826  0ECE               	movlw	206
  5614   000828  6E08               	movwf	clcd_putch@addr^0,c
  5615   00082A  0E30               	movlw	48
  5616   00082C  ECDB  F012         	call	_clcd_putch
  5617   000830                     
  5618                           ;common.c: 65:         clcd_putch('0', (0xC0 + (15)));
  5619   000830  0ECF               	movlw	207
  5620   000832  6E08               	movwf	clcd_putch@addr^0,c
  5621   000834  0E30               	movlw	48
  5622   000836  ECDB  F012         	call	_clcd_putch
  5623   00083A                     l165:
  5624   00083A  0012               	return		;funcret
  5625   00083C                     __end_of_display_dashboard:
  5626                           	callstack 0
  5627                           
  5628 ;; *************** function _store_event_in_eeprom *****************
  5629 ;; Defined at:
  5630 ;;		line 627 in file "common.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;		None
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  i               2   15[COMRAM] unsigned int 
  5635 ;;  i               2   19[COMRAM] unsigned int 
  5636 ;;  i               2   17[COMRAM] unsigned int 
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      void 
  5639 ;; Registers used:
  5640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5646 ;;      Params:         0       0       0       0       0       0       0
  5647 ;;      Locals:         6       0       0       0       0       0       0
  5648 ;;      Temps:          2       0       0       0       0       0       0
  5649 ;;      Totals:         8       0       0       0       0       0       0
  5650 ;;Total ram usage:        8 bytes
  5651 ;; Hardware stack levels used: 1
  5652 ;; Hardware stack levels required when called: 3
  5653 ;; This function calls:
  5654 ;;		___wmul
  5655 ;;		_over_write
  5656 ;;		_write_internal_eeprom
  5657 ;; This function is called by:
  5658 ;;		_display_dashboard
  5659 ;;		_main
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text17
  5664   001D6C                     __ptext17:
  5665                           	callstack 0
  5666   001D6C                     _store_event_in_eeprom:
  5667                           	callstack 27
  5668   001D6C                     
  5669                           ;common.c: 629:     if (++no_of_event > 9) {
  5670   001D6C  4A54               	infsnz	_no_of_event^0,f,c
  5671   001D6E  2A55               	incf	(_no_of_event+1)^0,f,c
  5672   001D70  5055               	movf	(_no_of_event+1)^0,w,c
  5673   001D72  E109               	bnz	u2320
  5674   001D74  0E0A               	movlw	10
  5675   001D76  5C54               	subwf	_no_of_event^0,w,c
  5676   001D78  A0D8               	btfss	status,0,c
  5677   001D7A  EFC1  F00E         	goto	u2321
  5678   001D7E  EFC3  F00E         	goto	u2320
  5679   001D82                     u2321:
  5680   001D82  EFEB  F00E         	goto	l3035
  5681   001D86                     u2320:
  5682   001D86                     
  5683                           ;common.c: 632:         for (unsigned int i = 0x0B; i < 0x62; i += 0x0B) {
  5684   001D86  0E00               	movlw	0
  5685   001D88  6E11               	movwf	(store_event_in_eeprom@i+1)^0,c
  5686   001D8A  0E0B               	movlw	11
  5687   001D8C  6E10               	movwf	store_event_in_eeprom@i^0,c
  5688   001D8E                     l3025:
  5689                           
  5690                           ;common.c: 634:             over_write(i);
  5691   001D8E  C010  F009         	movff	store_event_in_eeprom@i,over_write@i
  5692   001D92  C011  F00A         	movff	store_event_in_eeprom@i+1,over_write@i+1
  5693   001D96  EC75  F012         	call	_over_write	;wreg free
  5694   001D9A                     
  5695                           ;common.c: 635:         }
  5696   001D9A  0E0B               	movlw	11
  5697   001D9C  2610               	addwf	store_event_in_eeprom@i^0,f,c
  5698   001D9E  0E00               	movlw	0
  5699   001DA0  2211               	addwfc	(store_event_in_eeprom@i+1)^0,f,c
  5700   001DA2  5011               	movf	(store_event_in_eeprom@i+1)^0,w,c
  5701   001DA4  E109               	bnz	u2330
  5702   001DA6  0E62               	movlw	98
  5703   001DA8  5C10               	subwf	store_event_in_eeprom@i^0,w,c
  5704   001DAA  A0D8               	btfss	status,0,c
  5705   001DAC  EFDA  F00E         	goto	u2331
  5706   001DB0  EFDC  F00E         	goto	u2330
  5707   001DB4                     u2331:
  5708   001DB4  EFC7  F00E         	goto	l3025
  5709   001DB8                     u2330:
  5710   001DB8                     
  5711                           ;common.c: 637:         store_add = 0x58;
  5712   001DB8  0E00               	movlw	0
  5713   001DBA  0100               	movlb	0	; () banked
  5714   001DBC  6F9F               	movwf	(_store_add+1)& (0+255),b
  5715   001DBE  0E58               	movlw	88
  5716   001DC0  6F9E               	movwf	_store_add& (0+255),b
  5717                           
  5718                           ;common.c: 638:         add = 0x00;
  5719   001DC2  0E00               	movlw	0
  5720   001DC4  6F93               	movwf	(_add+1)& (0+255),b
  5721   001DC6  0E00               	movlw	0
  5722   001DC8  6F92               	movwf	_add& (0+255),b
  5723   001DCA                     
  5724                           ; BSR set to: 0
  5725                           ;common.c: 639:         no_of_event = no_of_event - 1;
  5726   001DCA  0EFF               	movlw	255
  5727   001DCC  2454               	addwf	_no_of_event^0,w,c
  5728   001DCE  6E54               	movwf	_no_of_event^0,c
  5729   001DD0  0EFF               	movlw	255
  5730   001DD2  2055               	addwfc	(_no_of_event+1)^0,w,c
  5731   001DD4  6E55               	movwf	(_no_of_event+1)^0,c
  5732   001DD6                     l3035:
  5733                           
  5734                           ;common.c: 643:     for (unsigned int i = 0; i < 8; i++) {
  5735   001DD6  0E00               	movlw	0
  5736   001DD8  6E13               	movwf	(store_event_in_eeprom@i_208+1)^0,c
  5737   001DDA  0E00               	movlw	0
  5738   001DDC  6E12               	movwf	store_event_in_eeprom@i_208^0,c
  5739   001DDE                     l3039:
  5740                           
  5741                           ;common.c: 644:         write_internal_eeprom(store_add, time[i]);
  5742   001DDE  5012               	movf	store_event_in_eeprom@i_208^0,w,c
  5743   001DE0  0FDA               	addlw	low _time
  5744   001DE2  6ED9               	movwf	fsr2l,c
  5745   001DE4  6ADA               	clrf	fsr2h,c
  5746   001DE6  50DF               	movf	indf2,w,c
  5747   001DE8  6E07               	movwf	write_internal_eeprom@data^0,c
  5748   001DEA  0100               	movlb	0	; () banked
  5749   001DEC  519E               	movf	_store_add& (0+255),w,b
  5750   001DEE  EC10  F013         	call	_write_internal_eeprom
  5751   001DF2                     
  5752                           ;common.c: 645:         ++store_add;
  5753   001DF2  0100               	movlb	0	; () banked
  5754   001DF4  4B9E               	infsnz	_store_add& (0+255),f,b
  5755   001DF6  2B9F               	incf	(_store_add+1)& (0+255),f,b
  5756   001DF8                     
  5757                           ; BSR set to: 0
  5758                           ;common.c: 646:     }
  5759   001DF8  4A12               	infsnz	store_event_in_eeprom@i_208^0,f,c
  5760   001DFA  2A13               	incf	(store_event_in_eeprom@i_208+1)^0,f,c
  5761   001DFC                     
  5762                           ; BSR set to: 0
  5763   001DFC  5013               	movf	(store_event_in_eeprom@i_208+1)^0,w,c
  5764   001DFE  E109               	bnz	u2340
  5765   001E00  0E08               	movlw	8
  5766   001E02  5C12               	subwf	store_event_in_eeprom@i_208^0,w,c
  5767   001E04  A0D8               	btfss	status,0,c
  5768   001E06  EF07  F00F         	goto	u2341
  5769   001E0A  EF09  F00F         	goto	u2340
  5770   001E0E                     u2341:
  5771   001E0E  EFEF  F00E         	goto	l3039
  5772   001E12                     u2340:
  5773   001E12                     
  5774                           ; BSR set to: 0
  5775                           ;common.c: 649:     for (unsigned int i = 0; i < 2; i++) {
  5776   001E12  0E00               	movlw	0
  5777   001E14  6E15               	movwf	(store_event_in_eeprom@i_209+1)^0,c
  5778   001E16  0E00               	movlw	0
  5779   001E18  6E14               	movwf	store_event_in_eeprom@i_209^0,c
  5780   001E1A                     l3053:
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;common.c: 650:         write_internal_eeprom(store_add, gear[g_index][i]);
  5784   001E1A  C049  F001         	movff	_g_index,___wmul@multiplier
  5785   001E1E  C04A  F002         	movff	_g_index+1,___wmul@multiplier+1
  5786   001E22  0E00               	movlw	0
  5787   001E24  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5788   001E26  0E03               	movlw	3
  5789   001E28  6E03               	movwf	___wmul@multiplicand^0,c
  5790   001E2A  EC28  F013         	call	___wmul	;wreg free
  5791   001E2E  0E78               	movlw	low _gear
  5792   001E30  2401               	addwf	?___wmul^0,w,c
  5793   001E32  6E0E               	movwf	??_store_event_in_eeprom^0,c
  5794   001E34  0E01               	movlw	high _gear
  5795   001E36  2002               	addwfc	(?___wmul+1)^0,w,c
  5796   001E38  6E0F               	movwf	(??_store_event_in_eeprom+1)^0,c
  5797   001E3A  5014               	movf	store_event_in_eeprom@i_209^0,w,c
  5798   001E3C  240E               	addwf	??_store_event_in_eeprom^0,w,c
  5799   001E3E  6ED9               	movwf	fsr2l,c
  5800   001E40  5015               	movf	(store_event_in_eeprom@i_209+1)^0,w,c
  5801   001E42  200F               	addwfc	(??_store_event_in_eeprom+1)^0,w,c
  5802   001E44  6EDA               	movwf	fsr2h,c
  5803   001E46  50DF               	movf	indf2,w,c
  5804   001E48  6E07               	movwf	write_internal_eeprom@data^0,c
  5805   001E4A  0100               	movlb	0	; () banked
  5806   001E4C  519E               	movf	_store_add& (0+255),w,b
  5807   001E4E  EC10  F013         	call	_write_internal_eeprom
  5808   001E52                     
  5809                           ;common.c: 651:         ++store_add;
  5810   001E52  0100               	movlb	0	; () banked
  5811   001E54  4B9E               	infsnz	_store_add& (0+255),f,b
  5812   001E56  2B9F               	incf	(_store_add+1)& (0+255),f,b
  5813   001E58                     
  5814                           ; BSR set to: 0
  5815                           ;common.c: 652:     }
  5816   001E58  4A14               	infsnz	store_event_in_eeprom@i_209^0,f,c
  5817   001E5A  2A15               	incf	(store_event_in_eeprom@i_209+1)^0,f,c
  5818   001E5C                     
  5819                           ; BSR set to: 0
  5820   001E5C  5015               	movf	(store_event_in_eeprom@i_209+1)^0,w,c
  5821   001E5E  E109               	bnz	u2350
  5822   001E60  0E02               	movlw	2
  5823   001E62  5C14               	subwf	store_event_in_eeprom@i_209^0,w,c
  5824   001E64  A0D8               	btfss	status,0,c
  5825   001E66  EF37  F00F         	goto	u2351
  5826   001E6A  EF39  F00F         	goto	u2350
  5827   001E6E                     u2351:
  5828   001E6E  EF0D  F00F         	goto	l3053
  5829   001E72                     u2350:
  5830   001E72                     
  5831                           ; BSR set to: 0
  5832                           ;common.c: 655:     write_internal_eeprom(store_add, speed);
  5833   001E72  C04B  F007         	movff	_speed@common$F106,write_internal_eeprom@data
  5834   001E76  519E               	movf	_store_add& (0+255),w,b
  5835   001E78  EC10  F013         	call	_write_internal_eeprom
  5836   001E7C                     
  5837                           ;common.c: 656:     ++store_add;
  5838   001E7C  0100               	movlb	0	; () banked
  5839   001E7E  4B9E               	infsnz	_store_add& (0+255),f,b
  5840   001E80  2B9F               	incf	(_store_add+1)& (0+255),f,b
  5841   001E82                     
  5842                           ; BSR set to: 0
  5843   001E82  0012               	return		;funcret
  5844   001E84                     __end_of_store_event_in_eeprom:
  5845                           	callstack 0
  5846                           
  5847 ;; *************** function _over_write *****************
  5848 ;; Defined at:
  5849 ;;		line 615 in file "common.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  i               2    8[COMRAM] unsigned int 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  j               2   11[COMRAM] int 
  5854 ;;  ch              1   10[COMRAM] unsigned char 
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  1    wreg      void 
  5857 ;; Registers used:
  5858 ;;		wreg, status,2, status,0, cstack
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5864 ;;      Params:         2       0       0       0       0       0       0
  5865 ;;      Locals:         3       0       0       0       0       0       0
  5866 ;;      Temps:          0       0       0       0       0       0       0
  5867 ;;      Totals:         5       0       0       0       0       0       0
  5868 ;;Total ram usage:        5 bytes
  5869 ;; Hardware stack levels used: 1
  5870 ;; Hardware stack levels required when called: 2
  5871 ;; This function calls:
  5872 ;;		_read_internal_eeprom
  5873 ;;		_write_internal_eeprom
  5874 ;; This function is called by:
  5875 ;;		_store_event_in_eeprom
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           	psect	text18
  5880   0024EA                     __ptext18:
  5881                           	callstack 0
  5882   0024EA                     _over_write:
  5883                           	callstack 27
  5884   0024EA                     
  5885                           ;common.c: 616:     unsigned char ch;;common.c: 618:     for (int j = 0; j < 11; j++) {
  5886   0024EA  0E00               	movlw	0
  5887   0024EC  6E0D               	movwf	(over_write@j+1)^0,c
  5888   0024EE  0E00               	movlw	0
  5889   0024F0  6E0C               	movwf	over_write@j^0,c
  5890   0024F2                     l2919:
  5891                           
  5892                           ;common.c: 619:         ch = read_internal_eeprom(i);
  5893   0024F2  5009               	movf	over_write@i^0,w,c
  5894   0024F4  EC8D  F013         	call	_read_internal_eeprom
  5895   0024F8  6E0B               	movwf	over_write@ch^0,c
  5896                           
  5897                           ;common.c: 620:         write_internal_eeprom(add, ch);
  5898   0024FA  C00B  F007         	movff	over_write@ch,write_internal_eeprom@data
  5899   0024FE  0100               	movlb	0	; () banked
  5900   002500  5192               	movf	_add& (0+255),w,b
  5901   002502  EC10  F013         	call	_write_internal_eeprom
  5902   002506                     
  5903                           ;common.c: 621:         add++;
  5904   002506  0100               	movlb	0	; () banked
  5905   002508  4B92               	infsnz	_add& (0+255),f,b
  5906   00250A  2B93               	incf	(_add+1)& (0+255),f,b
  5907   00250C                     
  5908                           ; BSR set to: 0
  5909                           ;common.c: 622:         i++;
  5910   00250C  4A09               	infsnz	over_write@i^0,f,c
  5911   00250E  2A0A               	incf	(over_write@i+1)^0,f,c
  5912   002510                     
  5913                           ; BSR set to: 0
  5914                           ;common.c: 623:     }
  5915   002510  4A0C               	infsnz	over_write@j^0,f,c
  5916   002512  2A0D               	incf	(over_write@j+1)^0,f,c
  5917   002514                     
  5918                           ; BSR set to: 0
  5919   002514  BE0D               	btfsc	(over_write@j+1)^0,7,c
  5920   002516  EF96  F012         	goto	u2151
  5921   00251A  500D               	movf	(over_write@j+1)^0,w,c
  5922   00251C  E109               	bnz	u2150
  5923   00251E  0E0B               	movlw	11
  5924   002520  5C0C               	subwf	over_write@j^0,w,c
  5925   002522  A0D8               	btfss	status,0,c
  5926   002524  EF96  F012         	goto	u2151
  5927   002528  EF98  F012         	goto	u2150
  5928   00252C                     u2151:
  5929   00252C  EF79  F012         	goto	l2919
  5930   002530                     u2150:
  5931   002530                     
  5932                           ; BSR set to: 0
  5933   002530  0012               	return		;funcret
  5934   002532                     __end_of_over_write:
  5935                           	callstack 0
  5936                           
  5937 ;; *************** function _read_internal_eeprom *****************
  5938 ;; Defined at:
  5939 ;;		line 41 in file "eeprom.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;  address         1    wreg     unsigned char 
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;  address         1    0[COMRAM] unsigned char 
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  1    wreg      unsigned char 
  5946 ;; Registers used:
  5947 ;;		wreg, status,2
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5953 ;;      Params:         0       0       0       0       0       0       0
  5954 ;;      Locals:         1       0       0       0       0       0       0
  5955 ;;      Temps:          0       0       0       0       0       0       0
  5956 ;;      Totals:         1       0       0       0       0       0       0
  5957 ;;Total ram usage:        1 bytes
  5958 ;; Hardware stack levels used: 1
  5959 ;; Hardware stack levels required when called: 1
  5960 ;; This function calls:
  5961 ;;		Nothing
  5962 ;; This function is called by:
  5963 ;;		_password_screen
  5964 ;;		_view_log
  5965 ;;		_download_log
  5966 ;;		_over_write
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           
  5970                           	psect	text19
  5971   00271A                     __ptext19:
  5972                           	callstack 0
  5973   00271A                     _read_internal_eeprom:
  5974                           	callstack 28
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;incstack = 0
  5978                           ;read_internal_eeprom@address stored from wreg
  5979   00271A  6E01               	movwf	read_internal_eeprom@address^0,c
  5980   00271C                     
  5981                           ;eeprom.c: 41: unsigned char read_internal_eeprom(unsigned char address);eeprom.c: 42: {
      +                          ;eeprom.c: 44:  EEADR = address;
  5982   00271C  C001  FFA9         	movff	read_internal_eeprom@address,4009	;volatile
  5983   002720                     
  5984                           ;eeprom.c: 47:  EECON1bits.WREN = 0;
  5985   002720  94A6               	bcf	166,2,c	;volsfr
  5986   002722                     
  5987                           ;eeprom.c: 50:  EECON1bits.EEPGD = 0;
  5988   002722  9EA6               	bcf	166,7,c	;volsfr
  5989   002724                     
  5990                           ;eeprom.c: 53:  EECON1bits.CFGS = 0;
  5991   002724  9CA6               	bcf	166,6,c	;volsfr
  5992   002726                     
  5993                           ;eeprom.c: 56:  EECON1bits.RD = 1;
  5994   002726  80A6               	bsf	166,0,c	;volsfr
  5995   002728                     
  5996                           ;eeprom.c: 59:  return EEDATA;
  5997   002728  50A8               	movf	168,w,c	;volatile
  5998   00272A  0012               	return		;funcret
  5999   00272C                     __end_of_read_internal_eeprom:
  6000                           	callstack 0
  6001                           
  6002 ;; *************** function ___wmul *****************
  6003 ;; Defined at:
  6004 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  multiplier      2    0[COMRAM] unsigned int 
  6007 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;  product         2    4[COMRAM] unsigned int 
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  2    0[COMRAM] unsigned int 
  6012 ;; Registers used:
  6013 ;;		wreg, status,2, status,0, prodl, prodh
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6019 ;;      Params:         4       0       0       0       0       0       0
  6020 ;;      Locals:         2       0       0       0       0       0       0
  6021 ;;      Temps:          0       0       0       0       0       0       0
  6022 ;;      Totals:         6       0       0       0       0       0       0
  6023 ;;Total ram usage:        6 bytes
  6024 ;; Hardware stack levels used: 1
  6025 ;; Hardware stack levels required when called: 1
  6026 ;; This function calls:
  6027 ;;		Nothing
  6028 ;; This function is called by:
  6029 ;;		_view_log
  6030 ;;		_display_dashboard
  6031 ;;		_store_event_in_eeprom
  6032 ;;		_display_menu
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035                           
  6036                           	psect	text20
  6037   002650                     __ptext20:
  6038                           	callstack 0
  6039   002650                     ___wmul:
  6040                           	callstack 28
  6041   002650  5001               	movf	___wmul@multiplier^0,w,c
  6042   002652  0203               	mulwf	___wmul@multiplicand^0,c
  6043   002654  CFF3 F005          	movff	prodl,___wmul@product
  6044   002658  CFF4 F006          	movff	prodh,___wmul@product+1
  6045   00265C  5001               	movf	___wmul@multiplier^0,w,c
  6046   00265E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6047   002660  50F3               	movf	243,w,c
  6048   002662  2606               	addwf	(___wmul@product+1)^0,f,c
  6049   002664  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6050   002666  0203               	mulwf	___wmul@multiplicand^0,c
  6051   002668  50F3               	movf	243,w,c
  6052   00266A  2606               	addwf	(___wmul@product+1)^0,f,c
  6053   00266C  C005  F001         	movff	___wmul@product,?___wmul
  6054   002670  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6055   002674  0012               	return		;funcret
  6056   002676                     __end_of___wmul:
  6057                           	callstack 0
  6058                           
  6059 ;; *************** function _read_adc *****************
  6060 ;; Defined at:
  6061 ;;		line 43 in file "adc.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  channel         1    wreg     unsigned char 
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;  channel         1    6[COMRAM] unsigned char 
  6066 ;;  reg_val         2    4[COMRAM] unsigned short 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  2    0[COMRAM] unsigned short 
  6069 ;; Registers used:
  6070 ;;		wreg, status,2, status,0
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6076 ;;      Params:         2       0       0       0       0       0       0
  6077 ;;      Locals:         3       0       0       0       0       0       0
  6078 ;;      Temps:          2       0       0       0       0       0       0
  6079 ;;      Totals:         7       0       0       0       0       0       0
  6080 ;;Total ram usage:        7 bytes
  6081 ;; Hardware stack levels used: 1
  6082 ;; Hardware stack levels required when called: 1
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_display_dashboard
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text21
  6091   002532                     __ptext21:
  6092                           	callstack 0
  6093   002532                     _read_adc:
  6094                           	callstack 28
  6095                           
  6096                           ;incstack = 0
  6097                           ;read_adc@channel stored from wreg
  6098   002532  6E07               	movwf	read_adc@channel^0,c
  6099   002534                     
  6100                           ;adc.c: 43: unsigned short read_adc(unsigned char channel);adc.c: 44: {;adc.c: 45:  unsi
      +                          gned short reg_val;;adc.c: 48:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
  6101   002534  C007  F003         	movff	read_adc@channel,??_read_adc
  6102   002538  90D8               	bcf	status,0,c
  6103   00253A  3603               	rlcf	??_read_adc^0,f,c
  6104   00253C  90D8               	bcf	status,0,c
  6105   00253E  3603               	rlcf	??_read_adc^0,f,c
  6106   002540  50C2               	movf	194,w,c	;volatile
  6107   002542  0BC3               	andlw	195
  6108   002544  1003               	iorwf	??_read_adc^0,w,c
  6109   002546  6EC2               	movwf	194,c	;volatile
  6110   002548                     
  6111                           ;adc.c: 51:  GO = 1;
  6112   002548  82C2               	bsf	4034,1,c	;volatile
  6113   00254A                     l36:
  6114   00254A  B2C2               	btfsc	4034,1,c	;volatile
  6115   00254C  EFAA  F012         	goto	u2281
  6116   002550  EFAC  F012         	goto	u2280
  6117   002554                     u2281:
  6118   002554  EFA5  F012         	goto	l36
  6119   002558                     u2280:
  6120   002558                     
  6121                           ;adc.c: 53:  reg_val = (ADRESH << 8) | ADRESL;
  6122   002558  50C3               	movf	195,w,c	;volatile
  6123   00255A  CFC4 F003          	movff	4036,??_read_adc	;volatile
  6124   00255E  6A04               	clrf	(??_read_adc+1)^0,c
  6125   002560  C003  F004         	movff	??_read_adc,??_read_adc+1
  6126   002564  6A03               	clrf	??_read_adc^0,c
  6127   002566  1003               	iorwf	??_read_adc^0,w,c
  6128   002568  6E05               	movwf	read_adc@reg_val^0,c
  6129   00256A  5004               	movf	(??_read_adc+1)^0,w,c
  6130   00256C  6E06               	movwf	(read_adc@reg_val+1)^0,c
  6131   00256E                     
  6132                           ;adc.c: 55:  return reg_val;
  6133   00256E  C005  F001         	movff	read_adc@reg_val,?_read_adc
  6134   002572  C006  F002         	movff	read_adc@reg_val+1,?_read_adc+1
  6135   002576  0012               	return		;funcret
  6136   002578                     __end_of_read_adc:
  6137                           	callstack 0
  6138                           
  6139 ;; *************** function ___xxtofl *****************
  6140 ;; Defined at:
  6141 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  6142 ;; Parameters:    Size  Location     Type
  6143 ;;  sign            1    wreg     unsigned char 
  6144 ;;  val             4    7[COMRAM] long 
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;  sign            1   15[COMRAM] unsigned char 
  6147 ;;  arg             4   17[COMRAM] unsigned long 
  6148 ;;  exp             1   16[COMRAM] unsigned char 
  6149 ;; Return value:  Size  Location     Type
  6150 ;;                  4    7[COMRAM] unsigned char 
  6151 ;; Registers used:
  6152 ;;		wreg, status,2, status,0
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/0
  6155 ;;		On exit  : 0/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6158 ;;      Params:         4       0       0       0       0       0       0
  6159 ;;      Locals:         6       0       0       0       0       0       0
  6160 ;;      Temps:          4       0       0       0       0       0       0
  6161 ;;      Totals:        14       0       0       0       0       0       0
  6162 ;;Total ram usage:       14 bytes
  6163 ;; Hardware stack levels used: 1
  6164 ;; Hardware stack levels required when called: 1
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_display_dashboard
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text22
  6173   001A8A                     __ptext22:
  6174                           	callstack 0
  6175   001A8A                     ___xxtofl:
  6176                           	callstack 28
  6177                           
  6178                           ;incstack = 0
  6179                           ;___xxtofl@sign stored from wreg
  6180   001A8A  6E10               	movwf	___xxtofl@sign^0,c
  6181   001A8C  5010               	movf	___xxtofl@sign^0,w,c
  6182   001A8E  B4D8               	btfsc	status,2,c
  6183   001A90  EF4C  F00D         	goto	u2801
  6184   001A94  EF4E  F00D         	goto	u2800
  6185   001A98                     u2801:
  6186   001A98  EF70  F00D         	goto	l1397
  6187   001A9C                     u2800:
  6188   001A9C  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  6189   001A9E  EF55  F00D         	goto	u2810
  6190   001AA2  EF53  F00D         	goto	u2811
  6191   001AA6                     u2811:
  6192   001AA6  EF70  F00D         	goto	l1397
  6193   001AAA                     u2810:
  6194   001AAA  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  6195   001AAE  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  6196   001AB2  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  6197   001AB6  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  6198   001ABA  1E0C               	comf	??___xxtofl^0,f,c
  6199   001ABC  1E0D               	comf	(??___xxtofl+1)^0,f,c
  6200   001ABE  1E0E               	comf	(??___xxtofl+2)^0,f,c
  6201   001AC0  1E0F               	comf	(??___xxtofl+3)^0,f,c
  6202   001AC2  2A0C               	incf	??___xxtofl^0,f,c
  6203   001AC4  0E00               	movlw	0
  6204   001AC6  220D               	addwfc	(??___xxtofl+1)^0,f,c
  6205   001AC8  220E               	addwfc	(??___xxtofl+2)^0,f,c
  6206   001ACA  220F               	addwfc	(??___xxtofl+3)^0,f,c
  6207   001ACC  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  6208   001AD0  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  6209   001AD4  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  6210   001AD8  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  6211   001ADC  EF78  F00D         	goto	l3351
  6212   001AE0                     l1397:
  6213   001AE0  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  6214   001AE4  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6215   001AE8  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6216   001AEC  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6217   001AF0                     l3351:
  6218   001AF0  5008               	movf	___xxtofl@val^0,w,c
  6219   001AF2  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  6220   001AF4  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  6221   001AF6  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  6222   001AF8  A4D8               	btfss	status,2,c
  6223   001AFA  EF81  F00D         	goto	u2821
  6224   001AFE  EF83  F00D         	goto	u2820
  6225   001B02                     u2821:
  6226   001B02  EF8D  F00D         	goto	l3357
  6227   001B06                     u2820:
  6228   001B06  0E00               	movlw	0
  6229   001B08  6E08               	movwf	?___xxtofl^0,c
  6230   001B0A  0E00               	movlw	0
  6231   001B0C  6E09               	movwf	(?___xxtofl+1)^0,c
  6232   001B0E  0E00               	movlw	0
  6233   001B10  6E0A               	movwf	(?___xxtofl+2)^0,c
  6234   001B12  0E00               	movlw	0
  6235   001B14  6E0B               	movwf	(?___xxtofl+3)^0,c
  6236   001B16  EF1E  F00E         	goto	l1400
  6237   001B1A                     l3357:
  6238   001B1A  0E96               	movlw	150
  6239   001B1C  6E11               	movwf	___xxtofl@exp^0,c
  6240   001B1E  EF97  F00D         	goto	l3361
  6241   001B22                     l3359:
  6242   001B22  2A11               	incf	___xxtofl@exp^0,f,c
  6243   001B24  90D8               	bcf	status,0,c
  6244   001B26  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  6245   001B28  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  6246   001B2A  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  6247   001B2C  3212               	rrcf	___xxtofl@arg^0,f,c
  6248   001B2E                     l3361:
  6249   001B2E  0E00               	movlw	0
  6250   001B30  1412               	andwf	___xxtofl@arg^0,w,c
  6251   001B32  6E0C               	movwf	??___xxtofl^0,c
  6252   001B34  0E00               	movlw	0
  6253   001B36  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  6254   001B38  6E0D               	movwf	(??___xxtofl+1)^0,c
  6255   001B3A  0E00               	movlw	0
  6256   001B3C  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  6257   001B3E  6E0E               	movwf	(??___xxtofl+2)^0,c
  6258   001B40  0EFE               	movlw	254
  6259   001B42  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  6260   001B44  6E0F               	movwf	(??___xxtofl+3)^0,c
  6261   001B46  500C               	movf	??___xxtofl^0,w,c
  6262   001B48  100D               	iorwf	(??___xxtofl+1)^0,w,c
  6263   001B4A  100E               	iorwf	(??___xxtofl+2)^0,w,c
  6264   001B4C  100F               	iorwf	(??___xxtofl+3)^0,w,c
  6265   001B4E  A4D8               	btfss	status,2,c
  6266   001B50  EFAC  F00D         	goto	u2831
  6267   001B54  EFAE  F00D         	goto	u2830
  6268   001B58                     u2831:
  6269   001B58  EF91  F00D         	goto	l3359
  6270   001B5C                     u2830:
  6271   001B5C  EFBC  F00D         	goto	l1404
  6272   001B60                     l3363:
  6273   001B60  2A11               	incf	___xxtofl@exp^0,f,c
  6274   001B62  0E01               	movlw	1
  6275   001B64  2612               	addwf	___xxtofl@arg^0,f,c
  6276   001B66  0E00               	movlw	0
  6277   001B68  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  6278   001B6A  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  6279   001B6C  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  6280   001B6E  90D8               	bcf	status,0,c
  6281   001B70  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  6282   001B72  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  6283   001B74  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  6284   001B76  3212               	rrcf	___xxtofl@arg^0,f,c
  6285   001B78                     l1404:
  6286   001B78  0E00               	movlw	0
  6287   001B7A  1412               	andwf	___xxtofl@arg^0,w,c
  6288   001B7C  6E0C               	movwf	??___xxtofl^0,c
  6289   001B7E  0E00               	movlw	0
  6290   001B80  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  6291   001B82  6E0D               	movwf	(??___xxtofl+1)^0,c
  6292   001B84  0E00               	movlw	0
  6293   001B86  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  6294   001B88  6E0E               	movwf	(??___xxtofl+2)^0,c
  6295   001B8A  0EFF               	movlw	255
  6296   001B8C  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  6297   001B8E  6E0F               	movwf	(??___xxtofl+3)^0,c
  6298   001B90  500C               	movf	??___xxtofl^0,w,c
  6299   001B92  100D               	iorwf	(??___xxtofl+1)^0,w,c
  6300   001B94  100E               	iorwf	(??___xxtofl+2)^0,w,c
  6301   001B96  100F               	iorwf	(??___xxtofl+3)^0,w,c
  6302   001B98  A4D8               	btfss	status,2,c
  6303   001B9A  EFD1  F00D         	goto	u2841
  6304   001B9E  EFD3  F00D         	goto	u2840
  6305   001BA2                     u2841:
  6306   001BA2  EFB0  F00D         	goto	l3363
  6307   001BA6                     u2840:
  6308   001BA6  EFDB  F00D         	goto	l3371
  6309   001BAA                     l3369:
  6310   001BAA  0611               	decf	___xxtofl@exp^0,f,c
  6311   001BAC  90D8               	bcf	status,0,c
  6312   001BAE  3612               	rlcf	___xxtofl@arg^0,f,c
  6313   001BB0  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  6314   001BB2  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  6315   001BB4  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  6316   001BB6                     l3371:
  6317   001BB6  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  6318   001BB8  EFE0  F00D         	goto	u2851
  6319   001BBC  EFE2  F00D         	goto	u2850
  6320   001BC0                     u2851:
  6321   001BC0  EFEA  F00D         	goto	l1411
  6322   001BC4                     u2850:
  6323   001BC4  0E02               	movlw	2
  6324   001BC6  6011               	cpfslt	___xxtofl@exp^0,c
  6325   001BC8  EFE8  F00D         	goto	u2861
  6326   001BCC  EFEA  F00D         	goto	u2860
  6327   001BD0                     u2861:
  6328   001BD0  EFD5  F00D         	goto	l3369
  6329   001BD4                     u2860:
  6330   001BD4                     l1411:
  6331   001BD4  B011               	btfsc	___xxtofl@exp^0,0,c
  6332   001BD6  EFEF  F00D         	goto	u2871
  6333   001BDA  EFF1  F00D         	goto	u2870
  6334   001BDE                     u2871:
  6335   001BDE  EFF2  F00D         	goto	l3377
  6336   001BE2                     u2870:
  6337   001BE2  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  6338   001BE4                     l3377:
  6339   001BE4  90D8               	bcf	status,0,c
  6340   001BE6  3211               	rrcf	___xxtofl@exp^0,f,c
  6341   001BE8  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  6342   001BEC  6A0D               	clrf	(??___xxtofl+1)^0,c
  6343   001BEE  6A0E               	clrf	(??___xxtofl+2)^0,c
  6344   001BF0  6A0F               	clrf	(??___xxtofl+3)^0,c
  6345   001BF2  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  6346   001BF6  6A0E               	clrf	(??___xxtofl+2)^0,c
  6347   001BF8  6A0D               	clrf	(??___xxtofl+1)^0,c
  6348   001BFA  6A0C               	clrf	??___xxtofl^0,c
  6349   001BFC  500C               	movf	??___xxtofl^0,w,c
  6350   001BFE  1212               	iorwf	___xxtofl@arg^0,f,c
  6351   001C00  500D               	movf	(??___xxtofl+1)^0,w,c
  6352   001C02  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  6353   001C04  500E               	movf	(??___xxtofl+2)^0,w,c
  6354   001C06  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  6355   001C08  500F               	movf	(??___xxtofl+3)^0,w,c
  6356   001C0A  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  6357   001C0C  5010               	movf	___xxtofl@sign^0,w,c
  6358   001C0E  B4D8               	btfsc	status,2,c
  6359   001C10  EF0C  F00E         	goto	u2881
  6360   001C14  EF0E  F00E         	goto	u2880
  6361   001C18                     u2881:
  6362   001C18  EF16  F00E         	goto	l3387
  6363   001C1C                     u2880:
  6364   001C1C  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  6365   001C1E  EF15  F00E         	goto	u2890
  6366   001C22  EF13  F00E         	goto	u2891
  6367   001C26                     u2891:
  6368   001C26  EF16  F00E         	goto	l3387
  6369   001C2A                     u2890:
  6370   001C2A  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  6371   001C2C                     l3387:
  6372   001C2C  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  6373   001C30  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  6374   001C34  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  6375   001C38  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  6376   001C3C                     l1400:
  6377   001C3C  0012               	return		;funcret
  6378   001C3E                     __end_of___xxtofl:
  6379                           	callstack 0
  6380                           
  6381 ;; *************** function ___lwmod *****************
  6382 ;; Defined at:
  6383 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  dividend        2    0[COMRAM] unsigned int 
  6386 ;;  divisor         2    2[COMRAM] unsigned int 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  counter         1    4[COMRAM] unsigned char 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  2    0[COMRAM] unsigned int 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6398 ;;      Params:         4       0       0       0       0       0       0
  6399 ;;      Locals:         1       0       0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0
  6401 ;;      Totals:         5       0       0       0       0       0       0
  6402 ;;Total ram usage:        5 bytes
  6403 ;; Hardware stack levels used: 1
  6404 ;; Hardware stack levels required when called: 1
  6405 ;; This function calls:
  6406 ;;		Nothing
  6407 ;; This function is called by:
  6408 ;;		_display_dashboard
  6409 ;;		_password_screen
  6410 ;;		_view_log
  6411 ;;		_download_log
  6412 ;;		_set_times
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text23
  6417   002428                     __ptext23:
  6418                           	callstack 0
  6419   002428                     ___lwmod:
  6420                           	callstack 28
  6421   002428  5003               	movf	___lwmod@divisor^0,w,c
  6422   00242A  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  6423   00242C  B4D8               	btfsc	status,2,c
  6424   00242E  EF1B  F012         	goto	u2771
  6425   002432  EF1D  F012         	goto	u2770
  6426   002436                     u2771:
  6427   002436  EF41  F012         	goto	l1243
  6428   00243A                     u2770:
  6429   00243A  0E01               	movlw	1
  6430   00243C  6E05               	movwf	___lwmod@counter^0,c
  6431   00243E  EF25  F012         	goto	l3335
  6432   002442                     l3333:
  6433   002442  90D8               	bcf	status,0,c
  6434   002444  3603               	rlcf	___lwmod@divisor^0,f,c
  6435   002446  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  6436   002448  2A05               	incf	___lwmod@counter^0,f,c
  6437   00244A                     l3335:
  6438   00244A  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  6439   00244C  EF2A  F012         	goto	u2781
  6440   002450  EF2C  F012         	goto	u2780
  6441   002454                     u2781:
  6442   002454  EF21  F012         	goto	l3333
  6443   002458                     u2780:
  6444   002458                     l3337:
  6445   002458  5003               	movf	___lwmod@divisor^0,w,c
  6446   00245A  5C01               	subwf	___lwmod@dividend^0,w,c
  6447   00245C  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6448   00245E  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  6449   002460  A0D8               	btfss	status,0,c
  6450   002462  EF35  F012         	goto	u2791
  6451   002466  EF37  F012         	goto	u2790
  6452   00246A                     u2791:
  6453   00246A  EF3B  F012         	goto	l3341
  6454   00246E                     u2790:
  6455   00246E  5003               	movf	___lwmod@divisor^0,w,c
  6456   002470  5E01               	subwf	___lwmod@dividend^0,f,c
  6457   002472  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6458   002474  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  6459   002476                     l3341:
  6460   002476  90D8               	bcf	status,0,c
  6461   002478  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  6462   00247A  3203               	rrcf	___lwmod@divisor^0,f,c
  6463   00247C  2E05               	decfsz	___lwmod@counter^0,f,c
  6464   00247E  EF2C  F012         	goto	l3337
  6465   002482                     l1243:
  6466   002482  C001  F001         	movff	___lwmod@dividend,?___lwmod
  6467   002486  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  6468   00248A  0012               	return		;funcret
  6469   00248C                     __end_of___lwmod:
  6470                           	callstack 0
  6471                           
  6472 ;; *************** function ___lwdiv *****************
  6473 ;; Defined at:
  6474 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;  dividend        2    0[COMRAM] unsigned int 
  6477 ;;  divisor         2    2[COMRAM] unsigned int 
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;  quotient        2    4[COMRAM] unsigned int 
  6480 ;;  counter         1    6[COMRAM] unsigned char 
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  2    0[COMRAM] unsigned int 
  6483 ;; Registers used:
  6484 ;;		wreg, status,2, status,0
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6490 ;;      Params:         4       0       0       0       0       0       0
  6491 ;;      Locals:         3       0       0       0       0       0       0
  6492 ;;      Temps:          0       0       0       0       0       0       0
  6493 ;;      Totals:         7       0       0       0       0       0       0
  6494 ;;Total ram usage:        7 bytes
  6495 ;; Hardware stack levels used: 1
  6496 ;; Hardware stack levels required when called: 1
  6497 ;; This function calls:
  6498 ;;		Nothing
  6499 ;; This function is called by:
  6500 ;;		_display_dashboard
  6501 ;;		_password_screen
  6502 ;;		_view_log
  6503 ;;		_download_log
  6504 ;;		_set_times
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text24
  6509   0023B4                     __ptext24:
  6510                           	callstack 0
  6511   0023B4                     ___lwdiv:
  6512                           	callstack 28
  6513   0023B4  0E00               	movlw	0
  6514   0023B6  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  6515   0023B8  0E00               	movlw	0
  6516   0023BA  6E05               	movwf	___lwdiv@quotient^0,c
  6517   0023BC  5003               	movf	___lwdiv@divisor^0,w,c
  6518   0023BE  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6519   0023C0  B4D8               	btfsc	status,2,c
  6520   0023C2  EFE5  F011         	goto	u2741
  6521   0023C6  EFE7  F011         	goto	u2740
  6522   0023CA                     u2741:
  6523   0023CA  EF0F  F012         	goto	l1233
  6524   0023CE                     u2740:
  6525   0023CE  0E01               	movlw	1
  6526   0023D0  6E07               	movwf	___lwdiv@counter^0,c
  6527   0023D2  EFEF  F011         	goto	l3315
  6528   0023D6                     l3313:
  6529   0023D6  90D8               	bcf	status,0,c
  6530   0023D8  3603               	rlcf	___lwdiv@divisor^0,f,c
  6531   0023DA  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6532   0023DC  2A07               	incf	___lwdiv@counter^0,f,c
  6533   0023DE                     l3315:
  6534   0023DE  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  6535   0023E0  EFF4  F011         	goto	u2751
  6536   0023E4  EFF6  F011         	goto	u2750
  6537   0023E8                     u2751:
  6538   0023E8  EFEB  F011         	goto	l3313
  6539   0023EC                     u2750:
  6540   0023EC                     l3317:
  6541   0023EC  90D8               	bcf	status,0,c
  6542   0023EE  3605               	rlcf	___lwdiv@quotient^0,f,c
  6543   0023F0  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6544   0023F2  5003               	movf	___lwdiv@divisor^0,w,c
  6545   0023F4  5C01               	subwf	___lwdiv@dividend^0,w,c
  6546   0023F6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6547   0023F8  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6548   0023FA  A0D8               	btfss	status,0,c
  6549   0023FC  EF02  F012         	goto	u2761
  6550   002400  EF04  F012         	goto	u2760
  6551   002404                     u2761:
  6552   002404  EF09  F012         	goto	l3325
  6553   002408                     u2760:
  6554   002408  5003               	movf	___lwdiv@divisor^0,w,c
  6555   00240A  5E01               	subwf	___lwdiv@dividend^0,f,c
  6556   00240C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6557   00240E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6558   002410  8005               	bsf	___lwdiv@quotient^0,0,c
  6559   002412                     l3325:
  6560   002412  90D8               	bcf	status,0,c
  6561   002414  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6562   002416  3203               	rrcf	___lwdiv@divisor^0,f,c
  6563   002418  2E07               	decfsz	___lwdiv@counter^0,f,c
  6564   00241A  EFF6  F011         	goto	l3317
  6565   00241E                     l1233:
  6566   00241E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  6567   002422  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6568   002426  0012               	return		;funcret
  6569   002428                     __end_of___lwdiv:
  6570                           	callstack 0
  6571                           
  6572 ;; *************** function ___fltol *****************
  6573 ;; Defined at:
  6574 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;  f1              4   46[COMRAM] unsigned int 
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;  exp1            1   55[COMRAM] unsigned char 
  6579 ;;  sign1           1   54[COMRAM] unsigned char 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  4   46[COMRAM] long 
  6582 ;; Registers used:
  6583 ;;		wreg, status,2, status,0
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6589 ;;      Params:         4       0       0       0       0       0       0
  6590 ;;      Locals:         2       0       0       0       0       0       0
  6591 ;;      Temps:          4       0       0       0       0       0       0
  6592 ;;      Totals:        10       0       0       0       0       0       0
  6593 ;;Total ram usage:       10 bytes
  6594 ;; Hardware stack levels used: 1
  6595 ;; Hardware stack levels required when called: 1
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_display_dashboard
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text25
  6604   001F8A                     __ptext25:
  6605                           	callstack 0
  6606   001F8A                     ___fltol:
  6607                           	callstack 28
  6608   001F8A  3431               	rlcf	(___fltol@f1+2)^0,w,c
  6609   001F8C  3432               	rlcf	(___fltol@f1+3)^0,w,c
  6610   001F8E  6E38               	movwf	___fltol@exp1^0,c
  6611   001F90  5038               	movf	___fltol@exp1^0,w,c
  6612   001F92  A4D8               	btfss	status,2,c
  6613   001F94  EFCE  F00F         	goto	u2671
  6614   001F98  EFD0  F00F         	goto	u2670
  6615   001F9C                     u2671:
  6616   001F9C  EFDA  F00F         	goto	l3269
  6617   001FA0                     u2670:
  6618   001FA0                     l3265:
  6619   001FA0  0E00               	movlw	0
  6620   001FA2  6E2F               	movwf	?___fltol^0,c
  6621   001FA4  0E00               	movlw	0
  6622   001FA6  6E30               	movwf	(?___fltol+1)^0,c
  6623   001FA8  0E00               	movlw	0
  6624   001FAA  6E31               	movwf	(?___fltol+2)^0,c
  6625   001FAC  0E00               	movlw	0
  6626   001FAE  6E32               	movwf	(?___fltol+3)^0,c
  6627   001FB0  EF47  F010         	goto	l1039
  6628   001FB4                     l3269:
  6629   001FB4  C02F  F033         	movff	___fltol@f1,??___fltol
  6630   001FB8  C030  F034         	movff	___fltol@f1+1,??___fltol+1
  6631   001FBC  C031  F035         	movff	___fltol@f1+2,??___fltol+2
  6632   001FC0  C032  F036         	movff	___fltol@f1+3,??___fltol+3
  6633   001FC4  0E20               	movlw	32
  6634   001FC6  EFEA  F00F         	goto	u2680
  6635   001FCA                     u2685:
  6636   001FCA  90D8               	bcf	status,0,c
  6637   001FCC  3236               	rrcf	(??___fltol+3)^0,f,c
  6638   001FCE  3235               	rrcf	(??___fltol+2)^0,f,c
  6639   001FD0  3234               	rrcf	(??___fltol+1)^0,f,c
  6640   001FD2  3233               	rrcf	??___fltol^0,f,c
  6641   001FD4                     u2680:
  6642   001FD4  2EE8               	decfsz	wreg,f,c
  6643   001FD6  EFE5  F00F         	goto	u2685
  6644   001FDA  5033               	movf	??___fltol^0,w,c
  6645   001FDC  6E37               	movwf	___fltol@sign1^0,c
  6646   001FDE  8E31               	bsf	(___fltol@f1+2)^0,7,c
  6647   001FE0  0EFF               	movlw	255
  6648   001FE2  162F               	andwf	___fltol@f1^0,f,c
  6649   001FE4  0EFF               	movlw	255
  6650   001FE6  1630               	andwf	(___fltol@f1+1)^0,f,c
  6651   001FE8  0EFF               	movlw	255
  6652   001FEA  1631               	andwf	(___fltol@f1+2)^0,f,c
  6653   001FEC  0E00               	movlw	0
  6654   001FEE  1632               	andwf	(___fltol@f1+3)^0,f,c
  6655   001FF0  0E96               	movlw	150
  6656   001FF2  5E38               	subwf	___fltol@exp1^0,f,c
  6657   001FF4  BE38               	btfsc	___fltol@exp1^0,7,c
  6658   001FF6  EF01  F010         	goto	u2690
  6659   001FFA  EFFF  F00F         	goto	u2691
  6660   001FFE                     u2691:
  6661   001FFE  EF17  F010         	goto	l3289
  6662   002002                     u2690:
  6663   002002  5038               	movf	___fltol@exp1^0,w,c
  6664   002004  0A80               	xorlw	128
  6665   002006  0F97               	addlw	151
  6666   002008  B0D8               	btfsc	status,0,c
  6667   00200A  EF09  F010         	goto	u2701
  6668   00200E  EF0B  F010         	goto	u2700
  6669   002012                     u2701:
  6670   002012  EF0D  F010         	goto	l3285
  6671   002016                     u2700:
  6672   002016  EFD0  F00F         	goto	l3265
  6673   00201A                     l3285:
  6674   00201A  90D8               	bcf	status,0,c
  6675   00201C  3232               	rrcf	(___fltol@f1+3)^0,f,c
  6676   00201E  3231               	rrcf	(___fltol@f1+2)^0,f,c
  6677   002020  3230               	rrcf	(___fltol@f1+1)^0,f,c
  6678   002022  322F               	rrcf	___fltol@f1^0,f,c
  6679   002024  3E38               	incfsz	___fltol@exp1^0,f,c
  6680   002026  EF0D  F010         	goto	l3285
  6681   00202A  EF2F  F010         	goto	l3299
  6682   00202E                     l3289:
  6683   00202E  0E1F               	movlw	31
  6684   002030  6438               	cpfsgt	___fltol@exp1^0,c
  6685   002032  EF1D  F010         	goto	u2711
  6686   002036  EF1F  F010         	goto	u2710
  6687   00203A                     u2711:
  6688   00203A  EF27  F010         	goto	l3297
  6689   00203E                     u2710:
  6690   00203E  EFD0  F00F         	goto	l3265
  6691   002042                     l3295:
  6692   002042  90D8               	bcf	status,0,c
  6693   002044  362F               	rlcf	___fltol@f1^0,f,c
  6694   002046  3630               	rlcf	(___fltol@f1+1)^0,f,c
  6695   002048  3631               	rlcf	(___fltol@f1+2)^0,f,c
  6696   00204A  3632               	rlcf	(___fltol@f1+3)^0,f,c
  6697   00204C  0638               	decf	___fltol@exp1^0,f,c
  6698   00204E                     l3297:
  6699   00204E  5038               	movf	___fltol@exp1^0,w,c
  6700   002050  A4D8               	btfss	status,2,c
  6701   002052  EF2D  F010         	goto	u2721
  6702   002056  EF2F  F010         	goto	u2720
  6703   00205A                     u2721:
  6704   00205A  EF21  F010         	goto	l3295
  6705   00205E                     u2720:
  6706   00205E                     l3299:
  6707   00205E  5037               	movf	___fltol@sign1^0,w,c
  6708   002060  B4D8               	btfsc	status,2,c
  6709   002062  EF35  F010         	goto	u2731
  6710   002066  EF37  F010         	goto	u2730
  6711   00206A                     u2731:
  6712   00206A  EF3F  F010         	goto	l3303
  6713   00206E                     u2730:
  6714   00206E  1E32               	comf	(___fltol@f1+3)^0,f,c
  6715   002070  1E31               	comf	(___fltol@f1+2)^0,f,c
  6716   002072  1E30               	comf	(___fltol@f1+1)^0,f,c
  6717   002074  6C2F               	negf	___fltol@f1^0,c
  6718   002076  0E00               	movlw	0
  6719   002078  2230               	addwfc	(___fltol@f1+1)^0,f,c
  6720   00207A  2231               	addwfc	(___fltol@f1+2)^0,f,c
  6721   00207C  2232               	addwfc	(___fltol@f1+3)^0,f,c
  6722   00207E                     l3303:
  6723   00207E  C02F  F02F         	movff	___fltol@f1,?___fltol
  6724   002082  C030  F030         	movff	___fltol@f1+1,?___fltol+1
  6725   002086  C031  F031         	movff	___fltol@f1+2,?___fltol+2
  6726   00208A  C032  F032         	movff	___fltol@f1+3,?___fltol+3
  6727   00208E                     l1039:
  6728   00208E  0012               	return		;funcret
  6729   002090                     __end_of___fltol:
  6730                           	callstack 0
  6731                           
  6732 ;; *************** function ___fldiv *****************
  6733 ;; Defined at:
  6734 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  b               4   21[COMRAM] long 
  6737 ;;  a               4   25[COMRAM] long 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  grs             4   40[COMRAM] unsigned long 
  6740 ;;  rem             4   33[COMRAM] unsigned long 
  6741 ;;  new_exp         2   38[COMRAM] short 
  6742 ;;  aexp            1   45[COMRAM] unsigned char 
  6743 ;;  bexp            1   44[COMRAM] unsigned char 
  6744 ;;  sign            1   37[COMRAM] unsigned char 
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  4   21[COMRAM] unsigned char 
  6747 ;; Registers used:
  6748 ;;		wreg, status,2, status,0
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6754 ;;      Params:         8       0       0       0       0       0       0
  6755 ;;      Locals:        13       0       0       0       0       0       0
  6756 ;;      Temps:          4       0       0       0       0       0       0
  6757 ;;      Totals:        25       0       0       0       0       0       0
  6758 ;;Total ram usage:       25 bytes
  6759 ;; Hardware stack levels used: 1
  6760 ;; Hardware stack levels required when called: 1
  6761 ;; This function calls:
  6762 ;;		Nothing
  6763 ;; This function is called by:
  6764 ;;		_display_dashboard
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           	psect	text26
  6769   000BE0                     __ptext26:
  6770                           	callstack 0
  6771   000BE0                     ___fldiv:
  6772                           	callstack 28
  6773   000BE0  5019               	movf	(___fldiv@b+3)^0,w,c
  6774   000BE2  0B80               	andlw	128
  6775   000BE4  6E26               	movwf	___fldiv@sign^0,c
  6776   000BE6  5019               	movf	(___fldiv@b+3)^0,w,c
  6777   000BE8  2419               	addwf	(___fldiv@b+3)^0,w,c
  6778   000BEA  6E2D               	movwf	___fldiv@bexp^0,c
  6779   000BEC  AE18               	btfss	(___fldiv@b+2)^0,7,c
  6780   000BEE  EFFB  F005         	goto	u2441
  6781   000BF2  EFFD  F005         	goto	u2440
  6782   000BF6                     u2441:
  6783   000BF6  EFFE  F005         	goto	l3131
  6784   000BFA                     u2440:
  6785   000BFA  802D               	bsf	___fldiv@bexp^0,0,c
  6786   000BFC                     l3131:
  6787   000BFC  502D               	movf	___fldiv@bexp^0,w,c
  6788   000BFE  B4D8               	btfsc	status,2,c
  6789   000C00  EF04  F006         	goto	u2451
  6790   000C04  EF06  F006         	goto	u2450
  6791   000C08                     u2451:
  6792   000C08  EF1B  F006         	goto	l3141
  6793   000C0C                     u2450:
  6794   000C0C  282D               	incf	___fldiv@bexp^0,w,c
  6795   000C0E  A4D8               	btfss	status,2,c
  6796   000C10  EF0C  F006         	goto	u2461
  6797   000C14  EF0E  F006         	goto	u2460
  6798   000C18                     u2461:
  6799   000C18  EF16  F006         	goto	l3137
  6800   000C1C                     u2460:
  6801   000C1C  0E00               	movlw	0
  6802   000C1E  6E16               	movwf	___fldiv@b^0,c
  6803   000C20  0E00               	movlw	0
  6804   000C22  6E17               	movwf	(___fldiv@b+1)^0,c
  6805   000C24  0E00               	movlw	0
  6806   000C26  6E18               	movwf	(___fldiv@b+2)^0,c
  6807   000C28  0E00               	movlw	0
  6808   000C2A  6E19               	movwf	(___fldiv@b+3)^0,c
  6809   000C2C                     l3137:
  6810   000C2C  8E18               	bsf	(___fldiv@b+2)^0,7,c
  6811   000C2E  0E00               	movlw	0
  6812   000C30  6E19               	movwf	(___fldiv@b+3)^0,c
  6813   000C32  EF23  F006         	goto	l3143
  6814   000C36                     l3141:
  6815   000C36  0E00               	movlw	0
  6816   000C38  6E16               	movwf	___fldiv@b^0,c
  6817   000C3A  0E00               	movlw	0
  6818   000C3C  6E17               	movwf	(___fldiv@b+1)^0,c
  6819   000C3E  0E00               	movlw	0
  6820   000C40  6E18               	movwf	(___fldiv@b+2)^0,c
  6821   000C42  0E00               	movlw	0
  6822   000C44  6E19               	movwf	(___fldiv@b+3)^0,c
  6823   000C46                     l3143:
  6824   000C46  501D               	movf	(___fldiv@a+3)^0,w,c
  6825   000C48  0B80               	andlw	128
  6826   000C4A  1A26               	xorwf	___fldiv@sign^0,f,c
  6827   000C4C  501D               	movf	(___fldiv@a+3)^0,w,c
  6828   000C4E  241D               	addwf	(___fldiv@a+3)^0,w,c
  6829   000C50  6E2E               	movwf	___fldiv@aexp^0,c
  6830   000C52  AE1C               	btfss	(___fldiv@a+2)^0,7,c
  6831   000C54  EF2E  F006         	goto	u2471
  6832   000C58  EF30  F006         	goto	u2470
  6833   000C5C                     u2471:
  6834   000C5C  EF31  F006         	goto	l3151
  6835   000C60                     u2470:
  6836   000C60  802E               	bsf	___fldiv@aexp^0,0,c
  6837   000C62                     l3151:
  6838   000C62  502E               	movf	___fldiv@aexp^0,w,c
  6839   000C64  B4D8               	btfsc	status,2,c
  6840   000C66  EF37  F006         	goto	u2481
  6841   000C6A  EF39  F006         	goto	u2480
  6842   000C6E                     u2481:
  6843   000C6E  EF4E  F006         	goto	l3161
  6844   000C72                     u2480:
  6845   000C72  282E               	incf	___fldiv@aexp^0,w,c
  6846   000C74  A4D8               	btfss	status,2,c
  6847   000C76  EF3F  F006         	goto	u2491
  6848   000C7A  EF41  F006         	goto	u2490
  6849   000C7E                     u2491:
  6850   000C7E  EF49  F006         	goto	l3157
  6851   000C82                     u2490:
  6852   000C82  0E00               	movlw	0
  6853   000C84  6E1A               	movwf	___fldiv@a^0,c
  6854   000C86  0E00               	movlw	0
  6855   000C88  6E1B               	movwf	(___fldiv@a+1)^0,c
  6856   000C8A  0E00               	movlw	0
  6857   000C8C  6E1C               	movwf	(___fldiv@a+2)^0,c
  6858   000C8E  0E00               	movlw	0
  6859   000C90  6E1D               	movwf	(___fldiv@a+3)^0,c
  6860   000C92                     l3157:
  6861   000C92  8E1C               	bsf	(___fldiv@a+2)^0,7,c
  6862   000C94  0E00               	movlw	0
  6863   000C96  6E1D               	movwf	(___fldiv@a+3)^0,c
  6864   000C98  EF56  F006         	goto	l3163
  6865   000C9C                     l3161:
  6866   000C9C  0E00               	movlw	0
  6867   000C9E  6E1A               	movwf	___fldiv@a^0,c
  6868   000CA0  0E00               	movlw	0
  6869   000CA2  6E1B               	movwf	(___fldiv@a+1)^0,c
  6870   000CA4  0E00               	movlw	0
  6871   000CA6  6E1C               	movwf	(___fldiv@a+2)^0,c
  6872   000CA8  0E00               	movlw	0
  6873   000CAA  6E1D               	movwf	(___fldiv@a+3)^0,c
  6874   000CAC                     l3163:
  6875   000CAC  501A               	movf	___fldiv@a^0,w,c
  6876   000CAE  101B               	iorwf	(___fldiv@a+1)^0,w,c
  6877   000CB0  101C               	iorwf	(___fldiv@a+2)^0,w,c
  6878   000CB2  101D               	iorwf	(___fldiv@a+3)^0,w,c
  6879   000CB4  A4D8               	btfss	status,2,c
  6880   000CB6  EF5F  F006         	goto	u2501
  6881   000CBA  EF61  F006         	goto	u2500
  6882   000CBE                     u2501:
  6883   000CBE  EF79  F006         	goto	l3175
  6884   000CC2                     u2500:
  6885   000CC2  0E00               	movlw	0
  6886   000CC4  6E16               	movwf	___fldiv@b^0,c
  6887   000CC6  0E00               	movlw	0
  6888   000CC8  6E17               	movwf	(___fldiv@b+1)^0,c
  6889   000CCA  0E00               	movlw	0
  6890   000CCC  6E18               	movwf	(___fldiv@b+2)^0,c
  6891   000CCE  0E00               	movlw	0
  6892   000CD0  6E19               	movwf	(___fldiv@b+3)^0,c
  6893   000CD2  0E80               	movlw	128
  6894   000CD4  1218               	iorwf	(___fldiv@b+2)^0,f,c
  6895   000CD6  0E7F               	movlw	127
  6896   000CD8  1219               	iorwf	(___fldiv@b+3)^0,f,c
  6897   000CDA                     l3169:
  6898   000CDA  5026               	movf	___fldiv@sign^0,w,c
  6899   000CDC  1219               	iorwf	(___fldiv@b+3)^0,f,c
  6900   000CDE  C016  F016         	movff	___fldiv@b,?___fldiv
  6901   000CE2  C017  F017         	movff	___fldiv@b+1,?___fldiv+1
  6902   000CE6  C018  F018         	movff	___fldiv@b+2,?___fldiv+2
  6903   000CEA  C019  F019         	movff	___fldiv@b+3,?___fldiv+3
  6904   000CEE  EFBC  F007         	goto	l1324
  6905   000CF2                     l3175:
  6906   000CF2  502D               	movf	___fldiv@bexp^0,w,c
  6907   000CF4  A4D8               	btfss	status,2,c
  6908   000CF6  EF7F  F006         	goto	u2511
  6909   000CFA  EF81  F006         	goto	u2510
  6910   000CFE                     u2511:
  6911   000CFE  EF8B  F006         	goto	l3183
  6912   000D02                     u2510:
  6913   000D02  0E00               	movlw	0
  6914   000D04  6E16               	movwf	?___fldiv^0,c
  6915   000D06  0E00               	movlw	0
  6916   000D08  6E17               	movwf	(?___fldiv+1)^0,c
  6917   000D0A  0E00               	movlw	0
  6918   000D0C  6E18               	movwf	(?___fldiv+2)^0,c
  6919   000D0E  0E00               	movlw	0
  6920   000D10  6E19               	movwf	(?___fldiv+3)^0,c
  6921   000D12  EFBC  F007         	goto	l1324
  6922   000D16                     l3183:
  6923   000D16  502E               	movf	___fldiv@aexp^0,w,c
  6924   000D18  C02D  F01E         	movff	___fldiv@bexp,??___fldiv
  6925   000D1C  6A1F               	clrf	(??___fldiv+1)^0,c
  6926   000D1E  5E1E               	subwf	??___fldiv^0,f,c
  6927   000D20  0E00               	movlw	0
  6928   000D22  5A1F               	subwfb	(??___fldiv+1)^0,f,c
  6929   000D24  0E7F               	movlw	127
  6930   000D26  241E               	addwf	??___fldiv^0,w,c
  6931   000D28  6E27               	movwf	___fldiv@new_exp^0,c
  6932   000D2A  0E00               	movlw	0
  6933   000D2C  201F               	addwfc	(??___fldiv+1)^0,w,c
  6934   000D2E  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  6935   000D30  C016  F022         	movff	___fldiv@b,___fldiv@rem
  6936   000D34  C017  F023         	movff	___fldiv@b+1,___fldiv@rem+1
  6937   000D38  C018  F024         	movff	___fldiv@b+2,___fldiv@rem+2
  6938   000D3C  C019  F025         	movff	___fldiv@b+3,___fldiv@rem+3
  6939   000D40  0E00               	movlw	0
  6940   000D42  6E16               	movwf	___fldiv@b^0,c
  6941   000D44  0E00               	movlw	0
  6942   000D46  6E17               	movwf	(___fldiv@b+1)^0,c
  6943   000D48  0E00               	movlw	0
  6944   000D4A  6E18               	movwf	(___fldiv@b+2)^0,c
  6945   000D4C  0E00               	movlw	0
  6946   000D4E  6E19               	movwf	(___fldiv@b+3)^0,c
  6947   000D50  0E00               	movlw	0
  6948   000D52  6E29               	movwf	___fldiv@grs^0,c
  6949   000D54  0E00               	movlw	0
  6950   000D56  6E2A               	movwf	(___fldiv@grs+1)^0,c
  6951   000D58  0E00               	movlw	0
  6952   000D5A  6E2B               	movwf	(___fldiv@grs+2)^0,c
  6953   000D5C  0E00               	movlw	0
  6954   000D5E  6E2C               	movwf	(___fldiv@grs+3)^0,c
  6955   000D60  0E00               	movlw	0
  6956   000D62  6E2E               	movwf	___fldiv@aexp^0,c
  6957   000D64  EFEC  F006         	goto	l1326
  6958   000D68                     l3193:
  6959   000D68  502E               	movf	___fldiv@aexp^0,w,c
  6960   000D6A  B4D8               	btfsc	status,2,c
  6961   000D6C  EFBA  F006         	goto	u2521
  6962   000D70  EFBC  F006         	goto	u2520
  6963   000D74                     u2521:
  6964   000D74  EFD3  F006         	goto	l3201
  6965   000D78                     u2520:
  6966   000D78  90D8               	bcf	status,0,c
  6967   000D7A  3622               	rlcf	___fldiv@rem^0,f,c
  6968   000D7C  3623               	rlcf	(___fldiv@rem+1)^0,f,c
  6969   000D7E  3624               	rlcf	(___fldiv@rem+2)^0,f,c
  6970   000D80  3625               	rlcf	(___fldiv@rem+3)^0,f,c
  6971   000D82  90D8               	bcf	status,0,c
  6972   000D84  3616               	rlcf	___fldiv@b^0,f,c
  6973   000D86  3617               	rlcf	(___fldiv@b+1)^0,f,c
  6974   000D88  3618               	rlcf	(___fldiv@b+2)^0,f,c
  6975   000D8A  3619               	rlcf	(___fldiv@b+3)^0,f,c
  6976   000D8C  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  6977   000D8E  EFCB  F006         	goto	u2531
  6978   000D92  EFCD  F006         	goto	u2530
  6979   000D96                     u2531:
  6980   000D96  EFCE  F006         	goto	l1329
  6981   000D9A                     u2530:
  6982   000D9A  8016               	bsf	___fldiv@b^0,0,c
  6983   000D9C                     l1329:
  6984   000D9C  90D8               	bcf	status,0,c
  6985   000D9E  3629               	rlcf	___fldiv@grs^0,f,c
  6986   000DA0  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  6987   000DA2  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  6988   000DA4  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  6989   000DA6                     l3201:
  6990   000DA6  501A               	movf	___fldiv@a^0,w,c
  6991   000DA8  5C22               	subwf	___fldiv@rem^0,w,c
  6992   000DAA  501B               	movf	(___fldiv@a+1)^0,w,c
  6993   000DAC  5823               	subwfb	(___fldiv@rem+1)^0,w,c
  6994   000DAE  501C               	movf	(___fldiv@a+2)^0,w,c
  6995   000DB0  5824               	subwfb	(___fldiv@rem+2)^0,w,c
  6996   000DB2  501D               	movf	(___fldiv@a+3)^0,w,c
  6997   000DB4  5825               	subwfb	(___fldiv@rem+3)^0,w,c
  6998   000DB6  A0D8               	btfss	status,0,c
  6999   000DB8  EFE0  F006         	goto	u2541
  7000   000DBC  EFE2  F006         	goto	u2540
  7001   000DC0                     u2541:
  7002   000DC0  EFEB  F006         	goto	l3207
  7003   000DC4                     u2540:
  7004   000DC4  8C2C               	bsf	(___fldiv@grs+3)^0,6,c
  7005   000DC6  501A               	movf	___fldiv@a^0,w,c
  7006   000DC8  5E22               	subwf	___fldiv@rem^0,f,c
  7007   000DCA  501B               	movf	(___fldiv@a+1)^0,w,c
  7008   000DCC  5A23               	subwfb	(___fldiv@rem+1)^0,f,c
  7009   000DCE  501C               	movf	(___fldiv@a+2)^0,w,c
  7010   000DD0  5A24               	subwfb	(___fldiv@rem+2)^0,f,c
  7011   000DD2  501D               	movf	(___fldiv@a+3)^0,w,c
  7012   000DD4  5A25               	subwfb	(___fldiv@rem+3)^0,f,c
  7013   000DD6                     l3207:
  7014   000DD6  2A2E               	incf	___fldiv@aexp^0,f,c
  7015   000DD8                     l1326:
  7016   000DD8  0E19               	movlw	25
  7017   000DDA  642E               	cpfsgt	___fldiv@aexp^0,c
  7018   000DDC  EFF2  F006         	goto	u2551
  7019   000DE0  EFF4  F006         	goto	u2550
  7020   000DE4                     u2551:
  7021   000DE4  EFB4  F006         	goto	l3193
  7022   000DE8                     u2550:
  7023   000DE8  5022               	movf	___fldiv@rem^0,w,c
  7024   000DEA  1023               	iorwf	(___fldiv@rem+1)^0,w,c
  7025   000DEC  1024               	iorwf	(___fldiv@rem+2)^0,w,c
  7026   000DEE  1025               	iorwf	(___fldiv@rem+3)^0,w,c
  7027   000DF0  B4D8               	btfsc	status,2,c
  7028   000DF2  EFFD  F006         	goto	u2561
  7029   000DF6  EFFF  F006         	goto	u2560
  7030   000DFA                     u2561:
  7031   000DFA  EF17  F007         	goto	l3219
  7032   000DFE                     u2560:
  7033   000DFE  8029               	bsf	___fldiv@grs^0,0,c
  7034   000E00  EF17  F007         	goto	l3219
  7035   000E04                     l3213:
  7036   000E04  90D8               	bcf	status,0,c
  7037   000E06  3616               	rlcf	___fldiv@b^0,f,c
  7038   000E08  3617               	rlcf	(___fldiv@b+1)^0,f,c
  7039   000E0A  3618               	rlcf	(___fldiv@b+2)^0,f,c
  7040   000E0C  3619               	rlcf	(___fldiv@b+3)^0,f,c
  7041   000E0E  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  7042   000E10  EF0C  F007         	goto	u2571
  7043   000E14  EF0E  F007         	goto	u2570
  7044   000E18                     u2571:
  7045   000E18  EF0F  F007         	goto	l1335
  7046   000E1C                     u2570:
  7047   000E1C  8016               	bsf	___fldiv@b^0,0,c
  7048   000E1E                     l1335:
  7049   000E1E  90D8               	bcf	status,0,c
  7050   000E20  3629               	rlcf	___fldiv@grs^0,f,c
  7051   000E22  362A               	rlcf	(___fldiv@grs+1)^0,f,c
  7052   000E24  362B               	rlcf	(___fldiv@grs+2)^0,f,c
  7053   000E26  362C               	rlcf	(___fldiv@grs+3)^0,f,c
  7054   000E28  0627               	decf	___fldiv@new_exp^0,f,c
  7055   000E2A  A0D8               	btfss	status,0,c
  7056   000E2C  0628               	decf	(___fldiv@new_exp+1)^0,f,c
  7057   000E2E                     l3219:
  7058   000E2E  AE18               	btfss	(___fldiv@b+2)^0,7,c
  7059   000E30  EF1C  F007         	goto	u2581
  7060   000E34  EF1E  F007         	goto	u2580
  7061   000E38                     u2581:
  7062   000E38  EF02  F007         	goto	l3213
  7063   000E3C                     u2580:
  7064   000E3C  0E00               	movlw	0
  7065   000E3E  6E2E               	movwf	___fldiv@aexp^0,c
  7066   000E40  AE2C               	btfss	(___fldiv@grs+3)^0,7,c
  7067   000E42  EF25  F007         	goto	u2591
  7068   000E46  EF27  F007         	goto	u2590
  7069   000E4A                     u2591:
  7070   000E4A  EF4B  F007         	goto	l1337
  7071   000E4E                     u2590:
  7072   000E4E  0EFF               	movlw	255
  7073   000E50  1429               	andwf	___fldiv@grs^0,w,c
  7074   000E52  6E1E               	movwf	??___fldiv^0,c
  7075   000E54  0EFF               	movlw	255
  7076   000E56  142A               	andwf	(___fldiv@grs+1)^0,w,c
  7077   000E58  6E1F               	movwf	(??___fldiv+1)^0,c
  7078   000E5A  0EFF               	movlw	255
  7079   000E5C  142B               	andwf	(___fldiv@grs+2)^0,w,c
  7080   000E5E  6E20               	movwf	(??___fldiv+2)^0,c
  7081   000E60  0E7F               	movlw	127
  7082   000E62  142C               	andwf	(___fldiv@grs+3)^0,w,c
  7083   000E64  6E21               	movwf	(??___fldiv+3)^0,c
  7084   000E66  501E               	movf	??___fldiv^0,w,c
  7085   000E68  101F               	iorwf	(??___fldiv+1)^0,w,c
  7086   000E6A  1020               	iorwf	(??___fldiv+2)^0,w,c
  7087   000E6C  1021               	iorwf	(??___fldiv+3)^0,w,c
  7088   000E6E  B4D8               	btfsc	status,2,c
  7089   000E70  EF3C  F007         	goto	u2601
  7090   000E74  EF3E  F007         	goto	u2600
  7091   000E78                     u2601:
  7092   000E78  EF42  F007         	goto	l1338
  7093   000E7C                     u2600:
  7094   000E7C                     l3227:
  7095   000E7C  0E01               	movlw	1
  7096   000E7E  6E2E               	movwf	___fldiv@aexp^0,c
  7097   000E80  EF4B  F007         	goto	l1337
  7098   000E84                     l1338:
  7099   000E84  A016               	btfss	___fldiv@b^0,0,c
  7100   000E86  EF47  F007         	goto	u2611
  7101   000E8A  EF49  F007         	goto	u2610
  7102   000E8E                     u2611:
  7103   000E8E  EF4B  F007         	goto	l1337
  7104   000E92                     u2610:
  7105   000E92  EF3E  F007         	goto	l3227
  7106   000E96                     l1337:
  7107   000E96  502E               	movf	___fldiv@aexp^0,w,c
  7108   000E98  B4D8               	btfsc	status,2,c
  7109   000E9A  EF51  F007         	goto	u2621
  7110   000E9E  EF53  F007         	goto	u2620
  7111   000EA2                     u2621:
  7112   000EA2  EF77  F007         	goto	l3239
  7113   000EA6                     u2620:
  7114   000EA6  0E01               	movlw	1
  7115   000EA8  2616               	addwf	___fldiv@b^0,f,c
  7116   000EAA  0E00               	movlw	0
  7117   000EAC  2217               	addwfc	(___fldiv@b+1)^0,f,c
  7118   000EAE  2218               	addwfc	(___fldiv@b+2)^0,f,c
  7119   000EB0  2219               	addwfc	(___fldiv@b+3)^0,f,c
  7120   000EB2  A019               	btfss	(___fldiv@b+3)^0,0,c
  7121   000EB4  EF5E  F007         	goto	u2631
  7122   000EB8  EF60  F007         	goto	u2630
  7123   000EBC                     u2631:
  7124   000EBC  EF77  F007         	goto	l3239
  7125   000EC0                     u2630:
  7126   000EC0  C016  F01E         	movff	___fldiv@b,??___fldiv
  7127   000EC4  C017  F01F         	movff	___fldiv@b+1,??___fldiv+1
  7128   000EC8  C018  F020         	movff	___fldiv@b+2,??___fldiv+2
  7129   000ECC  C019  F021         	movff	___fldiv@b+3,??___fldiv+3
  7130   000ED0  3421               	rlcf	(??___fldiv+3)^0,w,c
  7131   000ED2  3221               	rrcf	(??___fldiv+3)^0,f,c
  7132   000ED4  3220               	rrcf	(??___fldiv+2)^0,f,c
  7133   000ED6  321F               	rrcf	(??___fldiv+1)^0,f,c
  7134   000ED8  321E               	rrcf	??___fldiv^0,f,c
  7135   000EDA  C01E  F016         	movff	??___fldiv,___fldiv@b
  7136   000EDE  C01F  F017         	movff	??___fldiv+1,___fldiv@b+1
  7137   000EE2  C020  F018         	movff	??___fldiv+2,___fldiv@b+2
  7138   000EE6  C021  F019         	movff	??___fldiv+3,___fldiv@b+3
  7139   000EEA  4A27               	infsnz	___fldiv@new_exp^0,f,c
  7140   000EEC  2A28               	incf	(___fldiv@new_exp+1)^0,f,c
  7141   000EEE                     l3239:
  7142   000EEE  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7143   000EF0  EF82  F007         	goto	u2641
  7144   000EF4  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  7145   000EF6  E108               	bnz	u2640
  7146   000EF8  2827               	incf	___fldiv@new_exp^0,w,c
  7147   000EFA  A0D8               	btfss	status,0,c
  7148   000EFC  EF82  F007         	goto	u2641
  7149   000F00  EF84  F007         	goto	u2640
  7150   000F04                     u2641:
  7151   000F04  EF8F  F007         	goto	l3243
  7152   000F08                     u2640:
  7153   000F08  0E00               	movlw	0
  7154   000F0A  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  7155   000F0C  6827               	setf	___fldiv@new_exp^0,c
  7156   000F0E  0E00               	movlw	0
  7157   000F10  6E16               	movwf	___fldiv@b^0,c
  7158   000F12  0E00               	movlw	0
  7159   000F14  6E17               	movwf	(___fldiv@b+1)^0,c
  7160   000F16  0E00               	movlw	0
  7161   000F18  6E18               	movwf	(___fldiv@b+2)^0,c
  7162   000F1A  0E00               	movlw	0
  7163   000F1C  6E19               	movwf	(___fldiv@b+3)^0,c
  7164   000F1E                     l3243:
  7165   000F1E  BE28               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7166   000F20  EF9C  F007         	goto	u2650
  7167   000F24  5028               	movf	(___fldiv@new_exp+1)^0,w,c
  7168   000F26  E106               	bnz	u2651
  7169   000F28  0427               	decf	___fldiv@new_exp^0,w,c
  7170   000F2A  B0D8               	btfsc	status,0,c
  7171   000F2C  EF9A  F007         	goto	u2651
  7172   000F30  EF9C  F007         	goto	u2650
  7173   000F34                     u2651:
  7174   000F34  EFAA  F007         	goto	l3247
  7175   000F38                     u2650:
  7176   000F38  0E00               	movlw	0
  7177   000F3A  6E28               	movwf	(___fldiv@new_exp+1)^0,c
  7178   000F3C  0E00               	movlw	0
  7179   000F3E  6E27               	movwf	___fldiv@new_exp^0,c
  7180   000F40  0E00               	movlw	0
  7181   000F42  6E16               	movwf	___fldiv@b^0,c
  7182   000F44  0E00               	movlw	0
  7183   000F46  6E17               	movwf	(___fldiv@b+1)^0,c
  7184   000F48  0E00               	movlw	0
  7185   000F4A  6E18               	movwf	(___fldiv@b+2)^0,c
  7186   000F4C  0E00               	movlw	0
  7187   000F4E  6E19               	movwf	(___fldiv@b+3)^0,c
  7188   000F50  0E00               	movlw	0
  7189   000F52  6E26               	movwf	___fldiv@sign^0,c
  7190   000F54                     l3247:
  7191   000F54  C027  F02D         	movff	___fldiv@new_exp,___fldiv@bexp
  7192   000F58  A02D               	btfss	___fldiv@bexp^0,0,c
  7193   000F5A  EFB1  F007         	goto	u2661
  7194   000F5E  EFB3  F007         	goto	u2660
  7195   000F62                     u2661:
  7196   000F62  EFB6  F007         	goto	l3253
  7197   000F66                     u2660:
  7198   000F66  8E18               	bsf	(___fldiv@b+2)^0,7,c
  7199   000F68  EFB7  F007         	goto	l3255
  7200   000F6C                     l3253:
  7201   000F6C  9E18               	bcf	(___fldiv@b+2)^0,7,c
  7202   000F6E                     l3255:
  7203   000F6E  90D8               	bcf	status,0,c
  7204   000F70  302D               	rrcf	___fldiv@bexp^0,w,c
  7205   000F72  6E19               	movwf	(___fldiv@b+3)^0,c
  7206   000F74  EF6D  F006         	goto	l3169
  7207   000F78                     l1324:
  7208   000F78  0012               	return		;funcret
  7209   000F7A                     __end_of___fldiv:
  7210                           	callstack 0
  7211                           
  7212 ;; *************** function _clear_log *****************
  7213 ;; Defined at:
  7214 ;;		line 284 in file "common.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;		None
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;  y               4   17[COMRAM] unsigned long 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  1    wreg      void 
  7221 ;; Registers used:
  7222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7228 ;;      Params:         0       0       0       0       0       0       0
  7229 ;;      Locals:         4       0       0       0       0       0       0
  7230 ;;      Temps:          0       0       0       0       0       0       0
  7231 ;;      Totals:         4       0       0       0       0       0       0
  7232 ;;Total ram usage:        4 bytes
  7233 ;; Hardware stack levels used: 1
  7234 ;; Hardware stack levels required when called: 4
  7235 ;; This function calls:
  7236 ;;		_clcd_print
  7237 ;;		_clcd_write
  7238 ;; This function is called by:
  7239 ;;		_main
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           	psect	text27
  7244   0022BC                     __ptext27:
  7245                           	callstack 0
  7246   0022BC                     _clear_log:
  7247                           	callstack 26
  7248   0022BC                     
  7249                           ;common.c: 285:     no_of_event = 0;
  7250   0022BC  0E00               	movlw	0
  7251   0022BE  6E55               	movwf	(_no_of_event+1)^0,c
  7252   0022C0  0E00               	movlw	0
  7253   0022C2  6E54               	movwf	_no_of_event^0,c
  7254                           
  7255                           ;common.c: 286:     MENU_FLAG = 0;
  7256   0022C4  0E00               	movlw	0
  7257   0022C6  6E4E               	movwf	(_MENU_FLAG+1)^0,c
  7258   0022C8  0E00               	movlw	0
  7259   0022CA  6E4D               	movwf	_MENU_FLAG^0,c
  7260   0022CC                     
  7261                           ;common.c: 287:     clcd_print("CLAER LOG", (0x80 + (3)));
  7262   0022CC  0EE2               	movlw	low STR_18
  7263   0022CE  6E0C               	movwf	clcd_print@str^0,c
  7264   0022D0  0E7F               	movlw	high STR_18
  7265   0022D2  6E0D               	movwf	(clcd_print@str+1)^0,c
  7266   0022D4  0E83               	movlw	131
  7267   0022D6  6E0E               	movwf	clcd_print@addr^0,c
  7268   0022D8  ECDD  F010         	call	_clcd_print	;wreg free
  7269   0022DC                     
  7270                           ;common.c: 288:     clcd_print("SUCCESSFULLY", (0xC0 + (3)));
  7271   0022DC  0EC0               	movlw	low STR_19
  7272   0022DE  6E0C               	movwf	clcd_print@str^0,c
  7273   0022E0  0E7F               	movlw	high STR_19
  7274   0022E2  6E0D               	movwf	(clcd_print@str+1)^0,c
  7275   0022E4  0EC3               	movlw	195
  7276   0022E6  6E0E               	movwf	clcd_print@addr^0,c
  7277   0022E8  ECDD  F010         	call	_clcd_print	;wreg free
  7278                           
  7279                           ;common.c: 289:     for (unsigned long int y = 0xFFFFA; --y;);
  7280   0022EC  0EFA               	movlw	250
  7281   0022EE  6E12               	movwf	clear_log@y^0,c
  7282   0022F0  0EFF               	movlw	255
  7283   0022F2  6E13               	movwf	(clear_log@y+1)^0,c
  7284   0022F4  0E0F               	movlw	15
  7285   0022F6  6E14               	movwf	(clear_log@y+2)^0,c
  7286   0022F8  0E00               	movlw	0
  7287   0022FA  6E15               	movwf	(clear_log@y+3)^0,c
  7288   0022FC                     l3813:
  7289   0022FC  0612               	decf	clear_log@y^0,f,c
  7290   0022FE  0E00               	movlw	0
  7291   002300  5A13               	subwfb	(clear_log@y+1)^0,f,c
  7292   002302  5A14               	subwfb	(clear_log@y+2)^0,f,c
  7293   002304  5A15               	subwfb	(clear_log@y+3)^0,f,c
  7294   002306  5012               	movf	clear_log@y^0,w,c
  7295   002308  1013               	iorwf	(clear_log@y+1)^0,w,c
  7296   00230A  1014               	iorwf	(clear_log@y+2)^0,w,c
  7297   00230C  1015               	iorwf	(clear_log@y+3)^0,w,c
  7298   00230E  A4D8               	btfss	status,2,c
  7299   002310  EF8C  F011         	goto	u3451
  7300   002314  EF8E  F011         	goto	u3450
  7301   002318                     u3451:
  7302   002318  EF7E  F011         	goto	l3813
  7303   00231C                     u3450:
  7304   00231C                     
  7305                           ;common.c: 290:     SCREEN_FLAG = 0;
  7306   00231C  0E00               	movlw	0
  7307   00231E  6E50               	movwf	(_SCREEN_FLAG+1)^0,c
  7308   002320  0E00               	movlw	0
  7309   002322  6E4F               	movwf	_SCREEN_FLAG^0,c
  7310                           
  7311                           ;common.c: 291:     EI = 9;
  7312   002324  0E09               	movlw	9
  7313   002326  0100               	movlb	0	; () banked
  7314   002328  6FAF               	movwf	_EI& (0+255),b
  7315                           
  7316                           ;common.c: 292:     EF = 1;
  7317   00232A  0E01               	movlw	1
  7318   00232C  6FB0               	movwf	_EF& (0+255),b
  7319                           
  7320                           ;common.c: 293:     flag = 1;
  7321   00232E  0E01               	movlw	1
  7322   002330  6FD0               	movwf	_flag& (0+255),b
  7323   002332                     
  7324                           ; BSR set to: 0
  7325                           ;common.c: 294:     clcd_write(0x01);
  7326   002332  0E01               	movlw	1
  7327   002334  ECF7  F012         	call	_clcd_write
  7328   002338  0012               	return		;funcret
  7329   00233A                     __end_of_clear_log:
  7330                           	callstack 0
  7331                           
  7332 ;; *************** function _change_password *****************
  7333 ;; Defined at:
  7334 ;;		line 480 in file "common.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;		None
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;  y               4   25[COMRAM] unsigned long 
  7339 ;;  y               4   21[COMRAM] unsigned long 
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  1    wreg      void 
  7342 ;; Registers used:
  7343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7349 ;;      Params:         0       0       0       0       0       0       0
  7350 ;;      Locals:         8       0       0       0       0       0       0
  7351 ;;      Temps:          4       0       0       0       0       0       0
  7352 ;;      Totals:        12       0       0       0       0       0       0
  7353 ;;Total ram usage:       12 bytes
  7354 ;; Hardware stack levels used: 1
  7355 ;; Hardware stack levels required when called: 4
  7356 ;; This function calls:
  7357 ;;		_clcd_print
  7358 ;;		_clcd_putch
  7359 ;;		_clcd_write
  7360 ;;		_write_internal_eeprom
  7361 ;; This function is called by:
  7362 ;;		_main
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           	psect	text28
  7367   000F7A                     __ptext28:
  7368                           	callstack 0
  7369   000F7A                     _change_password:
  7370                           	callstack 26
  7371   000F7A                     
  7372                           ;common.c: 481:     if (index < 4) {
  7373   000F7A  BE48               	btfsc	(_index+1)^0,7,c
  7374   000F7C  EFCB  F007         	goto	u3690
  7375   000F80  5048               	movf	(_index+1)^0,w,c
  7376   000F82  E107               	bnz	u3691
  7377   000F84  0E04               	movlw	4
  7378   000F86  5C47               	subwf	_index^0,w,c
  7379   000F88  B0D8               	btfsc	status,0,c
  7380   000F8A  EFC9  F007         	goto	u3691
  7381   000F8E  EFCB  F007         	goto	u3690
  7382   000F92                     u3691:
  7383   000F92  EF76  F008         	goto	l4013
  7384   000F96                     u3690:
  7385   000F96                     
  7386                           ;common.c: 482:         if (once) {
  7387   000F96  0100               	movlb	0	; () banked
  7388   000F98  51CB               	movf	_once& (0+255),w,b
  7389   000F9A  11CC               	iorwf	(_once+1)& (0+255),w,b
  7390   000F9C  B4D8               	btfsc	status,2,c
  7391   000F9E  EFD3  F007         	goto	u3701
  7392   000FA2  EFD5  F007         	goto	u3700
  7393   000FA6                     u3701:
  7394   000FA6  EFEC  F007         	goto	l3981
  7395   000FAA                     u3700:
  7396   000FAA                     
  7397                           ; BSR set to: 0
  7398                           ;common.c: 483:             once = 0;
  7399   000FAA  0E00               	movlw	0
  7400   000FAC  6FCC               	movwf	(_once+1)& (0+255),b
  7401   000FAE  0E00               	movlw	0
  7402   000FB0  6FCB               	movwf	_once& (0+255),b
  7403   000FB2                     
  7404                           ; BSR set to: 0
  7405                           ;common.c: 484:             clcd_write(0x01);
  7406   000FB2  0E01               	movlw	1
  7407   000FB4  ECF7  F012         	call	_clcd_write
  7408   000FB8                     
  7409                           ;common.c: 485:             clcd_print(" ENTER NEW PSW ", (0x80 + (0)));
  7410   000FB8  0E59               	movlw	low STR_26
  7411   000FBA  6E0C               	movwf	clcd_print@str^0,c
  7412   000FBC  0E7F               	movlw	high STR_26
  7413   000FBE  6E0D               	movwf	(clcd_print@str+1)^0,c
  7414   000FC0  0E80               	movlw	128
  7415   000FC2  6E0E               	movwf	clcd_print@addr^0,c
  7416   000FC4  ECDD  F010         	call	_clcd_print	;wreg free
  7417   000FC8                     
  7418                           ;common.c: 486:             clcd_write(0xC3);
  7419   000FC8  0EC3               	movlw	195
  7420   000FCA  ECF7  F012         	call	_clcd_write
  7421   000FCE                     
  7422                           ;common.c: 487:             clcd_write(0x0F);
  7423   000FCE  0E0F               	movlw	15
  7424   000FD0  ECF7  F012         	call	_clcd_write
  7425   000FD4                     
  7426                           ;common.c: 488:             key = 0;
  7427   000FD4  0E00               	movlw	0
  7428   000FD6  6E53               	movwf	_key^0,c
  7429   000FD8                     l3981:
  7430                           
  7431                           ;common.c: 491:         if (key == 5) {
  7432   000FD8  0E05               	movlw	5
  7433   000FDA  1853               	xorwf	_key^0,w,c
  7434   000FDC  A4D8               	btfss	status,2,c
  7435   000FDE  EFF3  F007         	goto	u3711
  7436   000FE2  EFF5  F007         	goto	u3710
  7437   000FE6                     u3711:
  7438   000FE6  EF3C  F008         	goto	l3997
  7439   000FEA                     u3710:
  7440   000FEA                     
  7441                           ;common.c: 492:             arr[index] = 0;
  7442   000FEA  5047               	movf	_index^0,w,c
  7443   000FEC  0F74               	addlw	low _arr
  7444   000FEE  6ED9               	movwf	fsr2l,c
  7445   000FF0  6ADA               	clrf	fsr2h,c
  7446   000FF2  6ADF               	clrf	indf2,c
  7447   000FF4                     
  7448                           ;common.c: 493:             clcd_putch('*', (0xC0 + (index + 3)));
  7449   000FF4  5047               	movf	_index^0,w,c
  7450   000FF6  0FC3               	addlw	195
  7451   000FF8  6E08               	movwf	clcd_putch@addr^0,c
  7452   000FFA  0E2A               	movlw	42
  7453   000FFC  ECDB  F012         	call	_clcd_putch
  7454   001000                     
  7455                           ;common.c: 494:             if (password) {
  7456   001000  0100               	movlb	0	; () banked
  7457   001002  51A4               	movf	_password& (0+255),w,b
  7458   001004  11A5               	iorwf	(_password+1)& (0+255),w,b
  7459   001006  B4D8               	btfsc	status,2,c
  7460   001008  EF08  F008         	goto	u3721
  7461   00100C  EF0A  F008         	goto	u3720
  7462   001010                     u3721:
  7463   001010  EF27  F008         	goto	l3993
  7464   001014                     u3720:
  7465   001014                     
  7466                           ; BSR set to: 0
  7467                           ;common.c: 495:                 if (arr[index] == dummy[index]) {
  7468   001014  5047               	movf	_index^0,w,c
  7469   001016  0D02               	mullw	2
  7470   001018  50F3               	movf	243,w,c
  7471   00101A  0F60               	addlw	low _dummy
  7472   00101C  6ED9               	movwf	fsr2l,c
  7473   00101E  6ADA               	clrf	fsr2h,c
  7474   001020  5047               	movf	_index^0,w,c
  7475   001022  0F74               	addlw	low _arr
  7476   001024  6EE1               	movwf	fsr1l,c
  7477   001026  6AE2               	clrf	fsr1h,c
  7478   001028  50E7               	movf	indf1,w,c
  7479   00102A  6E14               	movwf	(??_change_password+2)^0,c
  7480   00102C  6A15               	clrf	(??_change_password+3)^0,c
  7481   00102E  50DE               	movf	postinc2,w,c
  7482   001030  1814               	xorwf	(??_change_password+2)^0,w,c
  7483   001032  E107               	bnz	u3731
  7484   001034  50DE               	movf	postinc2,w,c
  7485   001036  1815               	xorwf	(??_change_password+3)^0,w,c
  7486   001038  A4D8               	btfss	status,2,c
  7487   00103A  EF21  F008         	goto	u3731
  7488   00103E  EF23  F008         	goto	u3730
  7489   001042                     u3731:
  7490   001042  EF38  F008         	goto	l3995
  7491   001046                     u3730:
  7492   001046                     l3991:
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;common.c: 496:                     ++count;
  7496   001046  4BAA               	infsnz	_count& (0+255),f,b
  7497   001048  2BAB               	incf	(_count+1)& (0+255),f,b
  7498   00104A  EF38  F008         	goto	l3995
  7499   00104E                     l3993:
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;common.c: 499:                 dummy[index] = arr[index];
  7503   00104E  5047               	movf	_index^0,w,c
  7504   001050  0F74               	addlw	low _arr
  7505   001052  6ED9               	movwf	fsr2l,c
  7506   001054  6ADA               	clrf	fsr2h,c
  7507   001056  50DF               	movf	indf2,w,c
  7508   001058  6E12               	movwf	??_change_password^0,c
  7509   00105A  6A13               	clrf	(??_change_password+1)^0,c
  7510   00105C  5047               	movf	_index^0,w,c
  7511   00105E  0D02               	mullw	2
  7512   001060  50F3               	movf	243,w,c
  7513   001062  0F60               	addlw	low _dummy
  7514   001064  6ED9               	movwf	fsr2l,c
  7515   001066  6ADA               	clrf	fsr2h,c
  7516   001068  C012  FFDE         	movff	??_change_password,postinc2
  7517   00106C  C013  FFDD         	movff	??_change_password+1,postdec2
  7518   001070                     l3995:
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;common.c: 501:             ++index;
  7522   001070  4A47               	infsnz	_index^0,f,c
  7523   001072  2A48               	incf	(_index+1)^0,f,c
  7524                           
  7525                           ;common.c: 502:         } else if (key == 6) {
  7526   001074  EF5E  F009         	goto	l318
  7527   001078                     l3997:
  7528   001078  0E06               	movlw	6
  7529   00107A  1853               	xorwf	_key^0,w,c
  7530   00107C  A4D8               	btfss	status,2,c
  7531   00107E  EF43  F008         	goto	u3741
  7532   001082  EF45  F008         	goto	u3740
  7533   001086                     u3741:
  7534   001086  EF5E  F009         	goto	l318
  7535   00108A                     u3740:
  7536   00108A                     
  7537                           ;common.c: 503:             arr[index] = 1;
  7538   00108A  5047               	movf	_index^0,w,c
  7539   00108C  0F74               	addlw	low _arr
  7540   00108E  6ED9               	movwf	fsr2l,c
  7541   001090  6ADA               	clrf	fsr2h,c
  7542   001092  0E01               	movlw	1
  7543   001094  6EDF               	movwf	indf2,c
  7544   001096                     
  7545                           ;common.c: 504:             clcd_putch('*', (0xC0 + (index + 3)));
  7546   001096  5047               	movf	_index^0,w,c
  7547   001098  0FC3               	addlw	195
  7548   00109A  6E08               	movwf	clcd_putch@addr^0,c
  7549   00109C  0E2A               	movlw	42
  7550   00109E  ECDB  F012         	call	_clcd_putch
  7551   0010A2                     
  7552                           ;common.c: 505:             if (password) {
  7553   0010A2  0100               	movlb	0	; () banked
  7554   0010A4  51A4               	movf	_password& (0+255),w,b
  7555   0010A6  11A5               	iorwf	(_password+1)& (0+255),w,b
  7556   0010A8  B4D8               	btfsc	status,2,c
  7557   0010AA  EF59  F008         	goto	u3751
  7558   0010AE  EF5B  F008         	goto	u3750
  7559   0010B2                     u3751:
  7560   0010B2  EF27  F008         	goto	l3993
  7561   0010B6                     u3750:
  7562   0010B6                     
  7563                           ; BSR set to: 0
  7564                           ;common.c: 506:                 if (arr[index] == dummy[index]) {
  7565   0010B6  5047               	movf	_index^0,w,c
  7566   0010B8  0D02               	mullw	2
  7567   0010BA  50F3               	movf	243,w,c
  7568   0010BC  0F60               	addlw	low _dummy
  7569   0010BE  6ED9               	movwf	fsr2l,c
  7570   0010C0  6ADA               	clrf	fsr2h,c
  7571   0010C2  5047               	movf	_index^0,w,c
  7572   0010C4  0F74               	addlw	low _arr
  7573   0010C6  6EE1               	movwf	fsr1l,c
  7574   0010C8  6AE2               	clrf	fsr1h,c
  7575   0010CA  50E7               	movf	indf1,w,c
  7576   0010CC  6E14               	movwf	(??_change_password+2)^0,c
  7577   0010CE  6A15               	clrf	(??_change_password+3)^0,c
  7578   0010D0  50DE               	movf	postinc2,w,c
  7579   0010D2  1814               	xorwf	(??_change_password+2)^0,w,c
  7580   0010D4  E107               	bnz	u3761
  7581   0010D6  50DE               	movf	postinc2,w,c
  7582   0010D8  1815               	xorwf	(??_change_password+3)^0,w,c
  7583   0010DA  A4D8               	btfss	status,2,c
  7584   0010DC  EF72  F008         	goto	u3761
  7585   0010E0  EF74  F008         	goto	u3760
  7586   0010E4                     u3761:
  7587   0010E4  EF38  F008         	goto	l3995
  7588   0010E8                     u3760:
  7589   0010E8  EF23  F008         	goto	l3991
  7590   0010EC                     l4013:
  7591                           
  7592                           ;common.c: 516:         if (index == 4 && !password) {
  7593   0010EC  0E04               	movlw	4
  7594   0010EE  1847               	xorwf	_index^0,w,c
  7595   0010F0  1048               	iorwf	(_index+1)^0,w,c
  7596   0010F2  A4D8               	btfss	status,2,c
  7597   0010F4  EF7E  F008         	goto	u3771
  7598   0010F8  EF80  F008         	goto	u3770
  7599   0010FC                     u3771:
  7600   0010FC  EFAA  F008         	goto	l4031
  7601   001100                     u3770:
  7602   001100  0100               	movlb	0	; () banked
  7603   001102  51A4               	movf	_password& (0+255),w,b
  7604   001104  11A5               	iorwf	(_password+1)& (0+255),w,b
  7605   001106  A4D8               	btfss	status,2,c
  7606   001108  EF88  F008         	goto	u3781
  7607   00110C  EF8A  F008         	goto	u3780
  7608   001110                     u3781:
  7609   001110  EFAA  F008         	goto	l4031
  7610   001114                     u3780:
  7611   001114                     
  7612                           ; BSR set to: 0
  7613                           ;common.c: 517:             clcd_write(0x01);
  7614   001114  0E01               	movlw	1
  7615   001116  ECF7  F012         	call	_clcd_write
  7616   00111A                     
  7617                           ;common.c: 518:             clcd_print(" ENTER CNF PSW ", (0x80 + (0)));
  7618   00111A  0E49               	movlw	low STR_27
  7619   00111C  6E0C               	movwf	clcd_print@str^0,c
  7620   00111E  0E7F               	movlw	high STR_27
  7621   001120  6E0D               	movwf	(clcd_print@str+1)^0,c
  7622   001122  0E80               	movlw	128
  7623   001124  6E0E               	movwf	clcd_print@addr^0,c
  7624   001126  ECDD  F010         	call	_clcd_print	;wreg free
  7625   00112A                     
  7626                           ;common.c: 519:             clcd_write(0xC3);
  7627   00112A  0EC3               	movlw	195
  7628   00112C  ECF7  F012         	call	_clcd_write
  7629   001130                     
  7630                           ;common.c: 520:             clcd_write(0x0F);
  7631   001130  0E0F               	movlw	15
  7632   001132  ECF7  F012         	call	_clcd_write
  7633   001136                     
  7634                           ;common.c: 521:             index = 0;
  7635   001136  0E00               	movlw	0
  7636   001138  6E48               	movwf	(_index+1)^0,c
  7637   00113A  0E00               	movlw	0
  7638   00113C  6E47               	movwf	_index^0,c
  7639   00113E                     
  7640                           ;common.c: 522:             count = 0;
  7641   00113E  0E00               	movlw	0
  7642   001140  0100               	movlb	0	; () banked
  7643   001142  6FAB               	movwf	(_count+1)& (0+255),b
  7644   001144  0E00               	movlw	0
  7645   001146  6FAA               	movwf	_count& (0+255),b
  7646   001148                     
  7647                           ; BSR set to: 0
  7648                           ;common.c: 523:             password = 1;
  7649   001148  0E00               	movlw	0
  7650   00114A  6FA5               	movwf	(_password+1)& (0+255),b
  7651   00114C  0E01               	movlw	1
  7652   00114E  6FA4               	movwf	_password& (0+255),b
  7653                           
  7654                           ;common.c: 524:         } else if (index == 4 && index == count) {
  7655   001150  EF5E  F009         	goto	l318
  7656   001154                     l4031:
  7657   001154  0E04               	movlw	4
  7658   001156  1847               	xorwf	_index^0,w,c
  7659   001158  1048               	iorwf	(_index+1)^0,w,c
  7660   00115A  A4D8               	btfss	status,2,c
  7661   00115C  EFB2  F008         	goto	u3791
  7662   001160  EFB4  F008         	goto	u3790
  7663   001164                     u3791:
  7664   001164  EF24  F009         	goto	l4071
  7665   001168                     u3790:
  7666   001168  0100               	movlb	0	; () banked
  7667   00116A  51AA               	movf	_count& (0+255),w,b
  7668   00116C  1847               	xorwf	_index^0,w,c
  7669   00116E  E107               	bnz	u3801
  7670   001170  51AB               	movf	(_count+1)& (0+255),w,b
  7671   001172  1848               	xorwf	(_index+1)^0,w,c
  7672   001174  A4D8               	btfss	status,2,c
  7673   001176  EFBF  F008         	goto	u3801
  7674   00117A  EFC1  F008         	goto	u3800
  7675   00117E                     u3801:
  7676   00117E  EF24  F009         	goto	l4071
  7677   001182                     u3800:
  7678   001182                     
  7679                           ; BSR set to: 0
  7680                           ;common.c: 525:             clcd_write(0x0C);
  7681   001182  0E0C               	movlw	12
  7682   001184  ECF7  F012         	call	_clcd_write
  7683                           
  7684                           ;common.c: 526:             clcd_write(0x01);
  7685   001188  0E01               	movlw	1
  7686   00118A  ECF7  F012         	call	_clcd_write
  7687   00118E                     
  7688                           ;common.c: 527:             clcd_print(" PSW CHANGED", (0x80 + (3)));
  7689   00118E  0EB3               	movlw	low STR_28
  7690   001190  6E0C               	movwf	clcd_print@str^0,c
  7691   001192  0E7F               	movlw	high STR_28
  7692   001194  6E0D               	movwf	(clcd_print@str+1)^0,c
  7693   001196  0E83               	movlw	131
  7694   001198  6E0E               	movwf	clcd_print@addr^0,c
  7695   00119A  ECDD  F010         	call	_clcd_print	;wreg free
  7696   00119E                     
  7697                           ;common.c: 528:             clcd_print("SUCCESS...", (0xC0 + (5)));
  7698   00119E  0ECD               	movlw	low STR_29
  7699   0011A0  6E0C               	movwf	clcd_print@str^0,c
  7700   0011A2  0E7F               	movlw	high STR_29
  7701   0011A4  6E0D               	movwf	(clcd_print@str+1)^0,c
  7702   0011A6  0EC5               	movlw	197
  7703   0011A8  6E0E               	movwf	clcd_print@addr^0,c
  7704   0011AA  ECDD  F010         	call	_clcd_print	;wreg free
  7705   0011AE                     
  7706                           ;common.c: 529:             for (unsigned long y = 0xFFFFA; --y;);
  7707   0011AE  0EFA               	movlw	250
  7708   0011B0  6E16               	movwf	change_password@y^0,c
  7709   0011B2  0EFF               	movlw	255
  7710   0011B4  6E17               	movwf	(change_password@y+1)^0,c
  7711   0011B6  0E0F               	movlw	15
  7712   0011B8  6E18               	movwf	(change_password@y+2)^0,c
  7713   0011BA  0E00               	movlw	0
  7714   0011BC  6E19               	movwf	(change_password@y+3)^0,c
  7715   0011BE                     l4043:
  7716   0011BE  0616               	decf	change_password@y^0,f,c
  7717   0011C0  0E00               	movlw	0
  7718   0011C2  5A17               	subwfb	(change_password@y+1)^0,f,c
  7719   0011C4  5A18               	subwfb	(change_password@y+2)^0,f,c
  7720   0011C6  5A19               	subwfb	(change_password@y+3)^0,f,c
  7721   0011C8  5016               	movf	change_password@y^0,w,c
  7722   0011CA  1017               	iorwf	(change_password@y+1)^0,w,c
  7723   0011CC  1018               	iorwf	(change_password@y+2)^0,w,c
  7724   0011CE  1019               	iorwf	(change_password@y+3)^0,w,c
  7725   0011D0  A4D8               	btfss	status,2,c
  7726   0011D2  EFED  F008         	goto	u3811
  7727   0011D6  EFEF  F008         	goto	u3810
  7728   0011DA                     u3811:
  7729   0011DA  EFDF  F008         	goto	l4043
  7730   0011DE                     u3810:
  7731   0011DE                     
  7732                           ;common.c: 530:             clcd_write(0x01);
  7733   0011DE  0E01               	movlw	1
  7734   0011E0  ECF7  F012         	call	_clcd_write
  7735   0011E4                     
  7736                           ;common.c: 531:             index = 0;
  7737   0011E4  0E00               	movlw	0
  7738   0011E6  6E48               	movwf	(_index+1)^0,c
  7739   0011E8  0E00               	movlw	0
  7740   0011EA  6E47               	movwf	_index^0,c
  7741   0011EC                     
  7742                           ;common.c: 532:             count = 0;
  7743   0011EC  0E00               	movlw	0
  7744   0011EE  0100               	movlb	0	; () banked
  7745   0011F0  6FAB               	movwf	(_count+1)& (0+255),b
  7746   0011F2  0E00               	movlw	0
  7747   0011F4  6FAA               	movwf	_count& (0+255),b
  7748   0011F6                     
  7749                           ; BSR set to: 0
  7750                           ;common.c: 533:             once = 1;
  7751   0011F6  0E00               	movlw	0
  7752   0011F8  6FCC               	movwf	(_once+1)& (0+255),b
  7753   0011FA  0E01               	movlw	1
  7754   0011FC  6FCB               	movwf	_once& (0+255),b
  7755   0011FE                     
  7756                           ; BSR set to: 0
  7757                           ;common.c: 534:             flag = 1;
  7758   0011FE  0E01               	movlw	1
  7759   001200  6FD0               	movwf	_flag& (0+255),b
  7760   001202                     
  7761                           ; BSR set to: 0
  7762                           ;common.c: 535:             password = 0;
  7763   001202  0E00               	movlw	0
  7764   001204  6FA5               	movwf	(_password+1)& (0+255),b
  7765   001206  0E00               	movlw	0
  7766   001208  6FA4               	movwf	_password& (0+255),b
  7767   00120A                     
  7768                           ; BSR set to: 0
  7769                           ;common.c: 536:             write_internal_eeprom(0x64, arr[0]);
  7770   00120A  C074  F007         	movff	_arr,write_internal_eeprom@data
  7771   00120E  0E64               	movlw	100
  7772   001210  EC10  F013         	call	_write_internal_eeprom
  7773   001214                     
  7774                           ;common.c: 537:             write_internal_eeprom(0x65, arr[1]);
  7775   001214  C075  F007         	movff	_arr+1,write_internal_eeprom@data
  7776   001218  0E65               	movlw	101
  7777   00121A  EC10  F013         	call	_write_internal_eeprom
  7778   00121E                     
  7779                           ;common.c: 538:             write_internal_eeprom(0x66, arr[2]);
  7780   00121E  C076  F007         	movff	_arr+2,write_internal_eeprom@data
  7781   001222  0E66               	movlw	102
  7782   001224  EC10  F013         	call	_write_internal_eeprom
  7783   001228                     
  7784                           ;common.c: 539:             write_internal_eeprom(0x67, arr[3]);
  7785   001228  C077  F007         	movff	_arr+3,write_internal_eeprom@data
  7786   00122C  0E67               	movlw	103
  7787   00122E  EC10  F013         	call	_write_internal_eeprom
  7788   001232                     
  7789                           ;common.c: 540:             SCREEN_FLAG = 0;
  7790   001232  0E00               	movlw	0
  7791   001234  6E50               	movwf	(_SCREEN_FLAG+1)^0,c
  7792   001236  0E00               	movlw	0
  7793   001238  6E4F               	movwf	_SCREEN_FLAG^0,c
  7794   00123A                     
  7795                           ;common.c: 541:             EI = 11;
  7796   00123A  0E0B               	movlw	11
  7797   00123C  0100               	movlb	0	; () banked
  7798   00123E  6FAF               	movwf	_EI& (0+255),b
  7799   001240                     
  7800                           ; BSR set to: 0
  7801                           ;common.c: 542:             EF = 1;
  7802   001240  0E01               	movlw	1
  7803   001242  6FB0               	movwf	_EF& (0+255),b
  7804                           
  7805                           ;common.c: 543:         } else {
  7806   001244  EF5E  F009         	goto	l318
  7807   001248                     l4071:
  7808                           
  7809                           ;common.c: 544:             clcd_write(0x0C);
  7810   001248  0E0C               	movlw	12
  7811   00124A  ECF7  F012         	call	_clcd_write
  7812                           
  7813                           ;common.c: 545:             clcd_write(0x01);
  7814   00124E  0E01               	movlw	1
  7815   001250  ECF7  F012         	call	_clcd_write
  7816   001254                     
  7817                           ;common.c: 546:             clcd_print(" TRY AGAIN...", (0x80 + (0)));
  7818   001254  0E97               	movlw	low STR_30
  7819   001256  6E0C               	movwf	clcd_print@str^0,c
  7820   001258  0E7F               	movlw	high STR_30
  7821   00125A  6E0D               	movwf	(clcd_print@str+1)^0,c
  7822   00125C  0E80               	movlw	128
  7823   00125E  6E0E               	movwf	clcd_print@addr^0,c
  7824   001260  ECDD  F010         	call	_clcd_print	;wreg free
  7825   001264                     
  7826                           ;common.c: 547:             for (unsigned long y = 0xFFFFA; --y;);
  7827   001264  0EFA               	movlw	250
  7828   001266  6E1A               	movwf	change_password@y_192^0,c
  7829   001268  0EFF               	movlw	255
  7830   00126A  6E1B               	movwf	(change_password@y_192+1)^0,c
  7831   00126C  0E0F               	movlw	15
  7832   00126E  6E1C               	movwf	(change_password@y_192+2)^0,c
  7833   001270  0E00               	movlw	0
  7834   001272  6E1D               	movwf	(change_password@y_192+3)^0,c
  7835   001274                     l4077:
  7836   001274  061A               	decf	change_password@y_192^0,f,c
  7837   001276  0E00               	movlw	0
  7838   001278  5A1B               	subwfb	(change_password@y_192+1)^0,f,c
  7839   00127A  5A1C               	subwfb	(change_password@y_192+2)^0,f,c
  7840   00127C  5A1D               	subwfb	(change_password@y_192+3)^0,f,c
  7841   00127E  501A               	movf	change_password@y_192^0,w,c
  7842   001280  101B               	iorwf	(change_password@y_192+1)^0,w,c
  7843   001282  101C               	iorwf	(change_password@y_192+2)^0,w,c
  7844   001284  101D               	iorwf	(change_password@y_192+3)^0,w,c
  7845   001286  A4D8               	btfss	status,2,c
  7846   001288  EF48  F009         	goto	u3821
  7847   00128C  EF4A  F009         	goto	u3820
  7848   001290                     u3821:
  7849   001290  EF3A  F009         	goto	l4077
  7850   001294                     u3820:
  7851   001294                     
  7852                           ;common.c: 548:             clcd_write(0x01);
  7853   001294  0E01               	movlw	1
  7854   001296  ECF7  F012         	call	_clcd_write
  7855   00129A                     
  7856                           ;common.c: 549:             index = 0;
  7857   00129A  0E00               	movlw	0
  7858   00129C  6E48               	movwf	(_index+1)^0,c
  7859   00129E  0E00               	movlw	0
  7860   0012A0  6E47               	movwf	_index^0,c
  7861   0012A2                     
  7862                           ;common.c: 550:             count = 0;
  7863   0012A2  0E00               	movlw	0
  7864   0012A4  0100               	movlb	0	; () banked
  7865   0012A6  6FAB               	movwf	(_count+1)& (0+255),b
  7866   0012A8  0E00               	movlw	0
  7867   0012AA  6FAA               	movwf	_count& (0+255),b
  7868   0012AC                     
  7869                           ; BSR set to: 0
  7870                           ;common.c: 551:             once = 1;
  7871   0012AC  0E00               	movlw	0
  7872   0012AE  6FCC               	movwf	(_once+1)& (0+255),b
  7873   0012B0  0E01               	movlw	1
  7874   0012B2  6FCB               	movwf	_once& (0+255),b
  7875   0012B4                     
  7876                           ; BSR set to: 0
  7877                           ;common.c: 552:             password = 0;
  7878   0012B4  0E00               	movlw	0
  7879   0012B6  6FA5               	movwf	(_password+1)& (0+255),b
  7880   0012B8  0E00               	movlw	0
  7881   0012BA  6FA4               	movwf	_password& (0+255),b
  7882   0012BC                     l318:
  7883   0012BC  0012               	return		;funcret
  7884   0012BE                     __end_of_change_password:
  7885                           	callstack 0
  7886                           
  7887 ;; *************** function _write_internal_eeprom *****************
  7888 ;; Defined at:
  7889 ;;		line 4 in file "eeprom.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;  address         1    wreg     unsigned char 
  7892 ;;  data            1    6[COMRAM] unsigned char 
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;  address         1    7[COMRAM] unsigned char 
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  1    wreg      void 
  7897 ;; Registers used:
  7898 ;;		wreg, status,2
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7904 ;;      Params:         1       0       0       0       0       0       0
  7905 ;;      Locals:         1       0       0       0       0       0       0
  7906 ;;      Temps:          0       0       0       0       0       0       0
  7907 ;;      Totals:         2       0       0       0       0       0       0
  7908 ;;Total ram usage:        2 bytes
  7909 ;; Hardware stack levels used: 1
  7910 ;; Hardware stack levels required when called: 1
  7911 ;; This function calls:
  7912 ;;		Nothing
  7913 ;; This function is called by:
  7914 ;;		_change_password
  7915 ;;		_over_write
  7916 ;;		_store_event_in_eeprom
  7917 ;;		_init_config
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text29
  7922   002620                     __ptext29:
  7923                           	callstack 0
  7924   002620                     _write_internal_eeprom:
  7925                           	callstack 28
  7926                           
  7927                           ;incstack = 0
  7928                           ;write_internal_eeprom@address stored from wreg
  7929   002620  6E08               	movwf	write_internal_eeprom@address^0,c
  7930   002622                     
  7931                           ;eeprom.c: 4: void write_internal_eeprom(unsigned char address, unsigned char data);eepr
      +                          om.c: 5: {;eeprom.c: 7:  EEADR = address;
  7932   002622  C008  FFA9         	movff	write_internal_eeprom@address,4009	;volatile
  7933   002626                     
  7934                           ;eeprom.c: 10:  EEDATA = data;
  7935   002626  C007  FFA8         	movff	write_internal_eeprom@data,4008	;volatile
  7936   00262A                     
  7937                           ;eeprom.c: 13:  EECON1bits.EEPGD = 0;
  7938   00262A  9EA6               	bcf	166,7,c	;volsfr
  7939   00262C                     
  7940                           ;eeprom.c: 16:  EECON1bits.CFGS = 0;
  7941   00262C  9CA6               	bcf	166,6,c	;volsfr
  7942   00262E                     
  7943                           ;eeprom.c: 19:  EECON1bits.WREN = 1;
  7944   00262E  84A6               	bsf	166,2,c	;volsfr
  7945   002630                     
  7946                           ;eeprom.c: 22:  GIE = 0;
  7947   002630  9EF2               	bcf	4082,7,c	;volatile
  7948   002632                     
  7949                           ;eeprom.c: 25:  EECON2 = 0x55;
  7950   002632  0E55               	movlw	85
  7951   002634  6EA7               	movwf	167,c	;volsfr
  7952   002636                     
  7953                           ;eeprom.c: 26:  EECON2 = 0xAA;
  7954   002636  0EAA               	movlw	170
  7955   002638  6EA7               	movwf	167,c	;volsfr
  7956   00263A                     
  7957                           ;eeprom.c: 29:  EECON1bits.WR = 1;
  7958   00263A  82A6               	bsf	166,1,c	;volsfr
  7959   00263C                     
  7960                           ;eeprom.c: 32:  GIE = 1;
  7961   00263C  8EF2               	bsf	4082,7,c	;volatile
  7962   00263E                     l681:
  7963   00263E  A8A1               	btfss	161,4,c	;volatile
  7964   002640  EF24  F013         	goto	u2121
  7965   002644  EF26  F013         	goto	u2120
  7966   002648                     u2121:
  7967   002648  EF1F  F013         	goto	l681
  7968   00264C                     u2120:
  7969   00264C                     
  7970                           ;eeprom.c: 38:  PIR2bits.EEIF = 0;
  7971   00264C  98A1               	bcf	161,4,c	;volatile
  7972   00264E  0012               	return		;funcret
  7973   002650                     __end_of_write_internal_eeprom:
  7974                           	callstack 0
  7975                           
  7976 ;; *************** function _clcd_print *****************
  7977 ;; Defined at:
  7978 ;;		line 36 in file "clcd.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;  str             2   11[COMRAM] PTR const unsigned char 
  7981 ;;		 -> diplay(120), STR_34(3), STR_33(3), STR_32(3), 
  7982 ;;		 -> STR_31(3), STR_30(14), STR_29(11), STR_28(13), 
  7983 ;;		 -> STR_27(16), STR_26(16), STR_25(13), STR_24(14), 
  7984 ;;		 -> STR_23(9), STR_22(3), STR_21(3), STR_20(3), 
  7985 ;;		 -> change_Time(9), STR_19(13), STR_18(10), STR_16(19), 
  7986 ;;		 -> STR_11(15), STR_10(6), print(12), STR_9(17), 
  7987 ;;		 -> STR_8(16), STR_7(17), STR_6(10), STR_5(17), 
  7988 ;;		 -> STR_4(15), STR_3(16), STR_2(17), gear(36), 
  7989 ;;		 -> time(9), STR_1(17), 
  7990 ;;  addr            1   13[COMRAM] unsigned char 
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;  i               1   16[COMRAM] unsigned char 
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      void 
  7995 ;; Registers used:
  7996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8002 ;;      Params:         3       0       0       0       0       0       0
  8003 ;;      Locals:         1       0       0       0       0       0       0
  8004 ;;      Temps:          2       0       0       0       0       0       0
  8005 ;;      Totals:         6       0       0       0       0       0       0
  8006 ;;Total ram usage:        6 bytes
  8007 ;; Hardware stack levels used: 1
  8008 ;; Hardware stack levels required when called: 3
  8009 ;; This function calls:
  8010 ;;		_clcd_putch
  8011 ;;		_clcd_write
  8012 ;; This function is called by:
  8013 ;;		_display_dashboard
  8014 ;;		_password_screen
  8015 ;;		_view_log
  8016 ;;		_download_log
  8017 ;;		_clear_log
  8018 ;;		_set_times
  8019 ;;		_change_password
  8020 ;;		_display_menu
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023                           
  8024                           	psect	text30
  8025   0021BA                     __ptext30:
  8026                           	callstack 0
  8027   0021BA                     _clcd_print:
  8028                           	callstack 26
  8029   0021BA                     
  8030                           ;clcd.c: 37:     clcd_write(addr);
  8031   0021BA  500E               	movf	clcd_print@addr^0,w,c
  8032   0021BC  ECF7  F012         	call	_clcd_write
  8033   0021C0                     
  8034                           ;clcd.c: 38:     unsigned char i;;clcd.c: 39:     for (i = 0; str[i]!= '\0'; i++) {
  8035   0021C0  0E00               	movlw	0
  8036   0021C2  6E11               	movwf	clcd_print@i^0,c
  8037   0021C4  EF00  F011         	goto	l3015
  8038   0021C8                     l3009:
  8039                           
  8040                           ;clcd.c: 40:         clcd_putch(str[i], addr++);
  8041   0021C8  C00E  F008         	movff	clcd_print@addr,clcd_putch@addr
  8042   0021CC  5011               	movf	clcd_print@i^0,w,c
  8043   0021CE  240C               	addwf	clcd_print@str^0,w,c
  8044   0021D0  6E0F               	movwf	??_clcd_print^0,c
  8045   0021D2  0E00               	movlw	0
  8046   0021D4  200D               	addwfc	(clcd_print@str+1)^0,w,c
  8047   0021D6  6E10               	movwf	(??_clcd_print+1)^0,c
  8048   0021D8  C00F  FFF6         	movff	??_clcd_print,tblptrl
  8049   0021DC  C010  FFF7         	movff	??_clcd_print+1,tblptrh
  8050   0021E0  6AF8               	clrf	tblptru,c
  8051   0021E2  0E05               	movlw	(high __ramtop+-1)
  8052   0021E4  64F7               	cpfsgt	tblptrh,c
  8053   0021E6  D003               	bra	u2297
  8054   0021E8  0008               	tblrd		*
  8055   0021EA  50F5               	movf	tablat,w,c
  8056   0021EC  D005               	bra	u2290
  8057   0021EE                     u2297:
  8058   0021EE  CFF6 FFE9          	movff	tblptrl,fsr0l
  8059   0021F2  CFF7 FFEA          	movff	tblptrh,fsr0h
  8060   0021F6  50EF               	movf	indf0,w,c
  8061   0021F8                     u2290:
  8062   0021F8  ECDB  F012         	call	_clcd_putch
  8063   0021FC  2A0E               	incf	clcd_print@addr^0,f,c
  8064   0021FE                     
  8065                           ;clcd.c: 41:     }
  8066   0021FE  2A11               	incf	clcd_print@i^0,f,c
  8067   002200                     l3015:
  8068   002200  5011               	movf	clcd_print@i^0,w,c
  8069   002202  240C               	addwf	clcd_print@str^0,w,c
  8070   002204  6E0F               	movwf	??_clcd_print^0,c
  8071   002206  0E00               	movlw	0
  8072   002208  200D               	addwfc	(clcd_print@str+1)^0,w,c
  8073   00220A  6E10               	movwf	(??_clcd_print+1)^0,c
  8074   00220C  C00F  FFF6         	movff	??_clcd_print,tblptrl
  8075   002210  C010  FFF7         	movff	??_clcd_print+1,tblptrh
  8076   002214  6AF8               	clrf	tblptru,c
  8077   002216  0E05               	movlw	(high __ramtop+-1)
  8078   002218  64F7               	cpfsgt	tblptrh,c
  8079   00221A  D003               	bra	u2307
  8080   00221C  0008               	tblrd		*
  8081   00221E  50F5               	movf	tablat,w,c
  8082   002220  D005               	bra	u2300
  8083   002222                     u2307:
  8084   002222  CFF6 FFE9          	movff	tblptrl,fsr0l
  8085   002226  CFF7 FFEA          	movff	tblptrh,fsr0h
  8086   00222A  50EF               	movf	indf0,w,c
  8087   00222C                     u2300:
  8088   00222C  0900               	iorlw	0
  8089   00222E  A4D8               	btfss	status,2,c
  8090   002230  EF1C  F011         	goto	u2311
  8091   002234  EF1E  F011         	goto	u2310
  8092   002238                     u2311:
  8093   002238  EFE4  F010         	goto	l3009
  8094   00223C                     u2310:
  8095   00223C  0012               	return		;funcret
  8096   00223E                     __end_of_clcd_print:
  8097                           	callstack 0
  8098                           
  8099 ;; *************** function _clcd_putch *****************
  8100 ;; Defined at:
  8101 ;;		line 26 in file "clcd.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;  data            1    wreg     unsigned char 
  8104 ;;  addr            1    7[COMRAM] unsigned char 
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;  data            1   10[COMRAM] unsigned char 
  8107 ;;  i               2    8[COMRAM] unsigned int 
  8108 ;; Return value:  Size  Location     Type
  8109 ;;                  1    wreg      void 
  8110 ;; Registers used:
  8111 ;;		wreg, status,2, status,0, cstack
  8112 ;; Tracked objects:
  8113 ;;		On entry : 0/0
  8114 ;;		On exit  : 0/0
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8117 ;;      Params:         1       0       0       0       0       0       0
  8118 ;;      Locals:         3       0       0       0       0       0       0
  8119 ;;      Temps:          0       0       0       0       0       0       0
  8120 ;;      Totals:         4       0       0       0       0       0       0
  8121 ;;Total ram usage:        4 bytes
  8122 ;; Hardware stack levels used: 1
  8123 ;; Hardware stack levels required when called: 2
  8124 ;; This function calls:
  8125 ;;		_clcd_write
  8126 ;; This function is called by:
  8127 ;;		_display_dashboard
  8128 ;;		_password_screen
  8129 ;;		_view_log
  8130 ;;		_change_password
  8131 ;;		_clcd_print
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           	psect	text31
  8136   0025B6                     __ptext31:
  8137                           	callstack 0
  8138   0025B6                     _clcd_putch:
  8139                           	callstack 27
  8140                           
  8141                           ;incstack = 0
  8142                           ;clcd_putch@data stored from wreg
  8143   0025B6  6E0B               	movwf	clcd_putch@data^0,c
  8144   0025B8                     
  8145                           ;clcd.c: 27:     clcd_write(addr);
  8146   0025B8  5008               	movf	clcd_putch@addr^0,w,c
  8147   0025BA  ECF7  F012         	call	_clcd_write
  8148   0025BE                     
  8149                           ;clcd.c: 28:     PORTD = data;
  8150   0025BE  C00B  FF83         	movff	clcd_putch@data,3971	;volatile
  8151   0025C2                     
  8152                           ;clcd.c: 29:     RC1 = 1;
  8153   0025C2  8282               	bsf	3970,1,c	;volatile
  8154   0025C4                     
  8155                           ;clcd.c: 30:     RC0 = 0;
  8156   0025C4  9082               	bcf	3970,0,c	;volatile
  8157   0025C6                     
  8158                           ;clcd.c: 31:     RC5 = 1;
  8159   0025C6  8A82               	bsf	3970,5,c	;volatile
  8160   0025C8                     
  8161                           ;clcd.c: 32:     for (unsigned int i = 100; i--;);
  8162   0025C8  0E00               	movlw	0
  8163   0025CA  6E0A               	movwf	(clcd_putch@i+1)^0,c
  8164   0025CC  0E64               	movlw	100
  8165   0025CE  6E09               	movwf	clcd_putch@i^0,c
  8166   0025D0                     l2907:
  8167   0025D0  0609               	decf	clcd_putch@i^0,f,c
  8168   0025D2  A0D8               	btfss	status,0,c
  8169   0025D4  060A               	decf	(clcd_putch@i+1)^0,f,c
  8170   0025D6  2809               	incf	clcd_putch@i^0,w,c
  8171   0025D8  E106               	bnz	u2131
  8172   0025DA  280A               	incf	(clcd_putch@i+1)^0,w,c
  8173   0025DC  A4D8               	btfss	status,2,c
  8174   0025DE  EFF3  F012         	goto	u2131
  8175   0025E2  EFF5  F012         	goto	u2130
  8176   0025E6                     u2131:
  8177   0025E6  EFE8  F012         	goto	l2907
  8178   0025EA                     u2130:
  8179   0025EA                     
  8180                           ;clcd.c: 33:     RC5 = 0;
  8181   0025EA  9A82               	bcf	3970,5,c	;volatile
  8182   0025EC  0012               	return		;funcret
  8183   0025EE                     __end_of_clcd_putch:
  8184                           	callstack 0
  8185                           
  8186 ;; *************** function _clcd_write *****************
  8187 ;; Defined at:
  8188 ;;		line 17 in file "clcd.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;  command         1    wreg     unsigned char 
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;  command         1    2[COMRAM] unsigned char 
  8193 ;;  i               2    0[COMRAM] unsigned int 
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  1    wreg      void 
  8196 ;; Registers used:
  8197 ;;		wreg, status,2, status,0
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/0
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8203 ;;      Params:         0       0       0       0       0       0       0
  8204 ;;      Locals:         3       0       0       0       0       0       0
  8205 ;;      Temps:          0       0       0       0       0       0       0
  8206 ;;      Totals:         3       0       0       0       0       0       0
  8207 ;;Total ram usage:        3 bytes
  8208 ;; Hardware stack levels used: 1
  8209 ;; Hardware stack levels required when called: 1
  8210 ;; This function calls:
  8211 ;;		Nothing
  8212 ;; This function is called by:
  8213 ;;		_password_screen
  8214 ;;		_view_log
  8215 ;;		_download_log
  8216 ;;		_clear_log
  8217 ;;		_set_times
  8218 ;;		_change_password
  8219 ;;		_display_menu
  8220 ;;		_main
  8221 ;;		_init_clcd
  8222 ;;		_clcd_putch
  8223 ;;		_clcd_print
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           	psect	text32
  8228   0025EE                     __ptext32:
  8229                           	callstack 0
  8230   0025EE                     _clcd_write:
  8231                           	callstack 28
  8232                           
  8233                           ;incstack = 0
  8234                           ;clcd_write@command stored from wreg
  8235   0025EE  6E03               	movwf	clcd_write@command^0,c
  8236   0025F0                     
  8237                           ;clcd.c: 18:     PORTD = command;
  8238   0025F0  C003  FF83         	movff	clcd_write@command,3971	;volatile
  8239   0025F4                     
  8240                           ;clcd.c: 19:     RC1 = 0;
  8241   0025F4  9282               	bcf	3970,1,c	;volatile
  8242   0025F6                     
  8243                           ;clcd.c: 20:     RC0 = 0;
  8244   0025F6  9082               	bcf	3970,0,c	;volatile
  8245   0025F8                     
  8246                           ;clcd.c: 21:     RC5 = 1;
  8247   0025F8  8A82               	bsf	3970,5,c	;volatile
  8248   0025FA                     
  8249                           ;clcd.c: 22:     for (unsigned int i = 100; i--;);
  8250   0025FA  0E00               	movlw	0
  8251   0025FC  6E02               	movwf	(clcd_write@i+1)^0,c
  8252   0025FE  0E64               	movlw	100
  8253   002600  6E01               	movwf	clcd_write@i^0,c
  8254   002602                     l2859:
  8255   002602  0601               	decf	clcd_write@i^0,f,c
  8256   002604  A0D8               	btfss	status,0,c
  8257   002606  0602               	decf	(clcd_write@i+1)^0,f,c
  8258   002608  2801               	incf	clcd_write@i^0,w,c
  8259   00260A  E106               	bnz	u2111
  8260   00260C  2802               	incf	(clcd_write@i+1)^0,w,c
  8261   00260E  A4D8               	btfss	status,2,c
  8262   002610  EF0C  F013         	goto	u2111
  8263   002614  EF0E  F013         	goto	u2110
  8264   002618                     u2111:
  8265   002618  EF01  F013         	goto	l2859
  8266   00261C                     u2110:
  8267   00261C                     
  8268                           ;clcd.c: 23:     RC5 = 0;
  8269   00261C  9A82               	bcf	3970,5,c	;volatile
  8270   00261E  0012               	return		;funcret
  8271   002620                     __end_of_clcd_write:
  8272                           	callstack 0
  8273                           
  8274 ;; *************** function _isr *****************
  8275 ;; Defined at:
  8276 ;;		line 4 in file "isr.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;		None
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;		None
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  1    wreg      void 
  8283 ;; Registers used:
  8284 ;;		wreg, status,2, status,0
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8290 ;;      Params:         0       0       0       0       0       0       0
  8291 ;;      Locals:         0       0       0       0       0       0       0
  8292 ;;      Temps:          0       0       0       0       0       0       0
  8293 ;;      Totals:         0       0       0       0       0       0       0
  8294 ;;Total ram usage:        0 bytes
  8295 ;; Hardware stack levels used: 1
  8296 ;; This function calls:
  8297 ;;		Nothing
  8298 ;; This function is called by:
  8299 ;;		Interrupt level 2
  8300 ;; This function uses a non-reentrant model
  8301 ;;
  8302                           
  8303                           	psect	intcode
  8304   000008                     __pintcode:
  8305                           	callstack 0
  8306   000008                     _isr:
  8307                           	callstack 26
  8308                           
  8309                           ;incstack = 0
  8310   000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8311   00000A  ED96  F010         	call	int_func,f	;refresh shadow registers
  8312                           
  8313                           	psect	intcode_body
  8314   00212C                     __pintcode_body:
  8315                           	callstack 26
  8316   00212C                     int_func:
  8317                           	callstack 26
  8318   00212C  0006               	pop		; remove dummy address from shadow register refresh
  8319   00212E                     
  8320                           ;isr.c: 6:  static unsigned short count;;isr.c: 8:  if (TMR0IF)
  8321   00212E  A4F2               	btfss	4082,2,c	;volatile
  8322   002130  EF9C  F010         	goto	i2u412_41
  8323   002134  EF9E  F010         	goto	i2u412_40
  8324   002138                     i2u412_41:
  8325   002138  EFDB  F010         	goto	i2l609
  8326   00213C                     i2u412_40:
  8327   00213C                     
  8328                           ;isr.c: 9:  {;isr.c: 10:   TMR0 = TMR0 + 8;
  8329   00213C  0E08               	movlw	8
  8330   00213E  24D6               	addwf	214,w,c	;volatile
  8331   002140  6ED6               	movwf	214,c	;volatile
  8332   002142  0E00               	movlw	0
  8333   002144  20D7               	addwfc	215,w,c	;volatile
  8334   002146  6ED7               	movwf	215,c	;volatile
  8335                           
  8336                           ;isr.c: 12:   if (count++ == 20000)
  8337   002148  0100               	movlb	0	; () banked
  8338   00214A  4B80               	infsnz	isr@count& (0+255),f,b
  8339   00214C  2B81               	incf	(isr@count+1)& (0+255),f,b
  8340   00214E  0E21               	movlw	33
  8341   002150  1980               	xorwf	isr@count& (0+255),w,b
  8342   002152  E107               	bnz	i2u413_41
  8343   002154  0E4E               	movlw	78
  8344   002156  1981               	xorwf	(isr@count+1)& (0+255),w,b
  8345   002158  A4D8               	btfss	status,2,c
  8346   00215A  EFB1  F010         	goto	i2u413_41
  8347   00215E  EFB3  F010         	goto	i2u413_40
  8348   002162                     i2u413_41:
  8349   002162  EFDA  F010         	goto	i2l4259
  8350   002166                     i2u413_40:
  8351   002166                     
  8352                           ; BSR set to: 0
  8353                           ;isr.c: 13:   {;isr.c: 14:    count = 0;
  8354   002166  0E00               	movlw	0
  8355   002168  6F81               	movwf	(isr@count+1)& (0+255),b
  8356   00216A  0E00               	movlw	0
  8357   00216C  6F80               	movwf	isr@count& (0+255),b
  8358   00216E                     
  8359                           ; BSR set to: 0
  8360                           ;isr.c: 15:             if(SCREEN_FLAG == 1 || MENU_FLAG == 6)
  8361   00216E  044F               	decf	_SCREEN_FLAG^0,w,c
  8362   002170  1050               	iorwf	(_SCREEN_FLAG+1)^0,w,c
  8363   002172  B4D8               	btfsc	status,2,c
  8364   002174  EFBE  F010         	goto	i2u414_41
  8365   002178  EFC0  F010         	goto	i2u414_40
  8366   00217C                     i2u414_41:
  8367   00217C  EFCA  F010         	goto	i2l4255
  8368   002180                     i2u414_40:
  8369   002180                     
  8370                           ; BSR set to: 0
  8371   002180  0E06               	movlw	6
  8372   002182  184D               	xorwf	_MENU_FLAG^0,w,c
  8373   002184  104E               	iorwf	(_MENU_FLAG+1)^0,w,c
  8374   002186  A4D8               	btfss	status,2,c
  8375   002188  EFC8  F010         	goto	i2u415_41
  8376   00218C  EFCA  F010         	goto	i2u415_40
  8377   002190                     i2u415_41:
  8378   002190  EFDA  F010         	goto	i2l4259
  8379   002194                     i2u415_40:
  8380   002194                     i2l4255:
  8381                           
  8382                           ; BSR set to: 0
  8383                           ;isr.c: 16:             {;isr.c: 17:                 --sec;
  8384   002194  0656               	decf	_sec^0,f,c
  8385   002196  A0D8               	btfss	status,0,c
  8386   002198  0657               	decf	(_sec+1)^0,f,c
  8387   00219A                     
  8388                           ; BSR set to: 0
  8389                           ;isr.c: 19:                 blink_f=!blink_f;
  8390   00219A  5196               	movf	_blink_f& (0+255),w,b
  8391   00219C  1197               	iorwf	(_blink_f+1)& (0+255),w,b
  8392   00219E  B4D8               	btfsc	status,2,c
  8393   0021A0  EFD4  F010         	goto	i2u416_41
  8394   0021A4  EFD7  F010         	goto	i2u416_40
  8395   0021A8                     i2u416_41:
  8396   0021A8  0E01               	movlw	1
  8397   0021AA  EFD8  F010         	goto	i2u417_40
  8398   0021AE                     i2u416_40:
  8399   0021AE  0E00               	movlw	0
  8400   0021B0                     i2u417_40:
  8401   0021B0  6F96               	movwf	_blink_f& (0+255),b
  8402   0021B2  6B97               	clrf	(_blink_f+1)& (0+255),b
  8403   0021B4                     i2l4259:
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;isr.c: 23:   TMR0IF = 0;
  8407   0021B4  94F2               	bcf	4082,2,c	;volatile
  8408   0021B6                     i2l609:
  8409   0021B6  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8410   0021B8  0011               	retfie		f
  8411   0021BA                     __end_of_isr:
  8412                           	callstack 0
  8413                           
  8414                           	psect	rparam
  8415   000000                     
  8416                           	psect	temp
  8417   000058                     btemp:
  8418                           	callstack 0
  8419   000058                     	ds	1
  8420   000000                     int$flags	set	btemp
  8421   000000                     wtemp8	set	btemp+1
  8422   000000                     ttemp5	set	btemp+1
  8423   000000                     ttemp6	set	btemp+4
  8424   000000                     ttemp7	set	btemp+8
  8425                           
  8426                           	psect	idloc
  8427                           
  8428                           ;Config register IDLOC0 @ 0x200000
  8429                           ;	unspecified, using default values
  8430   200000                     	org	2097152
  8431   200000  FF                 	db	255
  8432                           
  8433                           ;Config register IDLOC1 @ 0x200001
  8434                           ;	unspecified, using default values
  8435   200001                     	org	2097153
  8436   200001  FF                 	db	255
  8437                           
  8438                           ;Config register IDLOC2 @ 0x200002
  8439                           ;	unspecified, using default values
  8440   200002                     	org	2097154
  8441   200002  FF                 	db	255
  8442                           
  8443                           ;Config register IDLOC3 @ 0x200003
  8444                           ;	unspecified, using default values
  8445   200003                     	org	2097155
  8446   200003  FF                 	db	255
  8447                           
  8448                           ;Config register IDLOC4 @ 0x200004
  8449                           ;	unspecified, using default values
  8450   200004                     	org	2097156
  8451   200004  FF                 	db	255
  8452                           
  8453                           ;Config register IDLOC5 @ 0x200005
  8454                           ;	unspecified, using default values
  8455   200005                     	org	2097157
  8456   200005  FF                 	db	255
  8457                           
  8458                           ;Config register IDLOC6 @ 0x200006
  8459                           ;	unspecified, using default values
  8460   200006                     	org	2097158
  8461   200006  FF                 	db	255
  8462                           
  8463                           ;Config register IDLOC7 @ 0x200007
  8464                           ;	unspecified, using default values
  8465   200007                     	org	2097159
  8466   200007  FF                 	db	255
  8467                           
  8468                           	psect	config
  8469                           
  8470                           ; Padding undefined space
  8471   300000                     	org	3145728
  8472   300000  FF                 	db	255
  8473                           
  8474                           ;Config register CONFIG1H @ 0x300001
  8475                           ;	Oscillator Selection bits
  8476                           ;	OSC = HS, HS oscillator
  8477                           ;	Fail-Safe Clock Monitor Enable bit
  8478                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8479                           ;	Internal/External Oscillator Switchover bit
  8480                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8481   300001                     	org	3145729
  8482   300001  02                 	db	2
  8483                           
  8484                           ;Config register CONFIG2L @ 0x300002
  8485                           ;	Power-up Timer Enable bit
  8486                           ;	PWRT = OFF, PWRT disabled
  8487                           ;	Brown-out Reset Enable bits
  8488                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  8489                           ;	Brown-out Reset Voltage bits
  8490                           ;	BORV = 0, VBOR set to 4.6V
  8491   300002                     	org	3145730
  8492   300002  01                 	db	1
  8493                           
  8494                           ;Config register CONFIG2H @ 0x300003
  8495                           ;	Watchdog Timer Enable bit
  8496                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8497                           ;	Watchdog Timer Postscale Select bits
  8498                           ;	WDTPS = 32768, 1:32768
  8499   300003                     	org	3145731
  8500   300003  1E                 	db	30
  8501                           
  8502                           ; Padding undefined space
  8503   300004                     	org	3145732
  8504   300004  FF                 	db	255
  8505                           
  8506                           ;Config register CONFIG3H @ 0x300005
  8507                           ;	PORTB A/D Enable bit
  8508                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8509                           ;	Low-Power Timer 1 Oscillator Enable bit
  8510                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8511                           ;	MCLR Pin Enable bit
  8512                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  8513   300005                     	org	3145733
  8514   300005  00                 	db	0
  8515                           
  8516                           ;Config register CONFIG4L @ 0x300006
  8517                           ;	Stack Full/Underflow Reset Enable bit
  8518                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  8519                           ;	Single-Supply ICSP Enable bit
  8520                           ;	LVP = OFF, Single-Supply ICSP disabled
  8521                           ;	Boot Block Size Select bit
  8522                           ;	BBSIZ = 1024, 1K words (2K bytes) boot block
  8523                           ;	Extended Instruction Set Enable bit
  8524                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8525                           ;	Background Debugger Enable bit
  8526                           ;	DEBUG = 0x1, unprogrammed default
  8527   300006                     	org	3145734
  8528   300006  80                 	db	128
  8529                           
  8530                           ; Padding undefined space
  8531   300007                     	org	3145735
  8532   300007  FF                 	db	255
  8533                           
  8534                           ;Config register CONFIG5L @ 0x300008
  8535                           ;	Code Protection bit
  8536                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8537                           ;	Code Protection bit
  8538                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8539                           ;	Code Protection bit
  8540                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8541                           ;	Code Protection bit
  8542                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8543   300008                     	org	3145736
  8544   300008  0F                 	db	15
  8545                           
  8546                           ;Config register CONFIG5H @ 0x300009
  8547                           ;	Boot Block Code Protection bit
  8548                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8549                           ;	Data EEPROM Code Protection bit
  8550                           ;	CPD = OFF, Data EEPROM not code-protected
  8551   300009                     	org	3145737
  8552   300009  C0                 	db	192
  8553                           
  8554                           ;Config register CONFIG6L @ 0x30000A
  8555                           ;	Write Protection bit
  8556                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8557                           ;	Write Protection bit
  8558                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8559                           ;	Write Protection bit
  8560                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8561                           ;	Write Protection bit
  8562                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8563   30000A                     	org	3145738
  8564   30000A  0F                 	db	15
  8565                           
  8566                           ;Config register CONFIG6H @ 0x30000B
  8567                           ;	Configuration Register Write Protection bit
  8568                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8569                           ;	Boot Block Write Protection bit
  8570                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8571                           ;	Data EEPROM Write Protection bit
  8572                           ;	WRTD = OFF, Data EEPROM not write-protected
  8573   30000B                     	org	3145739
  8574   30000B  E0                 	db	224
  8575                           
  8576                           ;Config register CONFIG7L @ 0x30000C
  8577                           ;	Table Read Protection bit
  8578                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8579                           ;	Table Read Protection bit
  8580                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8581                           ;	Table Read Protection bit
  8582                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8583                           ;	Table Read Protection bit
  8584                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8585   30000C                     	org	3145740
  8586   30000C  0F                 	db	15
  8587                           
  8588                           ;Config register CONFIG7H @ 0x30000D
  8589                           ;	Boot Block Table Read Protection bit
  8590                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8591   30000D                     	org	3145741
  8592   30000D  40                 	db	64
  8593                           tosu	equ	0xFFF
  8594                           tosh	equ	0xFFE
  8595                           tosl	equ	0xFFD
  8596                           stkptr	equ	0xFFC
  8597                           pclatu	equ	0xFFB
  8598                           pclath	equ	0xFFA
  8599                           pcl	equ	0xFF9
  8600                           tblptru	equ	0xFF8
  8601                           tblptrh	equ	0xFF7
  8602                           tblptrl	equ	0xFF6
  8603                           tablat	equ	0xFF5
  8604                           prodh	equ	0xFF4
  8605                           prodl	equ	0xFF3
  8606                           indf0	equ	0xFEF
  8607                           postinc0	equ	0xFEE
  8608                           postdec0	equ	0xFED
  8609                           preinc0	equ	0xFEC
  8610                           plusw0	equ	0xFEB
  8611                           fsr0h	equ	0xFEA
  8612                           fsr0l	equ	0xFE9
  8613                           wreg	equ	0xFE8
  8614                           indf1	equ	0xFE7
  8615                           postinc1	equ	0xFE6
  8616                           postdec1	equ	0xFE5
  8617                           preinc1	equ	0xFE4
  8618                           plusw1	equ	0xFE3
  8619                           fsr1h	equ	0xFE2
  8620                           fsr1l	equ	0xFE1
  8621                           bsr	equ	0xFE0
  8622                           indf2	equ	0xFDF
  8623                           postinc2	equ	0xFDE
  8624                           postdec2	equ	0xFDD
  8625                           preinc2	equ	0xFDC
  8626                           plusw2	equ	0xFDB
  8627                           fsr2h	equ	0xFDA
  8628                           fsr2l	equ	0xFD9
  8629                           status	equ	0xFD8

Data Sizes:
    Strings     341
    Constant    0
    Data        194
    BSS         126
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      87
    BANK0           160      0     131
    BANK1           256      0     156
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 120
		 -> change_Time(BANK0[9]), diplay(BANK1[120]), gear(BANK1[36]), print(BANK0[12]), 
		 -> STR_1(CODE[17]), STR_10(CODE[6]), STR_11(CODE[15]), STR_16(CODE[19]), 
		 -> STR_18(CODE[10]), STR_19(CODE[13]), STR_2(CODE[17]), STR_20(CODE[3]), 
		 -> STR_21(CODE[3]), STR_22(CODE[3]), STR_23(CODE[9]), STR_24(CODE[14]), 
		 -> STR_25(CODE[13]), STR_26(CODE[16]), STR_27(CODE[16]), STR_28(CODE[13]), 
		 -> STR_29(CODE[11]), STR_3(CODE[16]), STR_30(CODE[14]), STR_31(CODE[3]), 
		 -> STR_32(CODE[3]), STR_33(CODE[3]), STR_34(CODE[3]), STR_4(CODE[15]), 
		 -> STR_5(CODE[17]), STR_6(CODE[10]), STR_7(CODE[17]), STR_8(CODE[16]), 
		 -> STR_9(CODE[17]), time(BANK0[9]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 24
		 -> print(BANK0[12]), STR_12(CODE[16]), STR_13(CODE[3]), STR_14(CODE[3]), 
		 -> STR_15(CODE[3]), STR_17(CODE[24]), 


Critical Paths under _main in COMRAM

    _view_log->_clcd_print
    _set_times->_clcd_print
    _password_screen->_clcd_print
    _init_config->_write_internal_eeprom
    _init_clcd->_clcd_write
    _download_log->_clcd_print
    _puts->_putch
    _display_menu->_clcd_print
    _display_dashboard->___fltol
    _store_event_in_eeprom->_over_write
    _over_write->_write_internal_eeprom
    ___xxtofl->_read_adc
    ___fltol->___fldiv
    ___fldiv->___xxtofl
    _clear_log->_clcd_print
    _change_password->_clcd_print
    _write_internal_eeprom->___wmul
    _clcd_print->_clcd_putch
    _clcd_putch->___lwdiv

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   86173
                    _change_password
                         _clcd_write
                          _clear_log
                  _display_dashboard
                       _display_menu
                       _download_log
                        _init_config
                    _password_screen
                      _read_switches
                          _set_times
              _store_event_in_eeprom
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                             2     2      0   11435
                                             17 COMRAM     2     2      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                         _clcd_print
                         _clcd_putch
                         _clcd_write
               _read_internal_eeprom
                      _read_switches
 ---------------------------------------------------------------------------------
 (1) _set_times                                            4     4      0    9465
                                             17 COMRAM     4     4      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_write
                      _read_switches
 ---------------------------------------------------------------------------------
 (1) _password_screen                                     10    10      0   10718
                                             17 COMRAM    10    10      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
               _read_internal_eeprom
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    1001
                           _init_adc
                          _init_clcd
                 _init_matrix_config
                        _init_timer0
              _write_internal_eeprom
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_config                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0      45
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _download_log                                        11    11      0   10057
                                             17 COMRAM    11    11      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_write
                              _putch
                               _puts
               _read_internal_eeprom
                           _uartinit
 ---------------------------------------------------------------------------------
 (2) _uartinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     523
                                              1 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display_menu                                         0     0      0    7712
                             ___wmul
                         _clcd_print
                         _clcd_write
                      _read_switches
 ---------------------------------------------------------------------------------
 (2) _read_switches                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (3) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_dashboard                                    0     0      0   16496
                            ___fldiv
                            ___fltol
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           ___xxtofl
                         _clcd_print
                         _clcd_putch
                           _read_adc
              _store_event_in_eeprom
 ---------------------------------------------------------------------------------
 (1) _store_event_in_eeprom                                8     8      0    3025
                                             13 COMRAM     8     8      0
                             ___wmul
                         _over_write
              _write_internal_eeprom
 ---------------------------------------------------------------------------------
 (2) _over_write                                           5     3      2    1146
                                              8 COMRAM     5     3      2
               _read_internal_eeprom
              _write_internal_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_internal_eeprom                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     719
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              7 COMRAM    14    10      4
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1223
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1226
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             46 COMRAM    10     6      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             21 COMRAM    25    17      8
                           ___xxtofl (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            4     4      0    6972
                                             17 COMRAM     4     4      0
                         _clcd_print
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _change_password                                     12    12      0    9203
                                             17 COMRAM    12    12      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
              _write_internal_eeprom
 ---------------------------------------------------------------------------------
 (2) _write_internal_eeprom                                2     1      1     956
                                              6 COMRAM     2     1      1
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           6     3      3    6904
                                             11 COMRAM     6     3      3
                             ___wmul (ARG)
                         _clcd_putch
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           4     3      1    1252
                                              7 COMRAM     4     3      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           3     3      0      45
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _change_password
     _clcd_print
       ___wmul (ARG)
       _clcd_putch (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
         _clcd_write (ARG)
       _clcd_write (ARG)
     _clcd_putch
     _clcd_write
     _write_internal_eeprom
       ___wmul (ARG)
   _clcd_write
   _clear_log
     _clcd_print
     _clcd_write
   _display_dashboard
     ___fldiv
       ___xxtofl (ARG)
         _read_adc (ARG)
       _read_adc (ARG)
     ___fltol
       ___fldiv (ARG)
       ___xxtofl (ARG)
       _read_adc (ARG)
     ___lwdiv
     ___lwmod
     ___wmul
     ___xxtofl
     _clcd_print
     _clcd_putch
     _read_adc
     _store_event_in_eeprom
       ___wmul
       _over_write
         _read_internal_eeprom
         _write_internal_eeprom
       _write_internal_eeprom
   _display_menu
     ___wmul
     _clcd_print
     _clcd_write
     _read_switches
       _scan_key
   _download_log
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_write
     _putch
     _puts
       _putch
     _read_internal_eeprom
     _uartinit
   _init_config
     _init_adc
     _init_clcd
       _clcd_write
     _init_matrix_config
     _init_timer0
     _write_internal_eeprom
   _password_screen
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_internal_eeprom
   _read_switches
   _set_times
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_write
     _read_switches
   _store_event_in_eeprom
   _view_log
     ___lwdiv
     ___lwmod
     ___wmul
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_internal_eeprom
     _read_switches

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
BITBIGSFRlll       281      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      9C       7       60.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      83       5       81.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     38      57       1       92.6%
BITBIGSFRhhhlh      1A      0       0      17        0.0%
BITBIGSFRlhhhh      10      0       0      19        0.0%
BITBIGSFRhhhll      10      0       0      18        0.0%
BITBIGSFRllhh        F      0       0      24        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRlhllll      8      0       0      23        0.0%
BITBIGSFRlhllh       4      0       0      21        0.0%
BITBIGSFRlhlllh      2      0       0      22        0.0%
BITBIGSFRlhhl        1      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     176      26        0.0%
DATA                 0      0     176       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 14 11:36:18 2024

                            _M 00A8                   ___fldiv@aexp 002E                   ___fldiv@bexp 002D  
                            _f 0045                   ___fldiv@sign 0026                 clcd_print@addr 000E  
                           l33 26DA                             l36 254A                             _EF 00B0  
                           l39 2576                             _EI 00AF                             _ER 00B2  
                           _GO 7E11                             _ch 00AE                             _ee 00B1  
                           _pk 00A2            ___wmul@multiplicand 0003             _init_matrix_config 272C  
      ??_store_event_in_eeprom 000E                            l222 1870                            l135 0658  
                          l127 0658                            l240 1A88                            l208 15EC  
                          l172 0934                            l165 083A                            l325 12FA  
                          l318 12BC                            l246 2338                            l360 2530  
                          l353 159E                            l265 004E                            l370 1E82  
                          l506 23B2                            l178 0B38                            l282 0302  
                          l339 1412                            l532 261C                            l533 261E  
                          l189 0BDE                            l293 0458                            l277 0232  
                          l527 26BA                            l545 223C                            l721 26F4  
                          l449 25B4                            l538 25EA                            l490 1EF4  
                          l730 24E8                            l706 2718                            l482 2730  
                          l539 25EC                            l491 1F08                            l492 1F1C  
                          l724 2706                            l493 1F30                            l485 1E9E  
                          l742 2674                            l494 1F4A                            l486 1F88  
                          l495 1F5E                            l487 1EB2                            l496 1F72  
                          l488 1EC6                            l681 263E                            l489 1EDA  
                          l666 26F0                            l683 264C                            l684 264E  
                          l687 272A                            _GIE 7F97                            _RC0 7C10  
                          _RC1 7C11                            _RC5 7C15                  ?_display_menu 0001  
                          _PSA 7EAB                            _add 0092                            _arr 0074  
                          _key 0053                            _min 009C                            _sec 0056  
                          _isr 0008                 clcd_putch@addr 0008                 clcd_putch@data 000B  
                          prod 0FF3                            wreg 0FE8            ?_init_matrix_config 0001  
   store_event_in_eeprom@i_208 0012     store_event_in_eeprom@i_209 0014                   ___fltol@exp1 0038  
                         l1039 208E                           l1240 2426                           l1400 1C3C  
                         l1233 241E                           l3001 256E                           l1250 248A  
                         l3011 21FC                           l1243 2482                           l1411 1BD4  
                         l1324 0F78                           l1404 1B78                           l3013 21FE  
                         l3005 21BA                           l3101 24B4                           l1326 0DD8  
                         l3015 2200                           l3007 21C0                           l1335 0E1E  
                         l3031 1DB8                           l3103 24B8                           l3111 26A8  
                         l3009 21C8                           l4001 1096                           l1337 0E96  
                         l1329 0D9C                           l3201 0DA6                           l3041 1DF2  
                         l3033 1DCA                           l3025 1D8E                           l3017 1D6C  
                         l3113 26AE                           l3105 272C                           l3121 26EC  
                         l1338 0E84                           l4003 10A2                           l3211 0DFE  
                         l3203 0DC4                           l3131 0BFC                           l3043 1DF8  
                         l3027 1D9A                           l3019 1D86                           l3035 1DD6  
                         l3115 26B4                           l3107 269A                           l3123 26EE  
                         l4021 112A                           l4005 10B6                           l4013 10EC  
                         l3221 0E3C                           l3213 0E04                           l3205 0DC6  
                         l3133 0C0C                           l3141 0C36                           l3125 0BE0  
                         l3301 206E                           l3061 1E72                           l3053 1E1A  
                         l3045 1DFC                           l3029 1DA2                           l4101 1324  
                         l3109 26A2                           l3117 26DC                           l4023 1130  
                         l4015 1100                           l4031 1154                           l3231 0EA6  
                         l3223 0E40                           l3215 0E0E                           l3207 0DD6  
                         l3151 0C62                           l3143 0C46                           l3135 0C1C  
                         l3127 0BEC                           l3303 207E                           l3311 23CE  
                         l3063 1E7C                           l3055 1E52                           l3047 1E12  
                         l3039 1DDE                           l3071 2362                           l4103 133A  
                         l4111 136E                           l3119 26E4                           l4041 11AE  
                         l4033 1168                           l4025 1136                           l4017 1114  
                         l3241 0F08                           l3233 0EB2                           l3225 0E4E  
                         l3217 0E1C                           l3209 0DE8                           l3153 0C72  
                         l3161 0C9C                           l3145 0C4C                           l3137 0C2C  
                         l3129 0BFA                           l3321 2408                           l3313 23D6  
                         l3057 1E58                           l3401 0504                           l3081 238E  
                         l3073 2374                           l3065 233C                           l4113 1380  
                         l4121 13BA                           l4105 134C                           l4201 1C3E  
                         l4051 11F6                           l4043 11BE                           l4035 1182  
                         l4027 113E                           l4019 111A                           l3251 0F66  
                         l3243 0F1E                           l3235 0EC0                           l3227 0E7C  
                         l3219 0E2E                           l3171 0CDE                           l3163 0CAC  
                         l3155 0C82                           l3147 0C52                           l3139 0C2E  
                         l3323 2410                           l3315 23DE                           l3307 23B4  
                         l3331 243A                           l3059 1E5C                           l3411 055E  
                         l3403 0518                           l3067 234C                           l3083 2398  
                         l4123 13CC                           l4115 1392                           l4107 135E  
                         l4211 1C78                           l4203 1C48                           l4061 121E  
                         l4053 11FE                           l4045 11DE                           l4037 118E  
                         l4029 1148                           l3253 0F6C                           l3245 0F38  
                         l3237 0EEA                           l3165 0CC2                           l3157 0C92  
                         l3149 0C60                           l3325 2412                           l3317 23EC  
                         l3309 23BC                           l3341 2476                           l3333 2442  
                         l1397 1AE0                           l3421 05B6                           l3413 0574  
                         l3405 052A                           l3085 23A8                           l3069 2352  
                         l4141 14A4                           l4125 13DE                           l4117 13A4  
                         l4109 1366                           l4133 1426                           l3093 2708  
                         l3501 0874                           l4221 1CC0                           l4213 1C8C  
                         l4205 1C4C                           l4063 1228                           l4055 1202  
                         l4047 11E4                           l4039 119E                           l4071 1248  
                         l3255 0F6E                           l3247 0F54                           l3239 0EEE  
                         l3191 0D60                           l3183 0D16                           l3167 0CD2  
                         l3175 0CF2                           l3159 0C94                           l3271 1FDE  
                         l3263 1F8A                           l3327 2418                           l3319 23F2  
                         l3343 247C                           l3335 244A                           l3351 1AF0  
                         l3431 0616                           l3423 05CA                           l3415 0580  
                         l3407 053E                           l3079 237E                           l4151 150E  
                         l4143 14CC                           l4135 1438                           l4127 13EA  
                         l4119 13AE                           l3095 270C                           l3511 08AA  
                         l3503 0886                           l4231 1D0C                           l4223 1CD4  
                         l4215 1C9E                           l4207 1C54                           l4081 129A  
                         l4073 1254                           l4065 1232                           l4057 120A  
                         l4049 11EC                           l3249 0F58                           l3193 0D68  
                         l3185 0D30                           l3177 0D02                           l3169 0CDA  
                         l3273 1FE0                           l3265 1FA0                           l3337 2458  
                         l3329 2428                           l3361 1B2E                           l3353 1B06  
                         l3345 1A8C                           l3441 066E                           l3433 0622  
                         l3425 05E0                           l3417 0594                           l3409 054A  
                         l3089 23B0                           l4161 153C                           l4153 1516  
                         l4145 14E6                           l4137 145C                           l4129 13FC  
                         l3097 248C                           l3601 0AB6                           l3521 08D8  
                         l3513 08B0                           l3505 088E                           l4241 1D58  
                         l4233 1D20                           l4225 1CE8                           l4217 1CA6  
                         l4209 1C66                           l4083 12A2                           l4075 1264  
                         l4067 123A                           l4059 1214                           l3195 0D78  
                         l3187 0D40                           l3179 0D02                           l3275 1FF0  
                         l3339 246E                           l3371 1BB6                           l3363 1B60  
                         l3347 1A9C                           l3451 06C8                           l3443 0672  
                         l3435 0636                           l3427 05EC                           l3419 05AA  
                         l4171 157E                           l4155 1526                           l4163 1544  
                         l4147 14F6                           l4139 147C                           l4091 12C6  
                         l3099 2490                           l3611 0B14                           l3603 0AC6  
                         l3531 090C                           l3523 08E0                           l3515 08BA  
                         l3507 0894                           l4243 1D60                           l4235 1D28  
                         l4227 1CF0                           l4219 1CB8                           l2901 25C4  
                         l4085 12AC                           l4077 1274                           l4069 1240  
                         l3197 0D8C                           l3189 0D50                           l3285 201A  
                         l3277 1FF4                           l3269 1FB4                           l3381 1C0C  
                         l3373 1BC4                           l3365 1B62                           l3357 1B1A  
                         l3349 1AAA                           l3461 0712                           l3453 06DA  
                         l3445 0682                           l3437 064C                           l3429 0600  
                         l4173 158A                           l4165 1556                           l4157 152C  
                         l4149 1508                           l4093 12D8                           l4181 2578  
                         l3613 0B1A                           l3605 0AD6                           l3541 0962  
                         l3533 092E                           l3517 08C4                           l3509 08A4  
                         l3525 08E4                           l3621 0B3C                           l3701 17B6  
                         l4237 1D3C                           l4229 1D04                           l2903 25C6  
                         l4087 12B4                           l4079 1294                           l3199 0D9A  
                         l3295 2042                           l3287 2024                           l3279 2002  
                         l3383 1C1C                           l3375 1BE2                           l3367 1B6E  
                         l3359 1B22                           l3471 075A                           l3463 0718  
                         l3455 06EE                           l3447 06A0                           l3439 066A  
                         l3391 045A                           l4167 155C                           l4159 1534  
                         l4095 12EA                           l2911 2702                           l4191 258A  
                         l4183 257C                           l3623 0B42                           l3615 0B22  
                         l3607 0AE4                           l3551 09AA                           l3543 096E  
                         l3535 0938                           l3527 08F6                           l3519 08CE  
                         l3711 1824                           l3703 17C2                           l3631 15A0  
                         l4239 1D44                           l2905 25C8                           l3297 204E  
                         l3289 202E                           l3385 1C2A                           l3377 1BE4  
                         l3369 1BAA                           l2921 2506                           l2913 24EA  
                         l3473 076E                           l3457 0702                           l3465 0720  
                         l3449 06B2                           l3393 0478                           l4169 156E  
                         l4097 12F6                           l4089 12BE                           l3801 1A74  
                         l4193 258C                           l4185 2580                           l3625 0B52  
                         l3617 0B2C                           l3609 0AF4                           l3561 09D8  
                         l3553 09B6                           l3529 0900                           l3537 0944  
                         l3721 1864                           l3713 1840                           l3705 17D0  
                         l3641 15E8                           l3633 15B0                           l2851 25F4  
                         l2907 25D0                           l3811 22DC                           l3299 205E  
                         l3387 1C2C                           l3379 1BE8                           l2923 250C  
                         l3491 080E                           l3467 0732                           l3459 070E  
                         l3483 0790                           l3395 04D0                           l2931 1E98  
                         l4099 1314                           l3803 1A78                           l3731 188E  
                         l4195 2596                           l4187 2584                           l3627 0BA2  
                         l3571 0A14                           l3563 09DC                           l3555 09BE  
                         l3539 0956                           l3723 1868                           l3715 1846  
                         l3707 17F0                           l3651 1672                           l3643 1608  
                         l3635 15B8                           l2853 25F6                           l3813 22FC  
                         l2861 271C                           l2925 2510                           l3493 0826  
                         l3485 07A2                           l3477 0786                           l3469 0748  
                         l3397 04E2                           l2909 26F4                           l3805 1A80  
                         l3741 18F4                           l3733 189E                           l3725 1872  
                         l4197 25A0                           l4189 2588                           l3629 0BB4  
                         l3581 0A6A                           l3573 0A24                           l3565 09E4  
                         l3557 09C6                           l3549 0994                           l3901 02F4  
                         l3821 001A                           l3717 184E                           l3709 1814  
                         l3661 16C0                           l3653 1686                           l3645 1618  
                         l3637 15CA                           l2855 25F8                           l3815 231C  
                         l3807 22BC                           l2871 2728                           l2863 2720  
                         l2927 2514                           l2919 24F2                           l3495 0830  
                         l3487 07CA                           l3399 04F8                           l2951 1F02  
                         l2943 1ED4                           l2935 1EAC                           l3751 192C  
                         l3743 18FE                           l3735 18BE                           l3727 1876  
                         l4199 25AA                           l3591 0A90                           l3583 0A70  
                         l3575 0A34                           l3559 09D0                           l3567 09F0  
                         l3911 034E                           l3903 0312                           l3831 007A  
                         l3823 002C                           l3719 185E                           l3671 1712  
                         l3663 16CC                           l3655 168A                           l3647 162A  
                         l3639 15DC                           l2857 25FA                           l2849 25F0  
                         l2881 262C                           l3817 2332                           l3809 22CC  
                         l2865 2722                           l3489 07EA                           l2929 1E84  
                         l3761 1960                           l3753 1938                           l3745 1908  
                         l3737 18D6                           l3729 187E                           l3593 0A98  
                         l3585 0A78                           l3577 0A44                           l3569 0A08  
                         l3497 083C                           l3921 0378                           l3913 0352  
                         l3905 032E                           l3841 00C0                           l3833 008C  
                         l3825 003E                           l3681 1748                           l3665 16F0  
                         l3649 164E                           l3657 169A                           l3673 1716  
                         l2859 2602                           l2891 263A                           l2883 262E  
                         l2875 2622                           l2867 2724                           l2971 1F6C  
                         l2963 1F44                           l2955 1F16                           l2947 1EEE  
                         l2939 1EC0                           l3771 1996                           l3763 196C  
                         l3755 1944                           l3747 1914                           l3739 18E8  
                         l3587 0A80                           l3579 0A64                           l3595 0AA4  
                         l3499 0858                           l3931 03A8                           l3923 0380  
                         l3915 035C                           l3907 0340                           l3851 0126  
                         l3843 00DC                           l3835 009E                           l3827 004A  
                         l3819 0012                           l3691 1784                           l3683 1754  
                         l3675 1728                           l3667 16F6                           l3659 16AC  
                         l2893 263C                           l2885 2630                           l2877 2626  
                         l2869 2726                           l3781 19EA                           l3773 19A0  
                         l3765 1970                           l3757 1950                           l3749 1920  
                         l3597 0AAA                           l3589 0A88                           l3941 03FE  
                         l3933 03B8                           l3925 0388                           l3917 0364  
                         l3909 0346                           l3861 0180                           l3853 012E  
                         l3837 00A4                           l3845 00F8                           l3829 006A  
                         l3693 1788                           l3685 1760                           l3677 1732  
                         l3669 1702                           l2895 25B8                           l2887 2632  
                         l2879 262A                           l2983 2650                           l2975 1F80  
                         l2967 1F58                           l2959 1F2A                           l3791 1A30  
                         l3783 19F6                           l3775 19A6                           l3767 1982  
                         l3759 1954                           l2991 26D0                           l3599 0AB0  
                         l3951 041C                           l3943 0406                           l3935 03C8  
                         l3919 0368                           l3927 0390                           l3871 01E6  
                         l3863 0194                           l3855 014A                           l3847 010C  
                         l3839 00B8                           l3695 1794                           l3687 176C  
                         l3679 173C                           l2897 25BE                           l2889 2636  
                         l2985 266C                           l3777 19C2                           l3769 198A  
                         l3785 19FA                           l3793 1A54                           l2993 26D8  
                         l3961 0448                           l3953 0424                           l3945 040C  
                         l3937 03D8                           l3929 03A2                           l3873 01FC  
                         l3865 019C                           l3849 0112                           l3857 0166  
                         l3881 0246                           l3697 17A0                           l3689 1778  
                         l2899 25C2                           l3971 0FB2                           l2995 2534  
                         l2979 1F86                           l3795 1A60                           l3787 1A10  
                         l3779 19DE                           l3963 0450                           l3955 042C  
                         l3947 0410                           l3939 03F8                           l3891 0290  
                         l3883 025A                           l3875 0204                           l3867 01B8  
                         l3859 017A                           l3699 17A4                           l3973 0FB8  
                         l3981 0FD8                           l3965 0F7A                           l2997 2548  
                         l3797 1A68                           l3789 1A20                           l2989 26BC  
                         l3957 0430                           l3949 0418                           l3893 02A4  
                         l3885 026A                           l3877 0216                           l3869 01D4  
                         l3991 1046                           l3983 0FEA                           l3975 0FC8  
                         l3967 0F96                           l2999 2558                           l3799 1A6E  
                         l3959 0440                           l3895 02B8                           l3887 0276  
                         l3879 022A                           l3993 104E                           l3985 0FF4  
                         l3977 0FCE                           l3969 0FAA                           l3897 02CC  
                         l3889 027E                           _ADFM 7E07                           l3995 1070  
                         l3987 1000                           l3979 0FD4                           l3899 02E0  
                         ?_isr 0001                           l3989 1014                           l3997 1078  
                         l3999 108A                           _ADON 7E10                           STR_1 7F07  
                         STR_2 7EF6                           STR_3 7F39                           STR_4 7F88  
                         STR_5 7EE5                           STR_6 7FD8                           STR_7 7ED4  
                         STR_8 7F69                           STR_9 7F18                           _T0CS 7EAD  
                         u2110 261C                           u2111 2618                           u2120 264C  
                         u3000 05E0                           u2200 1EEE                           u2121 2648  
                         u3001 05DC                           u2201 1EEA                           u2130 25EA  
                         u3010 0600                           u2210 1F02                           u2131 25E6  
                         u3011 05FC                           u2211 1EFE                           u2300 222C  
                         u3100 06EE                           u3020 0616                           u2220 1F16  
                         u2140 2702                           u3101 06EA                           u3021 0612  
                         u2221 1F12                           u2141 26FE                           u2310 223C  
                         u2150 2530                           u3110 0702                           u3030 0636  
                         u2230 1F2A                           u2311 2238                           u2151 252C  
                         u3111 06FE                           u3031 0632                           u2231 1F26  
                         u2320 1D86                           u3120 0732                           u3040 064C  
                         u2240 1F44                           u2160 1E98                           u2400 23A8  
                         u4000 1556                           u3200 0886                           u2321 1D82  
                         u3121 072E                           u3041 0648                           u2241 1F40  
                         u2161 1E94                           u2401 23A4                           u4001 1552  
                         u3201 0882                           u2330 1DB8                           u3130 0748  
                         u3050 066A                           u2250 1F58                           u2170 1EAC  
                         u4010 156E                           u2410 24B0                           u3210 08F6  
                         u2307 2222                           u2331 1DB4                           u3131 0744  
                         u3051 0666                           u2251 1F54                           u2171 1EA8  
                         u4011 156A                           u3211 08F2                           u2500 0CC2  
                         u2340 1E12                           u3140 075A                           u3060 0682  
                         u2260 1F6C                           u2180 1EC0                           u2420 24D8  
                         u3220 092E                           u3300 15CA                           u4100 1D3C  
                         u4020 1C66                           u2501 0CBE                           u2341 1E0E  
                         u3141 0756                           u3061 067E                           u2261 1F68  
                         u2181 1EBC                           u3221 092A                           u3301 15C6  
                         u4101 1D38                           u4021 1C62                           u2510 0D02  
                         u2350 1E72                           u3150 076E                           u3070 06B2  
                         u2270 1F80                           u2190 1ED4                           u2430 24E8  
                         u3230 0956                           u3310 15DC                           u4110 1D58  
                         u4030 1C78                           u2511 0CFE                           u2351 1E6E  
                         u3151 076A                           u3071 06AE                           u2271 1F7C  
                         u2191 1ED0                           u2431 24E4                           u3231 0952  
                         u3311 15D8                           u4111 1D54                           u4031 1C74  
                         u2600 0E7C                           u2520 0D78                           u2440 0BFA  
                         u2280 2558                           u3160 0782                           u3080 06C8  
                         u2360 234C                           u3240 0990                           u3400 1840  
                         u3320 1608                           u4040 1C9E                           u2601 0E78  
                         u2521 0D74                           u2441 0BF6                           u2281 2554  
                         u3161 077E                           u3081 06C4                           u2361 2348  
                         u2417 24A6                           u3241 098C                           u3401 183C  
                         u3321 1604                           u4041 1C9A                           u2290 21F8  
                         u2610 0E92                           u2530 0D9A                           u2450 0C0C  
                         u3170 07A2                           u3090 06DA                           u2370 2362  
                         u3410 18BE                           u3250 09AA                           u3330 1618  
                         u4050 1CB8                           u2611 0E8E                           u2531 0D96  
                         u2451 0C08                           u3171 079E                           u3091 06D6  
                         u2371 235E                           u2427 24CE                           u3411 18BA  
                         u3251 09A6                           u3331 1614                           u4051 1CB4  
                         u2620 0EA6                           u2540 0DC4                           u2460 0C1C  
                         u2700 2016                           u2380 2374                           u3420 18E8  
                         u3260 0A08                           u3180 0858                           u3500 008C  
                         u3340 162A                           u4060 1CD4                           u2621 0EA2  
                         u2541 0DC0                           u2461 0C18                           u2701 2012  
                         u2381 2370                           u3421 18E4                           u3261 0A04  
                         u3181 0854                           u3501 0088                           u3341 1626  
                         u4061 1CD0                           u2630 0EC0                           u2550 0DE8  
                         u2470 0C60                           u2710 203E                           u2390 238E  
                         u3430 1A10                           u3270 0A64                           u3190 0874  
                         u3510 009E                           u3350 164E                           u4070 1CE8  
                         u2631 0EBC                           u2551 0DE4                           u2471 0C5C  
                         u2711 203A                           u2391 238A                           u3431 1A0C  
                         u3271 0A60                           u3191 0870                           u3511 009A  
                         u3351 164A                           u4071 1CE4                           u2640 0F08  
                         u2560 0DFE                           u2480 0C72                           u2720 205E  
                         u2800 1A9C                           u3440 1A50                           u3280 0B14  
                         u3600 022A                           u3520 00B8                           u3360 1672  
                         u4080 1D04                           u2297 21EE                           u2641 0F04  
                         u2561 0DFA                           u2481 0C6E                           u2721 205A  
                         u2801 1A98                           u3441 1A4C                           u3281 0B10  
                         u3601 0226                           u3521 00B4                           u3361 166E  
                         u4081 1D00                           u3450 231C                           u2650 0F38  
                         u2570 0E1C                           u2490 0C82                           u2730 206E  
                         u2810 1AAA                           u3290 0BB4                           u3610 025A  
                         u3530 010C                           u3370 16AC                           u4090 1D20  
                         u3451 2318                           u2651 0F34                           u2571 0E18  
                         u2491 0C7E                           u2731 206A                           u2811 1AA6  
                         u3291 0BB0                           u3611 0256                           u3531 0108  
                         u3371 16A8                           u4091 1D1C                           u3700 0FAA  
                         u2660 0F66                           u2580 0E3C                           u2740 23CE  
                         u2820 1B06                           u2900 04E2                           u3620 0290  
                         u3540 0126                           u3460 002C                           u3380 16C0  
                         u3701 0FA6                           u2661 0F62                           u2581 0E38  
                         u2741 23CA                           u2821 1B02                           u2901 04DE  
                         u3621 028C                           u3541 0122                           u3461 0028  
                         u3381 16BC                           u3710 0FEA                           u2590 0E4E  
                         u2670 1FA0                           u2750 23EC                           u2830 1B5C  
                         u2910 04F8                           u3630 02B8                           u3550 017A  
                         u3470 003E                           u3390 1728                           u3711 0FE6  
                         u2591 0E4A                           u2671 1F9C                           u2751 23E8  
                         u2831 1B58                           u2911 04F4                           u3631 02B4  
                         u3551 0176                           u3471 003A                           u3391 1724  
                         u3800 1182                           u3720 1014                           u2680 1FD4  
                         u2760 2408                           u2840 1BA6                           u2920 0518  
                         u3640 02E0                           u3560 0194                           u3480 006A  
                         u3801 117E                           u3721 1010                           u2761 2404  
                         u2841 1BA2                           u2921 0514                           u3641 02DC  
                         u3561 0190                           u3481 0066                           u3810 11DE  
                         u3730 1046                           u2690 2002                           u2770 243A  
                         u2850 1BC4                           u2930 052A                           u3650 032E  
                         u3570 01E6                           u3490 007A                           u3811 11DA  
                         u3731 1042                           u2691 1FFE                           u2771 2436  
                         u2851 1BC0                           u2931 0526                           u3651 032A  
                         u3571 01E2                           u3491 0076                           _PEIE 7F96  
                         u3820 1294                           u3740 108A                           u2780 2458  
                         u2860 1BD4                           u2940 053E                           u3900 1380  
                         u3660 0340                           u3580 01FC                           u3821 1290  
                         u3741 1086                           u2685 1FCA                           u2781 2454  
                         u2861 1BD0                           u2941 053A                           u3901 137C  
                         u3661 033C                           u3581 01F8                           u3750 10B6  
                         u2790 246E                           u2870 1BE2                           u2950 055E  
                         u3910 1392                           u3830 12D8                           u3670 03A2  
                         u3590 0216                           u3751 10B2                           u2791 246A  
                         u2871 1BDE                           u2951 055A                           u3911 138E  
                         u3831 12D4                           u3671 039E                           u3591 0212  
                         u3760 10E8                           u2880 1C1C                           u2960 0574  
                         u3920 13A4                           u3840 12EA                           u3680 03F8  
                         u3761 10E4                           u2881 1C18                           u2961 0570  
                         u3921 13A0                           u3841 12E6                           u3681 03F4  
                         u3770 1100                           u3690 0F96                           u2890 1C2A  
                         u2970 0594                           u3930 13CC                           u3850 1314  
                         u3771 10FC                           u3691 0F92                           u2891 1C26  
                         u2971 0590                           u3931 13C8                           u3851 1310  
                         u3780 1114                           u2980 05AA                           u3940 13DE  
                         u3860 1324                           _RCIF 7CF5                           u3781 1110  
                         u2981 05A6                           u3941 13DA                           u3861 1320  
                         u3790 1168                           u2990 05CA                           u3950 13FC  
                         u3870 133A                           u3791 1164                           u2991 05C6  
                         u3951 13F8                           u3871 1336                           u3960 140E  
                         u3880 134C                           u3961 140A                           u3881 1348  
                         u3970 1438                           u3890 135E                           u3971 1434  
                         u3891 135A                           u3980 14E6                           u3981 14E2  
                         u3990 1508                           u3991 1504                           _TMR0 0FD6  
                         _TXIF 7CF4                           _gear 0178                           _flag 00D0  
                         _main 1C3E                           _menu 00A6                           _hour 009A  
                         _once 00CB                           _pass 0070                           _wait 006C  
                         _time 00DA                           fsr0h 0FEA                           fsr1h 0FE2  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 0058                           _puts 248C  
             password_screen@y 0014                           prodh 0FF4                           prodl 0FF3  
                         start 000E                ___fldiv@new_exp 0027           ??_init_matrix_config 0001  
                 ___param_bank 0000                   over_write@ch 000B                          ??_isr 0001  
                ___fltol@sign1 0037                 ??_display_menu 0012                          _ADCS0 7E00  
                        _ADCS1 7E01                          _ADCS2 7E02                          ?_main 0001  
              __end_of___fldiv 0F7A                          _ACQT0 7E03                          _ACQT1 7E04  
                        _ACQT2 7E05                          _EEADR 0FA9                          STR_10 7FF5  
                        STR_11 7F79                          STR_20 7EE2                          STR_12 7F29  
                        STR_13 7F36                          STR_21 7EE2                          STR_22 7EE2  
                        STR_14 7EE2                          STR_30 7F97                          STR_15 7F36  
                        STR_31 7FFB                          STR_23 7FEC                          STR_32 7EE2  
                        STR_24 7FA5                          STR_16 7EC1                          STR_33 7EE2  
                        STR_25 7FC0                          STR_17 7EA9                          STR_34 7FFB  
                        STR_18 7FE2                          STR_26 7F59                          STR_19 7FC0  
                        STR_27 7F49                          STR_28 7FB3                          STR_29 7FCD  
              __end_of___fltol 2090                          _BLINK 0098                          ?_puts 0002  
                        _FILED 0041                          _ARROW 003D                __end_of___lwdiv 2428  
              __end_of___lwmod 248C                   ?_init_config 0001                          i2l609 21B6  
                        _VCFG0 7E0C                          _VCFG1 7E0D                          _RCREG 0FAE  
                        _RCSTA 0FAB                          _SPBRG 0FAF                          _PORTD 0F83  
                        _TRISB 0F93                          _TRISC 0F94                          _TRISD 0F95  
                        _TXREG 0FAD                          _TXSTA 0FAC                   ?_init_timer0 0001  
                        _Event 00A0                          _delay 0039                          _count 00AA  
                        _index 0047                          _dummy 0060                          _print 00B3  
                        _putch 26F2                _change_password 0F7A             _chance@common$F244 00C9  
           _chance@common$F430 00C1             _chance@common$F395 00C5                          tablat 0FF5  
                        puts@s 0002                          ttemp5 0059                          ttemp6 005C  
                        ttemp7 0060                          status 0FD8                          wtemp8 0059  
      ??_write_internal_eeprom 0008                __initialization 223E                   __end_of_main 1D6C  
                 __end_of_puts 24EA                  ?_download_log 0001                         ??_main 0039  
                       ??_puts 0004                  __activetblptr 0002                         _ADCON0 0FC2  
             read_switches@key 0051                         _ADRESH 0FC4                         _ADRESL 0FC3  
                       _EEDATA 0FA8                         _EECON2 0FA7                         _T08BIT 7EAE  
                       ?_putch 0001                         _GODONE 7E11                         i2l4251 216E  
                       i2l4253 2180                         i2l4245 212E                         i2l4255 2194  
                       i2l4247 213C                         i2l4257 219A                         i2l4249 2166  
                       i2l4259 21B4                         _TMR0IE 7F95                         _TMR0IF 7F92  
                       _TMR0ON 7EAF               __end_of___xxtofl 1C3E                         ___wmul 2650  
                    ??___fldiv 001E                         _chance 00CD                      ??___fltol 0033  
                    ??___lwdiv 0005                         _diplay 0100                      ??___lwmod 0005  
             __end_of_init_adc 26DC               __end_of_read_adc 2578                         clear_0 229C  
                       clear_1 22A8                 ??_download_log 0012                         _second 00AC  
                       isa$std 0001               __end_of_scan_key 1F8A                   __pdataCOMRAM 0056  
      __end_of_change_password 12BE              ??_password_screen 0012                   __mediumconst 7EA8  
             __end_of_uartinit 271A                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8               __end_of_view_log 1872                   ___xxtofl@arg 0012  
                 ___xxtofl@exp 0011                   ___xxtofl@val 0008                     __accesstop 0060  
      __end_of__initialization 22AE           __end_of_display_menu 15A0                  ___rparam_used 0001  
                   ___fltol@f1 002F                 __pcstackCOMRAM 0001                   __pidataBANK0 2676  
                 __pidataBANK1 2090                  __end_of_putch 2708  __end_of_store_event_in_eeprom 1E84  
                      ??_putch 0001                     __pbssBANK0 0060                     _clcd_print 21BA  
                   _clcd_putch 25B6                     _clcd_write 25EE              _count@common$F245 008C  
            _count@common$F431 007A              _count@common$F396 0084                        ?___wmul 0001  
            read_switches@once 00CF                      ?___xxtofl 0008               ?_change_password 0001  
                      _NEW_KEY 0052                  _read_switches 233A           __end_of_download_log 1A8A  
  read_internal_eeprom@address 0001                      ?_init_adc 0001                      ?_read_adc 0001  
            __end_of_clear_log 233A                        _M_index 003F                      ?_scan_key 0001  
__end_of_write_internal_eeprom 2650                        __Hparam 0000                        __Lparam 0000  
                    ?_uartinit 0001                        ___fldiv 0BE0                      ?_view_log 0001  
                      ___fltol 1F8A                        ___lwdiv 23B4                        ___lwmod 2428  
                      _address 0043                        __pcinit 223E                        _g_index 0049  
                      __ramtop 0600                        _blink_f 0096                        __ptext0 1C3E  
                      __ptext1 15A0                        __ptext2 0012                        __ptext3 083C  
                      __ptext4 2578                        __ptext5 26DC                        __ptext6 272C  
                      __ptext7 269A                        __ptext8 26BC                        __ptext9 1872  
            __end_of_init_clcd 26BC                     ??___xxtofl 000C      write_internal_eeprom@data 0007  
               ?_read_switches 0001                 __pintcode_body 212C           end_of_initialization 22AE  
          _g_index@common$F243 008E            _g_index@common$F429 007C            _g_index@common$F394 0086  
                    _MENU_FLAG 004D                     clear_log@y 0012                     ??_init_adc 0001  
                __Lmediumconst 7EA8                     ??_read_adc 0003                        int_func 212C  
            __end_of_set_times 045A                     ??_scan_key 0001                    ?_clcd_print 000C  
                  ?_clcd_putch 0008                    ?_clcd_write 0001                     ??_uartinit 0001  
                      postdec1 0FE5                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE                _password_screen 083C  
                   ??_view_log 0012                      _PORTBbits 0F81                read_adc@channel 0007  
                 _display_menu 12BE                     _over_write 24EA                  ___xxtofl@sign 0010  
                    _TRISCbits 0F94                read_adc@reg_val 0005                    ___fldiv@grs 0029  
                  ___fldiv@rem 0022                  clcd_print@str 000C                    over_write@i 0009  
                  over_write@j 000C   __end_of_read_internal_eeprom 272C              clcd_write@command 0003  
               __end_of___wmul 2676                  __pidataCOMRAM 2732            start_initialization 223E  
              ??_read_switches 0001                    __end_of_isr 21BA              _speed@common$F106 004B  
            _speed@common$F242 0090              _speed@common$F428 007E              _speed@common$F393 0088  
      __end_of_password_screen 0BE0               change_password@y 0016                       ??___wmul 0005  
         change_password@y_192 001A                    __pdataBANK0 00BF                    __pdataBANK1 0100  
                 _download_log 1872    read_switches@detection_type 0001                  ??_init_config 0009  
                  ?_over_write 0009                      ___fldiv@a 001A                      ___fldiv@b 0016  
                  _change_Time 00D1                  ??_init_timer0 0001                    __pbssCOMRAM 0039  
        _store_event_in_eeprom 1D6C               ___lwdiv@dividend 0001                      _clear_log 22BC  
                    __pintcode 0008                  __pmediumconst 7EA8                       ?___fldiv 0016  
                     ?___fltol 002F              _display_dashboard 045A                       ?___lwdiv 0001  
                    _clock_set 0068                       ?___lwmod 0001             ?_display_dashboard 0001  
          ??_display_dashboard 0039               ___lwdiv@quotient 0005                      _init_clcd 269A  
          __end_of_init_config 25B6           _read_internal_eeprom 271A            __end_of_init_timer0 26F2  
               ___wmul@product 0005     __end_of_init_matrix_config 2732               ?_password_screen 0001  
                 ??_clcd_print 000F                   ??_clcd_putch 0009                     set_times@y 0012  
                 ??_clcd_write 0001                       i2u412_40 213C                       i2u412_41 2138  
                     i2u413_40 2166                       i2u413_41 2162                       i2u414_40 2180  
                     i2u414_41 217C                       i2u415_40 2194                       i2u415_41 2190  
                     i2u416_40 21AE                       i2u416_41 21A8                       i2u417_40 21B0  
                     _PIR2bits 0FA1                     ?_clear_log 0001      __end_of_display_dashboard 083C  
                    _set_times 0012          _write_internal_eeprom 2620              _index@common$F246 008A  
            _index@common$F432 0078              _index@common$F397 0082                  download_log@i 001B  
                download_log@y 0013              ___wmul@multiplier 0001               _once@common$F247 00C7  
             _once@common$F433 00BF               _once@common$F398 00C3         ?_store_event_in_eeprom 0001  
                    _store_add 009E             __end_of_clcd_print 223E             __end_of_clcd_putch 25EE  
           __end_of_clcd_write 2620                     ?_init_clcd 0001          ?_read_internal_eeprom 0001  
                    copy_data0 2252                      copy_data1 2272                     _EECON1bits 0FA6  
                     __Hrparam 0000                       __Lrparam 0000                     ?_set_times 0001  
                  _init_config 2578                       ___xxtofl 1A8A         store_event_in_eeprom@i 0010  
                  _init_timer0 26DC                ___lwdiv@divisor 0003                ___lwdiv@counter 0007  
                     __ptext10 2708                       __ptext11 248C                       __ptext20 2650  
                     __ptext12 26F2                       __ptext21 2532                       __ptext13 12BE  
                     __ptext30 21BA                       __ptext22 1A8A                       __ptext14 233A  
                     __ptext31 25B6                       __ptext23 2428                       __ptext15 1E84  
                     __ptext32 25EE                       __ptext24 23B4                       __ptext16 045A  
                     __ptext25 1F8A                       __ptext17 1D6C                       __ptext26 0BE0  
                     __ptext18 24EA                       __ptext27 22BC                       __ptext19 271A  
                     __ptext28 0F7A                       __ptext29 2620                    _SCREEN_FLAG 004F  
                     _main_key 0094                       _init_adc 26BC                       _read_adc 2532  
                     _scan_key 1E84                       _password 00A4         ?_write_internal_eeprom 0007  
                  ??_clear_log 0012              ??_change_password 0012                    _no_of_event 0054  
                     isa$xinst 0000                       _uartinit 2708                       int$flags 0058  
                     _view_log 15A0                    clcd_print@i 0011           password_screen@y_138 0018  
                  clcd_putch@i 0009                    clcd_write@i 0001                   ??_over_write 000B  
                    putch@byte 0001                       isr@count 0080         ??_read_internal_eeprom 0001  
                  ??_init_clcd 0004          __end_of_read_switches 23B4                       intlevel2 0000  
             ___lwmod@dividend 0001             __end_of_over_write 2532                    ??_set_times 0012  
              ___lwmod@divisor 0003                ___lwmod@counter 0005              download_log@y_163 0017  
 write_internal_eeprom@address 0008  
